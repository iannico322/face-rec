import{c as _2,r as v1,j as U0}from"./index-3d7eb75b.js";const J5=_2("Pause",[["rect",{width:"4",height:"16",x:"6",y:"4",key:"iffhe4"}],["rect",{width:"4",height:"16",x:"14",y:"4",key:"sjin7j"}]]),Q5=_2("Play",[["polygon",{points:"5 3 19 12 5 21 5 3",key:"191637"}]]),Z5=_2("RotateCcw",[["path",{d:"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8",key:"1357e3"}],["path",{d:"M3 3v5h5",key:"1xhq8a"}]]);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var k4=function(r,n){return(k4=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(r,n)};function x1(r,n){function e(){this.constructor=r}k4(r,n),r.prototype=n===null?Object.create(n):(e.prototype=n.prototype,new e)}function X(r,n,e,t){return new(e||(e=Promise))(function(o,a){function i(c){try{u(t.next(c))}catch(l){a(l)}}function s(c){try{u(t.throw(c))}catch(l){a(l)}}function u(c){c.done?o(c.value):new e(function(l){l(c.value)}).then(i,s)}u((t=t.apply(r,n||[])).next())})}function Y(r,n){var e,t,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function s(u){return function(c){return function(l){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,t&&(o=2&l[0]?t.return:l[0]?t.throw||((o=t.return)&&o.call(t),0):t.next)&&!(o=o.call(t,l[1])).done)return o;switch(t=0,o&&(l=[2&l[0],o.value]),l[0]){case 0:case 1:o=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,t=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(l[0]===6||l[0]===2)){i=0;continue}if(l[0]===3&&(!o||l[1]>o[0]&&l[1]<o[3])){i.label=l[1];break}if(l[0]===6&&i.label<o[1]){i.label=o[1],o=l;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(l);break}o[2]&&i.ops.pop(),i.trys.pop();continue}l=n.call(r,i)}catch(h){l=[6,h],t=0}finally{e=o=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var e6=function(){function r(n){this.global=n,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return r.prototype.setPlatform=function(n,e){this.platform!=null&&console.warn("Platform "+this.platformName+" has already been set. Overwriting the platform with "+e+"."),this.platformName=n,this.platform=e},r.prototype.registerFlag=function(n,e,t){if(this.flagRegistry[n]={evaluationFn:e,setHook:t},this.urlFlags[n]!=null){var o=this.urlFlags[n];console.warn("Setting feature override from URL "+n+": "+o+"."),this.set(n,o)}},r.prototype.get=function(n){return n in this.flags?this.flags[n]:(this.flags[n]=this.evaluateFlag(n),this.flags[n])},r.prototype.getNumber=function(n){return this.get(n)},r.prototype.getBool=function(n){return this.get(n)},r.prototype.getFlags=function(){return this.flags},Object.defineProperty(r.prototype,"features",{get:function(){return this.flags},enumerable:!0,configurable:!0}),r.prototype.set=function(n,e){if(this.flagRegistry[n]==null)throw new Error("Cannot set flag "+n+" as it has not been registered.");this.flags[n]=e,this.flagRegistry[n].setHook!=null&&this.flagRegistry[n].setHook(e)},r.prototype.evaluateFlag=function(n){if(this.flagRegistry[n]==null)throw new Error("Cannot evaluate flag '"+n+"': no evaluation function found.");return this.flagRegistry[n].evaluationFn()},r.prototype.setFlags=function(n){this.flags=Object.assign({},n)},r.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},r.prototype.populateURLFlags=function(){var n=this;if(this.global!==void 0&&this.global.location!==void 0&&this.global.location.search!==void 0){var e,t,o=(e=this.global.location.search,t={},e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(a){for(var i=[],s=1;s<arguments.length;s++)i[s-1]=arguments[s];return t6(t,i[0],i[1]),i.join("=")}),t);"tfjsflags"in o&&o.tfjsflags.split(",").forEach(function(a){var i=a.split(":"),s=i[0],u=i[1];n.urlFlags[s]=function(c,l){if((l=l.toLowerCase())==="true"||l==="false")return l==="true";if(""+ +l===l)return+l;throw new Error("Could not parse value flag value "+l+" for flag "+c+".")}(s,u)})}},r}();function t6(r,n,e){r[decodeURIComponent(n)]=decodeURIComponent(e||"")}function P(){return S4}var S4=null,Pt=new Map,e2=new Map;function A4(r,n){var e=M4(r,n);return Pt.get(e)}function n6(r){return e2.get(r)}function k3(r){for(var n=Pt.entries(),e=[];;){var t=n.next(),o=t.done,a=t.value;if(o)break;var i=a[0],s=a[1];i.split("_")[0]===r&&e.push(s)}return e}function D4(r){var n=r.kernelName,e=r.backendName,t=M4(n,e);if(Pt.has(t))throw new Error("The kernel '"+n+"' for backend '"+e+"' is already registered");Pt.set(t,r)}function r6(r){var n=r.kernelName;e2.has(n)&&console.warn("Overriding the gradient for '"+n+"'"),e2.set(n,r)}function M4(r,n){return n+"_"+r}function t2(r,n,e){return Math.max(r,Math.min(n,e))}function T4(r){return r%2==0?r:r+1}function o6(r){for(var n=0,e=0;e<r.length;e++)n+=r[e];return n}function E(r,n){if(!r)throw new Error(typeof n=="string"?n:n())}function y0(r,n,e){e===void 0&&(e=""),E(W0(r,n),function(){return e+" Shapes "+r+" and "+n+" must match"})}function qe(r){E(r!=null,function(){return"The input to the tensor constructor must be a non-null value."})}function Ge(r,n,e){if(n===void 0&&(n=[]),e===void 0&&(e=!1),n==null&&(n=[]),Array.isArray(r)||D1(r)&&!e)for(var t=0;t<r.length;++t)Ge(r[t],n,e);else n.push(r);return n}function $(r){if(r.length===0)return 1;for(var n=r[0],e=1;e<r.length;e++)n*=r[e];return n}function W0(r,n){if(r===n)return!0;if(r==null||n==null||r.length!==n.length)return!1;for(var e=0;e<r.length;e++)if(r[e]!==n[e])return!1;return!0}function A0(r){return r%1==0}function a6(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;var n=Math.exp(2*r);return(n-1)/(n+1)}function n2(r){var n=Math.ceil(Math.sqrt(r));return[n,Math.ceil(r/n)]}function Pe(r,n){return n<=r.length?r:r+" ".repeat(n-r.length)}function S3(r,n,e){return n===void 0&&(n=function(t){return 0}),new Promise(function(t,o){var a=0,i=function(){if(r())t();else{a++;var s=n(a);e!=null&&a>=e?o():setTimeout(i,s)}};i()})}function i6(r,n){for(var e=1,t=-1,o=0;o<r.length;++o)if(r[o]>=0)e*=r[o];else if(r[o]===-1){if(t!==-1)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+t+" and dim "+o);t=o}else if(r[o]<0)throw Error("Shapes can not be < 0. Found "+r[o]+" at dim "+o);if(t===-1){if(n>0&&n!==e)throw Error("Size("+n+") must match the product of shape "+r);return r}if(e===0)throw Error("Cannot infer the missing size in ["+r+"] when there are 0 elements");if(n%e!=0)throw Error("The implicit shape can't be a fractional number. Got "+n+" / "+e);var a=r.slice();return a[t]=n/e,a}function B0(r,n){var e=n.length;return E((r=r==null?n.map(function(t,o){return o}):[].concat(r)).every(function(t){return t>=-e&&t<e}),function(){return"All values in axis param must be in range [-"+e+", "+e+") but got axis "+r}),E(r.every(function(t){return A0(t)}),function(){return"All values in axis param must be integers but got axis "+r}),r.map(function(t){return t<0?e+t:t})}function pe(r,n){for(var e=[],t=[],o=n!=null&&Array.isArray(n)&&n.length===0,a=n==null||o?null:B0(n,r).sort(),i=0,s=0;s<r.length;++s){if(a!=null){if(a[i]===s&&r[s]!==1)throw new Error("Can't squeeze axis "+s+" since its dim '"+r[s]+"' is not 1");(a[i]==null||a[i]>s)&&r[s]===1&&(e.push(r[s]),t.push(s)),a[i]<=s&&i++}r[s]!==1&&(e.push(r[s]),t.push(s))}return{newShape:e,keptDims:t}}function nt(r,n){var e=null;if(r==null||r==="float32")e=new Float32Array(n);else if(r==="int32")e=new Int32Array(n);else{if(r!=="bool")throw new Error("Unknown data type "+r);e=new Uint8Array(n)}return e}function Ot(r,n){var e=null;if(r==null||r==="float32")e=new Float32Array(n);else if(r==="int32")e=new Int32Array(n);else if(r==="bool")e=new Uint8Array(n);else{if(r!=="string")throw new Error("Unknown data type "+r);e=new Array(n)}return e}function s6(r,n){for(var e=0;e<r.length;e++){var t=r[e];if(isNaN(t)||!isFinite(t))throw Error("A tensor of type "+n+" being uploaded contains "+t+".")}}function u6(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function c6(r,n){return n!=="complex64"&&(n!=="float32"||r==="complex64")&&(n!=="int32"||r==="float32"||r==="complex64")&&(n!=="bool"||r!=="bool")}function D1(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array}function N4(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error("Unknown dtype "+r)}function l6(r){if(r==null)return 0;var n=0;return r.forEach(function(e){return n+=e.length}),n}function E2(r){return typeof r=="string"||r instanceof String}function h6(r){return typeof r=="boolean"}function f6(r){return typeof r=="number"}function ht(r){return Array.isArray(r)?ht(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array?"int32":f6(r)?"float32":E2(r)?"string":h6(r)?"bool":"float32"}function r2(r){return!!(r&&r.constructor&&r.call&&r.apply)}function o2(r,n){for(var e=n;e<r;++e)if(r%e==0)return e;return r}function M1(r){var n=r.length;if(n<2)return[];var e=new Array(n-1);e[n-2]=r[n-1];for(var t=n-3;t>=0;--t)e[t]=e[t+1]*r[t+1];return e}function F4(r,n,e){if(n==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Ge(r)),e&&s6(r,n),function(a,i){return a instanceof Float32Array&&i==="float32"||a instanceof Int32Array&&i==="int32"||a instanceof Uint8Array&&i==="bool"}(r,n))return r;if(n==null||n==="float32"||n==="complex64")return new Float32Array(r);if(n==="int32")return new Int32Array(r);if(n==="bool"){for(var t=new Uint8Array(r.length),o=0;o<t.length;++o)Math.round(r[o])!==0&&(t[o]=1);return t}throw new Error("Unknown data type "+n)}function A3(r,n){if(r.length===0)return n[0];var e=r.reduce(function(t,o){return t*o});if(e===0)return[];if(e!==n.length)throw new Error("["+r+"] does not match the input size.");return function t(o,a,i){var s=new Array;if(a.length===1)for(var u=a[0],c=0;c<u;c++)s[c]=i[o+c];else{u=a[0];var l=a.slice(1),h=l.reduce(function(f,p){return f*p});for(c=0;c<u;c++)s[c]=t(o+c*h,l,i)}return s}(0,r,n)}function P4(r,n){for(var e=ft(r,n),t=0;t<e.length;t++)e[t]=1;return e}function ft(r,n){if(n==null||n==="float32"||n==="complex64")return new Float32Array(r);if(n==="int32")return new Int32Array(r);if(n==="bool")return new Uint8Array(r);throw new Error("Unknown data type "+n)}function R1(){return P().platform.now()}function O4(r){r.forEach(function(n){E(Number.isInteger(n)&&n>=0,function(){return"Tensor must have a shape comprised of positive integers but got shape ["+r+"]."})})}function p6(r,n){return n===void 0&&(n="utf-8"),n=n||"utf-8",P().platform.encode(r,n)}function Bt(r,n){return n===void 0&&(n="utf-8"),n=n||"utf-8",P().platform.decode(r,n)}function D3(r,n,e){if(n===0)return 0;if(n===1)return r[0];for(var t=r[r.length-1],o=0;o<r.length-1;++o)t+=e[o]*r[o];return t}function d6(r,n,e){if(n===0)return[];if(n===1)return[r];for(var t=new Array(n),o=0;o<t.length-1;++o)t[o]=Math.floor(r/e[o]),r-=t[o]*e[o];return t[t.length-1]=r,t}var v6=function(){function r(n,e){this.backendTimer=n,this.logger=e,e==null&&(this.logger=new m6)}return r.prototype.profileKernel=function(n,e,t){var o,a=this,i=this.backendTimer.time(function(){o=t()});return o.forEach(function(s){s.data().then(function(u){(function(c,l,h){if(l!=="float32")return!1;for(var f=0;f<c.length;f++){var p=c[f];if(isNaN(p)||!isFinite(p))return console.warn("Found "+p+" in the result of '"+h+"'"),!0}})(u,s.dtype,n),i.then(function(c){var l="";c.getExtraProfileInfo!=null&&(l=c.getExtraProfileInfo()),a.logger.logKernelProfile(n,s,u,c.kernelMs,e,l)})})}),o},r}(),m6=function(){function r(){}return r.prototype.logKernelProfile=function(n,e,t,o,a,i){var s=typeof o=="number"?Pe(o+"ms",9):o.error,u=Pe(n,25),c=e.rank,l=e.size,h=Pe(e.shape.toString(),14),f="";for(var p in a){var d=a[p].shape||e.shape,m=d.length;f+=p+": "+m+"D "+(m>0?d:"")+" "}console.log("%c"+u+"	%c"+s+"	%c"+c+"D "+h+"	%c"+l+"	%c"+f+"	%c"+i,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")},r}(),M3=20,Xe=3,kn=7;function g6(r,n,e,t){var o=M1(n),a=function(c,l,h,f){var p=$(l),d=f[f.length-1],m=new Array(d).fill(0),v=l.length,g=h==="complex64"?$e(c):c;if(v>1)for(var x=0;x<p/d;x++)for(var b=x*d,y=0;y<d;y++)m[y]=Math.max(m[y],Ye(g[b+y],0,h).length);return m}(r,n,e,o),i=n.length,s=function c(l,h,f,p,d,m){m===void 0&&(m=!0);var v=f==="complex64"?2:1,g=h[0],x=h.length;if(x===0)return f==="complex64"?[Ye($e(l)[0],0,f)]:f==="bool"?[B4(l[0])]:[l[0].toString()];if(x===1){if(g>M3){var b=Xe*v,y=Array.from(l.slice(0,b)),w=Array.from(l.slice((g-Xe)*v,g*v));return f==="complex64"&&(y=$e(y),w=$e(w)),["["+y.map(function(B,U){return Ye(B,d[U],f)}).join(", ")+", ..., "+w.map(function(B,U){return Ye(B,d[g-Xe+U],f)}).join(", ")+"]"]}return["["+(f==="complex64"?$e(l):Array.from(l)).map(function(B,U){return Ye(B,d[U],f)}).join(", ")+"]"]}var C=h.slice(1),S=p.slice(1),k=p[0]*v,I=[];if(g>M3){for(var R=0;R<Xe;R++){var T=(D=R*k)+k;I.push.apply(I,c(l.slice(D,T),C,f,S,d,!1))}for(I.push("..."),R=g-Xe;R<g;R++)T=(D=R*k)+k,I.push.apply(I,c(l.slice(D,T),C,f,S,d,R===g-1))}else for(R=0;R<g;R++){var D;T=(D=R*k)+k,I.push.apply(I,c(l.slice(D,T),C,f,S,d,R===g-1))}var L=x===2?",":"";for(I[0]="["+I[0]+L,R=1;R<I.length-1;R++)I[R]=" "+I[R]+L;var O=`,
`;for(R=2;R<x;R++)O+=`
`;return I[I.length-1]=" "+I[I.length-1]+"]"+(m?"":O),I}(r,n,e,o,a),u=["Tensor"];return t&&(u.push("  dtype: "+e),u.push("  rank: "+i),u.push("  shape: ["+n+"]"),u.push("  values:")),u.push(s.map(function(c){return"    "+c}).join(`
`)),u.join(`
`)}function Ye(r,n,e){return Pe(Array.isArray(r)?parseFloat(r[0].toFixed(kn))+" + "+parseFloat(r[1].toFixed(kn))+"j":E2(r)?"'"+r+"'":e==="bool"?B4(r):parseFloat(r.toFixed(kn)).toString(),n)}function B4(r){return r===0?"false":"true"}function $e(r){for(var n=[],e=0;e<r.length;e+=2)n.push([r[e],r[e+1]]);return n}var rt=function(){function r(n,e,t){var o=this;if(this.dtype=e,this.shape=n.slice(),this.size=$(n),t!=null){var a=t.length;E(a===this.size,function(){return"Length of values '"+a+"' does not match the size inferred by the shape '"+o.size+"'."})}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=t||Ot(e,this.size),this.strides=M1(n)}return r.prototype.set=function(n){for(var e=this,t=[],o=1;o<arguments.length;o++)t[o-1]=arguments[o];t.length===0&&(t=[0]),E(t.length===this.rank,function(){return"The number of provided coordinates ("+t.length+") must match the rank ("+e.rank+")"});var a=this.locToIndex(t);this.values[a]=n},r.prototype.get=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];n.length===0&&(n=[0]);for(var t=0,o=0,a=n;o<a.length;o++){var i=a[o];if(i<0||i>=this.shape[t]){var s="Requested out of range element at "+n+".   Buffer shape="+this.shape;throw new Error(s)}t++}for(var u=n[n.length-1],c=0;c<n.length-1;++c)u+=this.strides[c]*n[c];return this.values[u]},r.prototype.locToIndex=function(n){if(this.rank===0)return 0;if(this.rank===1)return n[0];for(var e=n[n.length-1],t=0;t<n.length-1;++t)e+=this.strides[t]*n[t];return e},r.prototype.indexToLoc=function(n){if(this.rank===0)return[];if(this.rank===1)return[n];for(var e=new Array(this.shape.length),t=0;t<e.length-1;++t)e[t]=Math.floor(n/this.strides[t]),n-=e[t]*this.strides[t];return e[e.length-1]=n,e},Object.defineProperty(r.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),r.prototype.toTensor=function(){return k1().makeTensor(this.values,this.shape,this.dtype)},r}(),k1=null,F=null,L4=null,E0=function(){function r(n,e,t,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=n.slice(),this.dtype=e||"float32",this.size=$(n),this.strides=M1(n),this.dataId=t,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}return r.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},r.prototype.asScalar=function(){return this.throwIfDisposed(),E(this.size===1,function(){return"The array must have only 1 element."}),this.reshape([])},r.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},r.prototype.as2D=function(n,e){return this.throwIfDisposed(),this.reshape([n,e])},r.prototype.as3D=function(n,e,t){return this.throwIfDisposed(),this.reshape([n,e,t])},r.prototype.as4D=function(n,e,t,o){return this.throwIfDisposed(),this.reshape([n,e,t,o])},r.prototype.as5D=function(n,e,t,o,a){return this.throwIfDisposed(),this.reshape([n,e,t,o,a])},r.prototype.asType=function(n){return this.throwIfDisposed(),F.cast(this,n)},Object.defineProperty(r.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),r.prototype.buffer=function(){return X(this,void 0,void 0,function(){var n;return Y(this,function(e){switch(e.label){case 0:return[4,this.data()];case 1:return n=e.sent(),[2,F.buffer(this.shape,this.dtype,n)]}})})},r.prototype.bufferSync=function(){return F.buffer(this.shape,this.dtype,this.dataSync())},r.prototype.array=function(){return X(this,void 0,void 0,function(){var n;return Y(this,function(e){switch(e.label){case 0:return[4,this.data()];case 1:return n=e.sent(),[2,A3(this.shape,n)]}})})},r.prototype.arraySync=function(){return A3(this.shape,this.dataSync())},r.prototype.data=function(){return X(this,void 0,void 0,function(){var n,e;return Y(this,function(t){switch(t.label){case 0:return this.throwIfDisposed(),n=k1().read(this.dataId),this.dtype!=="string"?[3,2]:[4,n];case 1:e=t.sent();try{return[2,e.map(function(o){return Bt(o)})]}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}t.label=2;case 2:return[2,n]}})})},r.prototype.dataSync=function(){this.throwIfDisposed();var n=k1().readSync(this.dataId);if(this.dtype==="string")try{return n.map(function(e){return Bt(e)})}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return n},r.prototype.bytes=function(){return X(this,void 0,void 0,function(){var n;return Y(this,function(e){switch(e.label){case 0:return this.throwIfDisposed(),[4,k1().read(this.dataId)];case 1:return n=e.sent(),this.dtype==="string"?[2,n]:[2,new Uint8Array(n.buffer)]}})})},r.prototype.dispose=function(){this.isDisposed||(k1().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(r.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),r.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},r.prototype.toFloat=function(){return this.asType("float32")},r.prototype.toInt=function(){return this.asType("int32")},r.prototype.toBool=function(){return this.asType("bool")},r.prototype.print=function(n){return n===void 0&&(n=!1),F.print(this,n)},r.prototype.reshape=function(n){return this.throwIfDisposed(),F.reshape(this,n)},r.prototype.reshapeAs=function(n){return this.throwIfDisposed(),this.reshape(n.shape)},r.prototype.expandDims=function(n){return n===void 0&&(n=0),F.expandDims(this,n)},r.prototype.cumsum=function(n,e,t){return n===void 0&&(n=0),e===void 0&&(e=!1),t===void 0&&(t=!1),F.cumsum(this,n,e,t)},r.prototype.squeeze=function(n){return this.throwIfDisposed(),F.squeeze(this,n)},r.prototype.clone=function(){return this.throwIfDisposed(),F.clone(this)},r.prototype.oneHot=function(n,e,t){return this.throwIfDisposed(),F.oneHot(this,n,e,t)},r.prototype.toString=function(n){return n===void 0&&(n=!1),g6(this.dataSync(),this.shape,this.dtype,n)},r.prototype.tile=function(n){return this.throwIfDisposed(),F.tile(this,n)},r.prototype.gather=function(n,e){return e===void 0&&(e=0),this.throwIfDisposed(),F.gather(this,n,e)},r.prototype.matMul=function(n,e,t){return e===void 0&&(e=!1),t===void 0&&(t=!1),this.throwIfDisposed(),F.matMul(this,n,e,t)},r.prototype.dot=function(n){return this.throwIfDisposed(),F.dot(this,n)},r.prototype.norm=function(n,e,t){return n===void 0&&(n="euclidean"),e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),F.norm(this,n,e,t)},r.prototype.slice=function(n,e){return this.throwIfDisposed(),F.slice(this,n,e)},r.prototype.reverse=function(n){return this.throwIfDisposed(),F.reverse(this,n)},r.prototype.concat=function(n,e){return e===void 0&&(e=0),this.throwIfDisposed(),n instanceof r&&(n=[n]),F.concat([this].concat(n),e)},r.prototype.split=function(n,e){return e===void 0&&(e=0),this.throwIfDisposed(),F.split(this,n,e)},r.prototype.stack=function(n,e){return e===void 0&&(e=0),F.stack([this,n],e)},r.prototype.unstack=function(n){return n===void 0&&(n=0),F.unstack(this,n)},r.prototype.pad=function(n,e){return e===void 0&&(e=0),F.pad(this,n,e)},r.prototype.batchNormalization=function(n,e,t,o,a){return t===void 0&&(t=.001),L4("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"),this.batchNorm(n,e,a,o,t)},r.prototype.batchNorm=function(n,e,t,o,a){return a===void 0&&(a=.001),this.throwIfDisposed(),F.batchNorm(this,n,e,t,o,a)},r.prototype.all=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.all(this,n,e)},r.prototype.any=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.any(this,n,e)},r.prototype.logSumExp=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.logSumExp(this,n,e)},r.prototype.sum=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.sum(this,n,e)},r.prototype.prod=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.prod(this,n,e)},r.prototype.mean=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.mean(this,n,e)},r.prototype.min=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.min(this,n,e)},r.prototype.max=function(n,e){return n===void 0&&(n=null),e===void 0&&(e=!1),this.throwIfDisposed(),F.max(this,n,e)},r.prototype.argMin=function(n){return n===void 0&&(n=null),this.throwIfDisposed(),F.argMin(this,n)},r.prototype.argMax=function(n){return n===void 0&&(n=null),this.throwIfDisposed(),F.argMax(this,n)},r.prototype.cast=function(n){return this.throwIfDisposed(),F.cast(this,n)},r.prototype.add=function(n){return this.throwIfDisposed(),F.add(this,n)},r.prototype.addStrict=function(n){return this.throwIfDisposed(),F.addStrict(this,n)},r.prototype.atan2=function(n){return this.throwIfDisposed(),F.atan2(this,n)},r.prototype.sub=function(n){return this.throwIfDisposed(),F.sub(this,n)},r.prototype.subStrict=function(n){return this.throwIfDisposed(),F.subStrict(this,n)},r.prototype.pow=function(n){return this.throwIfDisposed(),F.pow(this,n)},r.prototype.powStrict=function(n){return this.throwIfDisposed(),F.powStrict(this,n)},r.prototype.mul=function(n){return this.throwIfDisposed(),F.mul(this,n)},r.prototype.mulStrict=function(n){return this.throwIfDisposed(),F.mulStrict(this,n)},r.prototype.div=function(n){return this.throwIfDisposed(),F.div(this,n)},r.prototype.divNoNan=function(n){return this.throwIfDisposed(),F.divNoNan(this,n)},r.prototype.floorDiv=function(n){return this.throwIfDisposed(),F.floorDiv(this,n)},r.prototype.divStrict=function(n){return this.throwIfDisposed(),F.divStrict(this,n)},r.prototype.minimum=function(n){return this.throwIfDisposed(),F.minimum(this,n)},r.prototype.minimumStrict=function(n){return this.throwIfDisposed(),F.minimumStrict(this,n)},r.prototype.maximum=function(n){return this.throwIfDisposed(),F.maximum(this,n)},r.prototype.maximumStrict=function(n){return this.throwIfDisposed(),F.maximumStrict(this,n)},r.prototype.mod=function(n){return this.throwIfDisposed(),F.mod(this,n)},r.prototype.modStrict=function(n){return this.throwIfDisposed(),F.modStrict(this,n)},r.prototype.squaredDifferenceStrict=function(n){return this.throwIfDisposed(),F.squaredDifferenceStrict(this,n)},r.prototype.transpose=function(n){return this.throwIfDisposed(),F.transpose(this,n)},r.prototype.notEqual=function(n){return this.throwIfDisposed(),F.notEqual(this,n)},r.prototype.notEqualStrict=function(n){return this.throwIfDisposed(),F.notEqualStrict(this,n)},r.prototype.less=function(n){return this.throwIfDisposed(),F.less(this,n)},r.prototype.lessStrict=function(n){return this.throwIfDisposed(),F.lessStrict(this,n)},r.prototype.equal=function(n){return this.throwIfDisposed(),F.equal(this,n)},r.prototype.equalStrict=function(n){return this.throwIfDisposed(),F.equalStrict(this,n)},r.prototype.lessEqual=function(n){return this.throwIfDisposed(),F.lessEqual(this,n)},r.prototype.lessEqualStrict=function(n){return this.throwIfDisposed(),F.lessEqualStrict(this,n)},r.prototype.greater=function(n){return this.throwIfDisposed(),F.greater(this,n)},r.prototype.greaterStrict=function(n){return this.throwIfDisposed(),F.greaterStrict(this,n)},r.prototype.greaterEqual=function(n){return this.throwIfDisposed(),F.greaterEqual(this,n)},r.prototype.greaterEqualStrict=function(n){return this.throwIfDisposed(),F.greaterEqualStrict(this,n)},r.prototype.logicalAnd=function(n){return this.throwIfDisposed(),F.logicalAnd(this,n)},r.prototype.logicalOr=function(n){return this.throwIfDisposed(),F.logicalOr(this,n)},r.prototype.logicalNot=function(){return this.throwIfDisposed(),F.logicalNot(this)},r.prototype.logicalXor=function(n){return this.throwIfDisposed(),F.logicalXor(this,n)},r.prototype.where=function(n,e){return this.throwIfDisposed(),F.where(n,this,e)},r.prototype.neg=function(){return this.throwIfDisposed(),F.neg(this)},r.prototype.ceil=function(){return this.throwIfDisposed(),F.ceil(this)},r.prototype.floor=function(){return this.throwIfDisposed(),F.floor(this)},r.prototype.sign=function(){return this.throwIfDisposed(),F.sign(this)},r.prototype.isNaN=function(){return this.throwIfDisposed(),F.isNaN(this)},r.prototype.isInf=function(){return this.throwIfDisposed(),F.isInf(this)},r.prototype.isFinite=function(){return this.throwIfDisposed(),F.isFinite(this)},r.prototype.exp=function(){return this.throwIfDisposed(),F.exp(this)},r.prototype.expm1=function(){return this.throwIfDisposed(),F.expm1(this)},r.prototype.log=function(){return this.throwIfDisposed(),F.log(this)},r.prototype.log1p=function(){return this.throwIfDisposed(),F.log1p(this)},r.prototype.sqrt=function(){return this.throwIfDisposed(),F.sqrt(this)},r.prototype.rsqrt=function(){return this.throwIfDisposed(),F.rsqrt(this)},r.prototype.square=function(){return this.throwIfDisposed(),F.square(this)},r.prototype.reciprocal=function(){return this.throwIfDisposed(),F.reciprocal(this)},r.prototype.abs=function(){return this.throwIfDisposed(),F.abs(this)},r.prototype.clipByValue=function(n,e){return this.throwIfDisposed(),F.clipByValue(this,n,e)},r.prototype.relu=function(){return this.throwIfDisposed(),F.relu(this)},r.prototype.relu6=function(){return this.throwIfDisposed(),F.relu6(this)},r.prototype.elu=function(){return this.throwIfDisposed(),F.elu(this)},r.prototype.selu=function(){return this.throwIfDisposed(),F.selu(this)},r.prototype.leakyRelu=function(n){return n===void 0&&(n=.2),this.throwIfDisposed(),F.leakyRelu(this,n)},r.prototype.prelu=function(n){return this.throwIfDisposed(),F.prelu(this,n)},r.prototype.sigmoid=function(){return this.throwIfDisposed(),F.sigmoid(this)},r.prototype.logSigmoid=function(){return this.throwIfDisposed(),F.logSigmoid(this)},r.prototype.softplus=function(){return this.throwIfDisposed(),F.softplus(this)},r.prototype.zerosLike=function(){return this.throwIfDisposed(),F.zerosLike(this)},r.prototype.onesLike=function(){return this.throwIfDisposed(),F.onesLike(this)},r.prototype.sin=function(){return this.throwIfDisposed(),F.sin(this)},r.prototype.cos=function(){return this.throwIfDisposed(),F.cos(this)},r.prototype.tan=function(){return this.throwIfDisposed(),F.tan(this)},r.prototype.asin=function(){return this.throwIfDisposed(),F.asin(this)},r.prototype.acos=function(){return this.throwIfDisposed(),F.acos(this)},r.prototype.atan=function(){return this.throwIfDisposed(),F.atan(this)},r.prototype.sinh=function(){return this.throwIfDisposed(),F.sinh(this)},r.prototype.cosh=function(){return this.throwIfDisposed(),F.cosh(this)},r.prototype.tanh=function(){return this.throwIfDisposed(),F.tanh(this)},r.prototype.asinh=function(){return this.throwIfDisposed(),F.asinh(this)},r.prototype.acosh=function(){return this.throwIfDisposed(),F.acosh(this)},r.prototype.atanh=function(){return this.throwIfDisposed(),F.atanh(this)},r.prototype.erf=function(){return this.throwIfDisposed(),F.erf(this)},r.prototype.round=function(){return this.throwIfDisposed(),F.round(this)},r.prototype.step=function(n){return n===void 0&&(n=0),this.throwIfDisposed(),F.step(this,n)},r.prototype.softmax=function(n){return n===void 0&&(n=-1),this.throwIfDisposed(),F.softmax(this,n)},r.prototype.logSoftmax=function(n){return n===void 0&&(n=-1),this.throwIfDisposed(),F.logSoftmax(this,n)},r.prototype.resizeBilinear=function(n,e){return e===void 0&&(e=!1),this.throwIfDisposed(),F.image.resizeBilinear(this,n,e)},r.prototype.resizeNearestNeighbor=function(n,e){return e===void 0&&(e=!1),this.throwIfDisposed(),F.image.resizeNearestNeighbor(this,n,e)},r.prototype.conv1d=function(n,e,t,o,a,i){return o===void 0&&(o="NWC"),a===void 0&&(a=1),this.throwIfDisposed(),F.conv1d(this,n,e,t,o,a,i)},r.prototype.conv2d=function(n,e,t,o,a,i){return o===void 0&&(o="NHWC"),a===void 0&&(a=[1,1]),this.throwIfDisposed(),F.conv2d(this,n,e,t,o,a,i)},r.prototype.conv2dTranspose=function(n,e,t,o,a){return this.throwIfDisposed(),F.conv2dTranspose(this,n,e,t,o,a)},r.prototype.depthwiseConv2D=function(n,e,t,o,a,i){return o===void 0&&(o="NHWC"),a===void 0&&(a=[1,1]),this.throwIfDisposed(),F.depthwiseConv2d(this,n,e,t,o,a,i)},r.prototype.separableConv2d=function(n,e,t,o,a,i){return a===void 0&&(a=[1,1]),i===void 0&&(i="NHWC"),this.throwIfDisposed(),F.separableConv2d(this,n,e,t,o,a,i)},r.prototype.avgPool=function(n,e,t,o){return this.throwIfDisposed(),F.avgPool(this,n,e,t,o)},r.prototype.maxPool=function(n,e,t,o){return this.throwIfDisposed(),F.maxPool(this,n,e,t,o)},r.prototype.localResponseNormalization=function(n,e,t,o){return n===void 0&&(n=5),e===void 0&&(e=1),t===void 0&&(t=1),o===void 0&&(o=.5),F.localResponseNormalization(this,n,e,t,o)},r.prototype.pool=function(n,e,t,o,a){return this.throwIfDisposed(),F.pool(this,n,e,t,o,a)},r.prototype.variable=function(n,e,t){return n===void 0&&(n=!0),this.throwIfDisposed(),k1().makeVariable(this,n,e,t)},r.prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),F.unsortedSegmentSum(this,n,e)},r.prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),F.batchToSpaceND(this,n,e)},r.prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),F.spaceToBatchND(this,n,e)},r.prototype.topk=function(n,e){return n===void 0&&(n=1),e===void 0&&(e=!0),this.throwIfDisposed(),F.topk(this,n,e)},r.prototype.stridedSlice=function(n,e,t,o,a,i,s,u){return o===void 0&&(o=0),a===void 0&&(a=0),i===void 0&&(i=0),s===void 0&&(s=0),u===void 0&&(u=0),this.throwIfDisposed(),F.stridedSlice(this,n,e,t,o,a,i,s,u)},r.prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),F.depthToSpace(this,n,e)},r.prototype.fft=function(){return this.throwIfDisposed(),F.spectral.fft(this)},r.prototype.ifft=function(){return this.throwIfDisposed(),F.spectral.ifft(this)},r.prototype.rfft=function(){return this.throwIfDisposed(),F.spectral.rfft(this)},r.prototype.irfft=function(){return this.throwIfDisposed(),F.spectral.irfft(this)},r}();Object.defineProperty(E0,Symbol.hasInstance,{value:function(r){return!!r&&r.dataId!=null&&r.shape!=null&&r.dtype!=null}});var T3,a2,i2,s2,u2,ze=function(r){function n(e,t,o,a){var i=r.call(this,e.shape,e.dtype,e.dataId,a)||this;return i.trainable=t,i.name=o,i}return x1(n,r),n.prototype.assign=function(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value ("+e.dtype+") and previous value ("+this.dtype+") must match");if(!W0(e.shape,this.shape))throw new Error("shape of the new value ("+e.shape+") and previous value ("+this.shape+") must match");k1().disposeTensor(this),this.dataId=e.dataId,k1().incRef(this,null)},n.prototype.dispose=function(){k1().disposeVariable(this),this.isDisposedInternal=!0},n}(E0);Object.defineProperty(ze,Symbol.hasInstance,{value:function(r){return r instanceof E0&&r.assign!=null&&r.assign instanceof Function}}),function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"}(T3||(T3={})),function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"}(a2||(a2={})),function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"}(i2||(i2={})),function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"}(s2||(s2={})),function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"}(u2||(u2={}));var y6={float32:s2,int32:a2,bool:i2,complex64:u2};function z0(r,n){if(r==="string"||n==="string"){if(r==="string"&&n==="string")return"string";throw new Error("Can not upcast "+r+" with "+n)}return y6[r][n]}function Sn(r){return z0(r,"int32")}function R0(r,n){if(r.dtype===n.dtype)return[r,n];var e=z0(r.dtype,n.dtype);return[r.cast(e),n.cast(e)]}function x6(r,n){E(r.dtype===n.dtype,function(){return"The dtypes of the first("+r.dtype+") and second("+n.dtype+") input must match"})}function W4(r){var n=[];return function e(t,o,a){if(t!=null){if(t instanceof E0)return void o.push(t);if(i=t,!(!Array.isArray(i)&&typeof i!="object")){var i,s=t;for(var u in s){var c=s[u];a.has(c)||(a.add(c),e(c,o,a))}}}}(r,n,new Set),n}var An,N3=function(){function r(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return r.prototype.dispose=function(){for(var n in this.registeredVariables)this.registeredVariables[n].dispose()},r}(),b6=function(){function r(n){this.ENV=n,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new N3}return r.prototype.ready=function(){return X(this,void 0,void 0,function(){var n,e,t;return Y(this,function(o){switch(o.label){case 0:if(this.pendingBackendInit!=null)return[2,this.pendingBackendInit.then(function(){})];if(this.backendInstance!=null)return[2];n=this.getSortedBackends(),e=0,o.label=1;case 1:return e<n.length?(t=n[e],[4,this.initializeBackend(t).success]):[3,5];case 2:return o.sent()?[4,this.setBackend(t)]:[3,4];case 3:return o.sent(),[2];case 4:return e++,[3,1];case 5:throw new Error("Could not initialize any backends, all backend initializations failed.")}})})},Object.defineProperty(r.prototype,"backend",{get:function(){if(this.pendingBackendInit!=null)throw new Error("Backend '"+this.backendName+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");if(this.backendInstance==null){var n=this.initializeBackendsAndReturnBest(),e=n.name;if(n.asyncInit)throw new Error("The highest priority backend '"+e+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance},enumerable:!0,configurable:!0}),r.prototype.backendNames=function(){return Object.keys(this.registryFactory)},r.prototype.findBackend=function(n){return!(n in this.registry)&&(!(n in this.registryFactory)||this.initializeBackend(n).asyncInit)?null:this.registry[n]},r.prototype.findBackendFactory=function(n){return n in this.registryFactory?this.registryFactory[n].factory:null},r.prototype.registerBackend=function(n,e,t){return t===void 0&&(t=1),n in this.registryFactory?(console.warn(n+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[n]={factory:e,priority:t},!0)},r.prototype.setBackend=function(n){return X(this,void 0,void 0,function(){var e,t,o;return Y(this,function(a){switch(a.label){case 0:if(this.registryFactory[n]==null)throw new Error("Backend name '"+n+"' not found in registry");return this.backendName=n,this.registry[n]!=null?[3,4]:(this.backendInstance=null,e=this.initializeBackend(n),t=e.success,e.asyncInit?[4,t]:[3,2]);case 1:return o=a.sent(),[3,3];case 2:o=t,a.label=3;case 3:if(!o)return[2,!1];a.label=4;case 4:return this.backendInstance=this.registry[n],this.setupRegisteredKernels(),this.profiler=new v6(this.backendInstance),[2,!0]}})})},r.prototype.setupRegisteredKernels=function(){var n=this;k3(this.backendName).forEach(function(e){e.setupFunc!=null&&e.setupFunc(n.backendInstance)})},r.prototype.disposeRegisteredKernels=function(n){var e=this;k3(n).forEach(function(t){t.disposeFunc!=null&&t.disposeFunc(e.registry[n])})},r.prototype.initializeBackend=function(n){var e=this,t=this.registryFactory[n];if(t==null)throw new Error("Cannot initialize backend "+n+", no registration found.");try{var o=t.factory();if(Promise.resolve(o)===o){var a=++this.pendingBackendInitId,i=o.then(function(s){return!(a<e.pendingBackendInitId)&&(e.registry[n]=s,e.pendingBackendInit=null,!0)}).catch(function(s){return!(a<e.pendingBackendInitId)&&(e.pendingBackendInit=null,console.warn("Initialization of backend "+n+" failed"),console.warn(s.stack||s.message),!1)});return this.pendingBackendInit=i,{success:i,asyncInit:!0}}return this.registry[n]=o,{success:!0,asyncInit:!1}}catch(s){return console.warn("Initialization of backend "+n+" failed"),console.warn(s.stack||s.message),{success:!1,asyncInit:!1}}},r.prototype.removeBackend=function(n){if(!(n in this.registryFactory))throw new Error(n+" backend not found in registry");this.backendName===n&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,n in this.registry&&(this.disposeRegisteredKernels(n),this.registry[n].dispose(),delete this.registry[n]),delete this.registryFactory[n],this.backendName===n&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},r.prototype.getSortedBackends=function(){var n=this;if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(function(e,t){return n.registryFactory[t].priority-n.registryFactory[e].priority})},r.prototype.initializeBackendsAndReturnBest=function(){for(var n=this.getSortedBackends(),e=0;e<n.length;e++){var t=n[e],o=this.initializeBackend(t),a=o.success,i=o.asyncInit;if(i||a)return{name:t,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")},r.prototype.moveData=function(n,e){var t=this.state.tensorInfo.get(e),o=t.backend,a=this.readSync(e);o.disposeData(e),t.backend=n,n.move(e,a,t.shape,t.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++},r.prototype.tidy=function(n,e){var t,o=this,a=null;if(e==null){if(typeof n!="function")throw new Error("Please provide a function to tidy()");e=n}else{if(typeof n!="string"&&!(n instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=n}return this.scopedRun(function(){return o.startScope(a)},function(){return o.endScope(t)},function(){return(t=e())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),t})},r.prototype.scopedRun=function(n,e,t){n();try{var o=t();return e(),o}catch(a){throw e(),a}},r.prototype.nextTensorId=function(){return r.nextTensorId++},r.prototype.nextVariableId=function(){return r.nextVariableId++},r.prototype.clone=function(n){var e=this.makeTensorFromDataId(n.dataId,n.shape,n.dtype),t={x:n};return this.addTapeNode(this.state.activeScope.name,t,[e],function(o){return{x:function(){return o.toFloat()}}},[]),e},r.prototype.runKernel=function(n,e,t,o,a){return this.runKernelFunc(null,e,null,n,t,o,a)},r.prototype.shouldCheckForMemLeaks=function(){return this.ENV.getBool("IS_TEST")},r.prototype.checkKernelForMemLeak=function(n,e,t){var o=this.backend.numDataIds(),a=0;t.forEach(function(u){a+=u.dtype==="complex64"?3:1});var i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=o-e-a-i;if(s>0)throw new Error("Backend '"+this.backendName+"' has an internal memory leak ("+s+" data ids) after running '"+n+"'")},r.prototype.runKernelFunc=function(n,e,t,o,a,i,s){var u,c=this;i===void 0&&(i=[]),s===void 0&&(s=[]);var l=[],h=this.isTapeOn();o==null&&(o=this.state.activeScope!=null?this.state.activeScope.name:"");var f,p=function(x){h&&(l=x.map(function(b){return c.keep(c.clone(b))}))},d=this.state.numBytes,m=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);var v,g=A4(o,this.backendName);return f=g!=null?function(){var x=c.backend.numDataIds();v=g.kernelFunc({inputs:e,attrs:a,backend:c.backend});var b=Array.isArray(v)?v:[v];c.shouldCheckForMemLeaks()&&c.checkKernelForMemLeak(o,x,b);var y=b.map(function(C){var S=C.dataId,k=C.shape,I=C.dtype;return c.makeTensorFromDataId(S,k,I)}),w=y.filter(function(C,S){return s[S]});return p((i||[]).slice().concat(w)),y}:function(){var x=c.backend.numDataIds();v=c.tidy(function(){return n(c.backend,p)});var b=Array.isArray(v)?v:[v];return c.shouldCheckForMemLeaks()&&c.checkKernelForMemLeak(o,x,b),b},this.scopedRun(function(){return c.state.kernelDepth++},function(){return c.state.kernelDepth--},function(){u=c.ENV.getBool("DEBUG")?c.profiler.profileKernel(o,e,function(){return f()}):f()}),h&&this.addTapeNode(o,e,u,t,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:o,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-m,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(function(x){return e[x].shape}),outputShapes:u.map(function(x){return x.shape})}),Array.isArray(v)?u:u[0]},r.prototype.makeTensor=function(n,e,t,o){if(n==null)throw new Error("Values passed to engine.makeTensor() are null");t=t||"float32",o=o||this.backend;var a=n;t==="string"&&E2(n[0])&&(a=n.map(function(l){return p6(l)}));var i=o.write(a,e,t),s=new E0(e,t,i,this.nextTensorId());if(this.incRef(s,o),t==="string"){var u=this.state.tensorInfo.get(i),c=l6(a);this.state.numBytes+=c-u.bytes,u.bytes=c}return s},r.prototype.makeTensorFromDataId=function(n,e,t,o){var a=new E0(e,t=t||"float32",n,this.nextTensorId());return this.incRef(a,o),a},r.prototype.makeVariable=function(n,e,t,o){e===void 0&&(e=!0),t=t||this.nextVariableId().toString(),o!=null&&o!==n.dtype&&(n=n.asType(o));var a=new ze(n,e,t,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error("Variable with name "+a.name+" was already registered");return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a},r.prototype.incRef=function(n,e){var t=this.state.tensorInfo.has(n.dataId)?this.state.tensorInfo.get(n.dataId).refCount:0;if(this.state.numTensors++,n.dtype==="string"&&this.state.numStringTensors++,t===0){this.state.numDataBuffers++;var o=0;n.dtype!=="complex64"&&n.dtype!=="string"&&(o=n.size*N4(n.dtype)),this.state.tensorInfo.set(n.dataId,{backend:e||this.backend,dtype:n.dtype,shape:n.shape,bytes:o,refCount:0}),this.state.numBytes+=o}this.state.tensorInfo.get(n.dataId).refCount++,n instanceof ze||this.track(n)},r.prototype.disposeTensor=function(n){if(this.state.tensorInfo.has(n.dataId)){this.state.numTensors--,n.dtype==="string"&&this.state.numStringTensors--;var e=this.state.tensorInfo.get(n.dataId);e.refCount<=1?(n.dtype!=="complex64"&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(n.dataId),this.state.tensorInfo.delete(n.dataId)):this.state.tensorInfo.get(n.dataId).refCount--}},r.prototype.disposeVariables=function(){for(var n in this.state.registeredVariables){var e=this.state.registeredVariables[n];this.disposeVariable(e)}},r.prototype.disposeVariable=function(n){this.disposeTensor(n),this.state.registeredVariables[n.name]!=null&&delete this.state.registeredVariables[n.name]},r.prototype.memory=function(){var n=this.backend.memory();return n.numTensors=this.state.numTensors,n.numDataBuffers=this.state.numDataBuffers,n.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(n.unreliable=!0,n.reasons==null&&(n.reasons=[]),n.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),n},r.prototype.profile=function(n){return X(this,void 0,void 0,function(){var e,t;return Y(this,function(o){return this.state.profiling=!0,e=this.state.numBytes,t=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=n(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map(function(a){return a.totalBytesSnapshot})),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-t,[2,this.state.activeProfile]})})},r.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&this.state.kernelDepth===0},r.prototype.addTapeNode=function(n,e,t,o,a){var i=this,s={id:this.state.nextTapeNodeId++,kernelName:n,inputs:e,outputs:t,saved:a},u=n6(n);u!=null&&(o=u.gradFunc),o!=null&&(s.gradient=function(c){return c=c.map(function(l,h){if(l==null){var f=t[h],p=ft(f.size,f.dtype);return i.makeTensor(p,f.shape,f.dtype)}return l}),o(c.length>1?c:c[0],a)}),this.state.activeTape.push(s)},r.prototype.keep=function(n){return n.kept=!0,n},r.prototype.startTape=function(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++},r.prototype.endTape=function(){this.state.gradientDepth--},r.prototype.startScope=function(n){var e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};n&&(e.name=n),this.state.scopeStack.push(e),this.state.activeScope=e},r.prototype.endScope=function(n){for(var e=this,t=W4(n),o=new Set(t.map(function(u){return u.id})),a=0;a<this.state.activeScope.track.length;a++){var i=this.state.activeScope.track[a];i.kept||o.has(i.id)||i.dispose()}var s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(function(u){u.kept||u.scopeId!==s.id||e.track(u)})},r.prototype.gradients=function(n,e,t,o){var a=this;if(o===void 0&&(o=!1),E(e.length>0,function(){return"gradients() received an empty list of xs."}),t!=null&&t.dtype!=="float32")throw new Error("dy must have 'float32' dtype, but has '"+t.dtype+"'");var i=this.scopedRun(function(){return a.startTape()},function(){return a.endTape()},function(){return a.tidy("forward",n)});E(i instanceof E0,function(){return"The result y returned by f() must be a tensor."});var s=function(u,c,l){for(var h={},f={},p=0;p<c.length;p++)h[c[p].id]=!0;for(p=0;p<u.length;p++){var d=(C=u[p]).inputs;for(var m in d){for(var v=d[m],g=!1,x=0;x<c.length;x++)if(h[v.id]){C.outputs.forEach(function(R){return h[R.id]=!0}),g=!0,f[C.id]=!0;break}if(g)break}}var b={};b[l.id]=!0;var y={};for(p=u.length-1;p>=0;p--)for(d=(C=u[p]).inputs,x=0;x<C.outputs.length;x++)if(b[C.outputs[x].id]){for(var m in d)b[d[m].id]=!0,y[C.id]=!0;break}var w=[];for(p=0;p<u.length;p++){var C;if(f[(C=u[p]).id]&&y[C.id]){var S={};for(var m in C.inputs){var k=C.inputs[m];h[k.id]&&(S[m]=k)}var I=Object.assign({},C);I.inputs=S,I.outputs=C.outputs,w.push(I)}}return w}(this.state.activeTape,e,i);if(!o&&s.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",function(){var u,c,l={};l[i.id]=t??(u=i.shape,c=P4($(u),"float32"),M.makeTensor(c,u,"float32")),function(f,p,d){for(var m=function(g){var x=p[g],b=[];if(x.outputs.forEach(function(S){var k=f[S.id];k!=null?b.push(k):b.push(null)}),x.gradient==null)throw new Error("Cannot compute gradient: gradient function not found for "+x.kernelName+".");var y=x.gradient(b),w=function(S){if(!(S in y))throw new Error("Cannot backprop through input "+S+". Available gradients found: "+Object.keys(y)+".");var k=d(function(){return y[S]()});if(k.dtype!=="float32")throw new Error("Error in gradient for op "+x.kernelName+". The gradient of input "+S+" must have 'float32' dtype, but has '"+k.dtype+"'");var I=x.inputs[S];if(!W0(k.shape,I.shape))throw new Error("Error in gradient for op "+x.kernelName+". The gradient of input '"+S+"' has shape '"+k.shape+"', which does not match the shape of the input '"+I.shape+"'");if(f[I.id]==null)f[I.id]=k;else{var R=f[I.id];f[I.id]=R.add(k),R.dispose()}};for(var C in x.inputs)w(C)},v=p.length-1;v>=0;v--)m(v)}(l,s,function(f){return a.tidy(f)});var h=e.map(function(f){return l[f.id]});return a.state.gradientDepth===0&&(a.state.activeTape.forEach(function(f){for(var p=0,d=f.saved;p<d.length;p++)d[p].dispose()}),a.state.activeTape=null),{value:i,grads:h}})},r.prototype.customGrad=function(n){var e=this;return E(r2(n),function(){return"The f passed in customGrad(f) must be a function."}),function(){for(var t,o=[],a=0;a<arguments.length;a++)o[a]=arguments[a];E(o.every(function(s){return s instanceof E0}),function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"});var i={};return o.forEach(function(s,u){i[u]=s}),e.runKernelFunc(function(s,u){return E((t=n.apply(void 0,o.concat([u]))).value instanceof E0,function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"}),E(r2(t.gradFunc),function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."}),t.value},i,function(s,u){var c=t.gradFunc(s,u),l=Array.isArray(c)?c:[c];E(l.length===o.length,function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."}),E(l.every(function(f){return f instanceof E0}),function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."});var h={};return l.forEach(function(f,p){h[p]=function(){return f}}),h})}},r.prototype.readSync=function(n){return this.state.tensorInfo.get(n).backend.readSync(n)},r.prototype.read=function(n){return this.state.tensorInfo.get(n).backend.read(n)},r.prototype.time=function(n){return X(this,void 0,void 0,function(){var e,t;return Y(this,function(o){switch(o.label){case 0:return e=R1(),[4,this.backend.time(n)];case 1:return(t=o.sent()).wallMs=R1()-e,[2,t]}})})},r.prototype.track=function(n){return this.state.activeScope!=null&&(n.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(n)),n},Object.defineProperty(r.prototype,"registeredVariables",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),r.prototype.reset=function(){for(var n in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new N3,this.registry)this.disposeRegisteredKernels(n),this.registry[n].dispose(),delete this.registry[n];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},r.nextTensorId=0,r.nextVariableId=0,r}(),M=function(){var r=function(){if(An==null){var e=void 0;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else{if(typeof self>"u")throw new Error("Could not find a global object");e=self}An=e}return An}();if(r._tfengine==null){var n=new e6(r);r._tfengine=new b6(n)}return function(e){S4=e}(r._tfengine.ENV),k1=function(){return r._tfengine},r._tfengine}();function V4(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var U1=P();U1.registerFlag("DEBUG",function(){return!1},function(r){r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),U1.registerFlag("IS_BROWSER",function(){return V4()}),U1.registerFlag("IS_NODE",function(){return typeof process<"u"&&process.versions!==void 0&&process.versions.node!==void 0}),U1.registerFlag("IS_CHROME",function(){return typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)}),U1.registerFlag("PROD",function(){return!1}),U1.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",function(){return U1.getBool("DEBUG")}),U1.registerFlag("DEPRECATION_WARNINGS_ENABLED",function(){return!0}),U1.registerFlag("IS_TEST",function(){return!1});var ot,i1,a1,he={},Dn={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function w6(r,n){he[r]=n}function P1(r){r in he||(he[r]=function(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var t=function(o){if(typeof OffscreenCanvas<"u"&&o===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",function(o){o.preventDefault(),delete he[e]},!1),e===1?t.getContext("webgl",Dn)||t.getContext("experimental-webgl",Dn):t.getContext("webgl2",Dn)}(r));var n=he[r];return n.isContextLost()?(delete he[r],P1(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),he[r])}function on(r,n){return[n,r]}function Ze(r){var n=$(r);return n2(Math.ceil(n/4))}function pt(r,n){return[Math.max(1,Math.ceil(n/2)),Math.max(1,Math.ceil(r/2))]}function I2(r,n){var e,t,o,a,i,s,u,c,l,h=r;return P().getNumber("WEBGL_VERSION")===2?(e=h.R32F,t=h.R16F,o=h.RGBA16F,a=h.RGBA32F,i=h.RED,s=4,u=1,c=h.HALF_FLOAT,l=h.FLOAT):(e=r.RGBA,t=r.RGBA,o=r.RGBA,a=h.RGBA,i=r.RGBA,s=4,u=4,c=n!=null?n.HALF_FLOAT_OES:null,l=r.FLOAT),{internalFormatFloat:e,internalFormatHalfFloat:t,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:r.RGBA,downloadUnpackNumChannels:s,defaultNumChannels:u,textureTypeHalfFloat:c,textureTypeFloat:l}}function J(r,n,e){var t=e();return n&&function(o){var a=o.getError();if(a!==o.NO_ERROR)throw new Error("WebGL Error: "+I6(o,a))}(r),t}(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(ot||(ot={})),function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"}(i1||(i1={})),function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(a1||(a1={}));var C6=596e-10,_6=65504;function E6(r){return!!(P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||C6<Math.abs(r)&&Math.abs(r)<_6)}function I6(r,n){switch(n){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+n}}function wt(r,n,e){return j1(r,n,function(){return r.getExtension(e)},'Extension "'+e+'" not supported on this browser.')}function R6(r,n,e){var t=j1(r,n,function(){return r.createShader(r.VERTEX_SHADER)},"Unable to create vertex WebGLShader.");if(J(r,n,function(){return r.shaderSource(t,e)}),J(r,n,function(){return r.compileShader(t)}),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function k6(r,n,e){var t=j1(r,n,function(){return r.createShader(r.FRAGMENT_SHADER)},"Unable to create fragment WebGLShader.");if(J(r,n,function(){return r.shaderSource(t,e)}),J(r,n,function(){return r.compileShader(t)}),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw function(o,a){var i=S6.exec(a);if(i==null)return console.log("Couldn't parse line number in error: "+a),void console.log(o);for(var s=+i[1],u=o.split(`
`),c=u.length.toString().length+2,l=u.map(function(v,g){return Pe((g+1).toString(),c)+v}),h=0,f=0;f<l.length;f++)h=Math.max(l[f].length,h);var p=l.slice(0,s-1),d=l.slice(s-1,s),m=l.slice(s);console.log(p.join(`
`)),console.log(a.split(`
`)[0]),console.log("%c "+Pe(d[0],h),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(m.join(`
`))}(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var Mn,Tn,S6=/ERROR: [0-9]+:([0-9]+):/g;function A6(r,n){return j1(r,n,function(){return r.createProgram()},"Unable to create WebGLProgram.")}function D6(r,n,e){if(J(r,n,function(){return r.linkProgram(e)}),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Nn(r,n,e){if(J(r,n,function(){return r.validateProgram(e)}),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function M6(r,n,e){var t=j1(r,n,function(){return r.createBuffer()},"Unable to create WebGLBuffer");return J(r,n,function(){return r.bindBuffer(r.ARRAY_BUFFER,t)}),J(r,n,function(){return r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)}),t}function T6(r,n,e){var t=j1(r,n,function(){return r.createBuffer()},"Unable to create WebGLBuffer");return J(r,n,function(){return r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)}),J(r,n,function(){return r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)}),t}function N6(r,n){return j1(r,n,function(){return r.createTexture()},"Unable to create WebGLTexture.")}function F6(r,n){var e=P().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||n<=0){var t="["+r+"x"+n+"]";throw new Error("Requested texture size "+t+" is invalid.")}if(r>e||n>e)throw t="["+r+"x"+n+"]",new Error("Requested texture size "+t+" greater than WebGL maximum on this browser / GPU "+("["+e+"x"+e+"]")+".")}function P6(r,n){return j1(r,n,function(){return r.createFramebuffer()},"Unable to create WebGLFramebuffer.")}function F3(r,n,e,t,o,a,i,s){var u=r.getAttribLocation(e,t);return u!==-1&&(J(r,n,function(){return r.bindBuffer(r.ARRAY_BUFFER,o)}),J(r,n,function(){return r.vertexAttribPointer(u,a,r.FLOAT,!1,i,s)}),J(r,n,function(){return r.enableVertexAttribArray(u)}),!0)}function O6(r,n,e,t){U6(r,t),J(r,n,function(){return r.activeTexture(r.TEXTURE0+t)}),J(r,n,function(){return r.bindTexture(r.TEXTURE_2D,e)})}function B6(r,n,e,t){return j1(r,n,function(){return r.getUniformLocation(e,t)},'uniform "'+t+'" not present in program.')}function L6(r,n,e){return r.getUniformLocation(n,e)}function W6(r,n,e,t,o,a){J(r,n,function(){return O6(r,n,t,a)}),J(r,n,function(){return r.uniform1i(o,a)})}function Fn(r,n,e,t){J(r,n,function(){return r.bindFramebuffer(r.FRAMEBUFFER,t)}),J(r,n,function(){return r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0)})}function P3(r,n,e){J(r,n,function(){return r.bindFramebuffer(r.FRAMEBUFFER,e)}),J(r,n,function(){return r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0)})}function Ct(r){var n=r.checkFramebufferStatus(r.FRAMEBUFFER);if(n!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+V6(r,n))}function V6(r,n){switch(n){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+n}}function j1(r,n,e,t){var o=J(r,n,function(){return e()});if(o==null)throw new Error(t);return o}function U6(r,n){var e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,t=n+r.TEXTURE0;if(t<r.TEXTURE0||t>e)throw new Error("textureUnit must be in "+("[gl.TEXTURE0, gl.TEXTURE"+e+"]")+".")}function Lt(r,n){return n===void 0&&(n=2),$(r.slice(0,r.length-n))}function Wt(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Pn(r){var n=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(n=[Lt(r)].concat(Wt(r))),n}function G6(r,n){var e;n===void 0&&(n=!1);var t=P().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n&&(t*=2,(r=r.map(function(c,l){return l>=r.length-2?T4(r[l]):r[l]})).length===1&&(r=[2,r[0]])),r.length!==2){var o=pe(r);r=o.newShape}var a=$(r);if(r.length<=1&&a<=t)return[1,a];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(n){var i=Lt(r),s=2,u=2;return r.length&&(s=(e=Wt(r))[0],u=e[1]),n2(a=i*(s/2)*(u/2)).map(function(c){return 2*c})}return n2(a)}function _t(r){return r%2==0}function Et(r,n){if(W0(r=r.slice(-2),n=n.slice(-2))||!r.length||!n.length||r[0]===0||r[1]===0||n[0]===0||n[1]===0)return!0;if(r.length!==n.length){var e=r.slice(-1)[0],t=n.slice(-1)[0];if(e===t||_t(e)&&_t(t)&&(r[0]===1||n[0]===1))return!0}return r[1]===n[1]&&_t(r[0])&&_t(n[0])}function z6(r){if(Mn==null){var n=P1(r);Mn=n.getParameter(n.MAX_TEXTURE_SIZE)}return Mn}function H6(r){if(Tn==null){var n=P1(r);Tn=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Tn)}function j6(r){if(r===0)return 0;var n=P1(r);return p1(n,"EXT_disjoint_timer_query_webgl2")&&r===2?2:p1(n,"EXT_disjoint_timer_query")?1:0}function p1(r,n){return r.getExtension(n)!=null}function O3(r){try{if(P1(r)!=null)return!0}catch{return!1}return!1}function q6(r){if(r===0)return!1;var n=P1(r);if(r===1){if(!p1(n,"OES_texture_float"))return!1}else if(!p1(n,"EXT_color_buffer_float"))return!1;return c2(n)}function K6(r){if(r===0)return!1;var n=P1(r);if(r!==1){if(p1(n,"EXT_color_buffer_float"))return c2(n);if(p1(n,"EXT_color_buffer_half_float")){var e=n.getExtension("EXT_color_buffer_half_float");return function(t,o){var a=I2(t,o),i=t.createTexture();t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,a.internalFormatHalfFloat,1,1,0,a.textureFormatFloat,a.textureTypeHalfFloat,null);var s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,i,0);var u=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(i),t.deleteFramebuffer(s),u}(n,e)}return!1}return!!p1(n,"OES_texture_float")&&!!p1(n,"WEBGL_color_buffer_float")&&c2(n)}function c2(r){var n=I2(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,n.internalFormatFloat,1,1,0,n.textureFormatFloat,n.textureTypeFloat,null);var t=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,t),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);var o=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(t),o}function X6(r){return r===2&&P1(r).fenceSync!=null}var n0=P();function U4(r){P().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function K(r,n){return M.tidy(r,n)}function e1(r){W4(r).forEach(function(n){return n.dispose()})}function Y6(r){return M.keep(r)}function Vt(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];P().getBool("IS_TEST")||console.warn.apply(console,r)}function se(r,n){var e=r;if(D1(r))return n==="string"?[]:[r.length];if(!Array.isArray(r))return[];for(var t=[];Array.isArray(e)||D1(e)&&n!=="string";)t.push(e.length),e=e[0];return Array.isArray(r)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function o(a,i,s){if(s=s||[],!Array.isArray(a)&&!D1(a))return void E(i.length===0,function(){return"Element arr["+s.join("][")+"] is a primitive, but should be an array/TypedArray of "+i[0]+" elements"});E(i.length>0,function(){return"Element arr["+s.join("][")+"] should be a primitive, but is an array of "+a.length+" elements"}),E(a.length===i[0],function(){return"Element arr["+s.join("][")+"] should have "+i[0]+" elements, but has "+a.length+" elements"});for(var u=i.slice(1),c=0;c<a.length;++c)o(a[c],u,s.concat(c))}(r,t,[]),t}function B3(r,n,e,t){if(r!=null&&(r!=="numeric"&&r!==n||r==="numeric"&&n==="string"))throw new Error("Argument '"+e+"' passed to '"+t+"' must be "+r+" tensor, but got "+n+" tensor")}function _(r,n,e,t){if(t===void 0&&(t="numeric"),r instanceof E0)return B3(t,r.dtype,n,e),r;var o=ht(r);if(o!=="string"&&["bool","int32","float32"].indexOf(t)>=0&&(o=t),B3(t,o,n,e),r==null||!D1(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){var a=r==null?"null":r.constructor.name;throw new Error("Argument '"+n+"' passed to '"+e+"' must be a Tensor or TensorLike, but got '"+a+"'")}var i=se(r,o);D1(r)||Array.isArray(r)||(r=[r]);var s=o!=="string"?F4(r,o,P().getBool("DEBUG")):Ge(r,[],!0);return M.makeTensor(s,i,o)}function Ut(r,n,e,t){if(t===void 0&&(t="numeric"),!Array.isArray(r))throw new Error("Argument "+n+" passed to "+e+" must be a `Tensor[]` or `TensorLike[]`");return r.map(function(o,a){return _(o,n+"["+a+"]",e)},t)}function G4(r,n){for(var e=0;e<r.length;++e)if(r[r.length-e-1]!==n-1-e)return!1;return!0}function $6(r,n,e){for(var t=r.length+n.length,o=[],a=0,i=0,s=0;s<t;s++)e.indexOf(s)===-1?o.push(r[a++]):o.push(n[i++]);return o}function q0(r,n){for(var e=[],t=r.length,o=0;o<t;o++)n.indexOf(o)===-1&&e.push(r[o]);return[e,n.map(function(a){return r[a]})]}function t1(r,n){return $6(r,n.map(function(e){return 1}),n)}function o1(r,n,e){E(G4(n,e),function(){return r+" supports only inner-most axes for now. Got axes "+n+" and rank-"+e+" input."})}function O1(r,n){if(G4(r,n))return null;for(var e=[],t=0;t<n;++t)r.indexOf(t)===-1&&e.push(t);return r.forEach(function(o){return e.push(o)}),e}function R2(r){return r.map(function(n,e){return[e,n]}).sort(function(n,e){return n[1]-e[1]}).map(function(n){return n[0]})}function B1(r,n){for(var e=[],t=n-r;t<n;++t)e.push(t);return e}function J6(r,n){var e=r[0].length;r.forEach(function(o,a){E(o.length===e,function(){return"Error in concat"+e+"D: rank of tensors["+a+"] must be the same as the rank of the rest ("+e+")"})}),E(n>=0&&n<e,function(){return"Error in concat"+e+"D: axis must be between 0 and "+(e-1)+"."});var t=r[0];r.forEach(function(o,a){for(var i=0;i<e;i++)E(i===n||o[i]===t[i],function(){return"Error in concat"+e+"D: Shape of tensors["+a+"] ("+o+") does not match the shape of the rest ("+t+") along the non-concatenated axis "+a+"."})})}function He(r,n){for(var e=r[0].slice(),t=1;t<r.length;t++)e[n]+=r[t][n];return e}function A(r){var n=Object.keys(r);if(n.length!==1)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+n.length+" keys.");var e=n[0],t=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1));var o=function(){for(var a=[],i=0;i<arguments.length;i++)a[i]=arguments[i];M.startScope(e);try{var s=t.apply(void 0,a);return s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),M.endScope(s),s}catch(u){throw M.endScope(null),u}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}n0.registerFlag("HAS_WEBGL",function(){return n0.getNumber("WEBGL_VERSION")>0}),n0.registerFlag("WEBGL_VERSION",function(){return O3(2)?2:O3(1)?1:0}),n0.registerFlag("WEBGL_BUFFER_SUPPORTED",function(){return n0.get("WEBGL_VERSION")===2}),n0.registerFlag("WEBGL_CPU_FORWARD",function(){return!0}),n0.registerFlag("WEBGL_FORCE_F16_TEXTURES",function(){return!1}),n0.registerFlag("WEBGL_PACK",function(){return n0.getBool("HAS_WEBGL")}),n0.registerFlag("WEBGL_PACK_NORMALIZATION",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_PACK_CLIP",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_PACK_DEPTHWISECONV",function(){return!1}),n0.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_PACK_REDUCE",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_LAZILY_UNPACK",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_CONV_IM2COL",function(){return n0.getBool("WEBGL_PACK")}),n0.registerFlag("WEBGL_MAX_TEXTURE_SIZE",function(){return z6(n0.getNumber("WEBGL_VERSION"))}),n0.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",function(){return H6(n0.getNumber("WEBGL_VERSION"))}),n0.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",function(){var r=n0.getNumber("WEBGL_VERSION");return r===0?0:j6(r)}),n0.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",function(){return n0.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&(r=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(r)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(r.substr(0,4))));var r}),n0.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",function(){return q6(n0.getNumber("WEBGL_VERSION"))}),n0.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",function(){return!n0.getBool("WEBGL_FORCE_F16_TEXTURES")&&n0.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")}),n0.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",function(){return K6(n0.getNumber("WEBGL_VERSION"))}),n0.registerFlag("WEBGL_FENCE_API_ENABLED",function(){return X6(n0.getNumber("WEBGL_VERSION"))}),n0.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",function(){return n0.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0}),L4=U4;var G0=A({complex_:function(r,n){var e=_(r,"real","complex"),t=_(n,"imag","complex");return y0(e.shape,t.shape,"real and imag shapes, "+e.shape+" and "+t.shape+", must match in call to tf.complex()."),M.runKernelFunc(function(o){return o.complex(e,t)},{$real:e,$imag:t})}}),f1=A({real_:function(r){var n=_(r,"input","real");return M.runKernelFunc(function(e){return e.real(n)},{$input:n})}}),S1=A({imag_:function(r){var n=_(r,"input","imag");return M.runKernelFunc(function(e){return e.imag(n)},{$input:n})}});function H0(r,n,e){return ue(r,n,se(r,e),e)}function ue(r,n,e,t){if(t==null&&(t=ht(r)),t==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!D1(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(n!=null){O4(n);var o=$(n),a=$(e);E(o===a,function(){return"Based on the provided shape, ["+n+"], the tensor should have "+o+" values but has "+a});for(var i=0;i<e.length;++i){var s=e[i],u=i!==e.length-1||s!==$(n.slice(i));E(e[i]===n[i]||!u,function(){return"Error creating a new Tensor. Inferred shape ("+e+") does not match the provided shape ("+n+"). "})}}return D1(r)||Array.isArray(r)||(r=[r]),n=n||e,r=t!=="string"?F4(r,t,P().getBool("DEBUG")):Ge(r,[],!0),M.makeTensor(r,n,t)}function j(r,n){if((D1(r)&&n!=="string"||Array.isArray(r))&&n!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(n==="string"&&D1(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ue(r,[],[],n)}function M0(r,n){qe(r);var e=se(r,n);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ue(r,null,e,n)}function re(r,n,e){if(qe(r),n!=null&&n.length!==2)throw new Error("tensor2d() requires shape to have two numbers");var t=se(r,e);if(t.length!==2&&t.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(t.length===1&&n==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ue(r,n,t,e)}function k2(r,n,e){if(qe(r),n!=null&&n.length!==3)throw new Error("tensor3d() requires shape to have three numbers");var t=se(r,e);if(t.length!==3&&t.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(t.length===1&&n==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ue(r,n,t,e)}function Q0(r,n,e){if(qe(r),n!=null&&n.length!==4)throw new Error("tensor4d() requires shape to have four numbers");var t=se(r,e);if(t.length!==4&&t.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(t.length===1&&n==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ue(r,n,t,e)}function Q6(r,n,e){if(qe(r),n!=null&&n.length!==5)throw new Error("tensor5d() requires shape to have five numbers");var t=se(r,e);if(t.length!==5&&t.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(t.length===1&&n==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ue(r,n,t,e)}function Z6(r,n,e){if(qe(r),n!=null&&n.length!==6)throw new Error("tensor6d() requires shape to have six numbers");var t=se(r,e);if(t.length!==6&&t.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(t.length===1&&n==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ue(r,n=n||t,t,e)}function e7(r,n,e,t){return n===void 0&&(n=!0),M.makeVariable(r,n,e,t)}function Ke(r,n){if(n===void 0&&(n="float32"),n==="complex64"){var e=Ke(r,"float32"),t=w0(r,"float32");return G0(e,t)}var o=P4($(r),n);return M.makeTensor(o,r,n)}function w0(r,n){if(n===void 0&&(n="float32"),n==="complex64"){var e=w0(r,"float32"),t=w0(r,"float32");return G0(e,t)}var o=ft($(r),n);return M.makeTensor(o,r,n)}function T1(r,n,e){return M.runKernelFunc(function(t){return t.fill(r,n,e)},{})}function t7(r,n,e){if(e<=0)throw new Error("The number of values should be positive.");return M.runKernelFunc(function(t){return t.linspace(r,n,e)},{})}function Gt(r,n,e,t){if(e===void 0&&(e=1),t===void 0&&(t="float32"),e===0)throw new Error("Cannot have a step of zero");if(r===n||r<n&&e<0||n<r&&e>1)return w0([0],t);var o=ft(Math.abs(Math.ceil((n-r)/e)),t);n<r&&e===1&&(e=-1),o[0]=r;for(var a=1;a<o.length;a++)o[a]=o[a-1]+e;return M0(o,t)}var z4=A({onesLike_:function(r){var n=_(r,"x","onesLike");if(n.dtype==="complex64"){var e=z4(f1(n)),t=v0(S1(n));return G0(e,t)}return M.runKernelFunc(function(o){return o.onesLike(n)},{$x:n},function(o,a){return{$x:function(){return v0(o)}}})}}),v0=A({zerosLike_:function(r){var n=_(r,"x","zerosLike");return M.runKernelFunc(function(e){return e.zerosLike(n)},{$x:n},function(e,t){return{$x:function(){return v0(e)}}})}}),N0=A({concat_:function(r,n){n===void 0&&(n=0),E(r.length>=1,function(){return"Pass at least one tensor to concat"});var e=Ut(r,"tensors","concat");e[0].dtype==="complex64"&&e.forEach(function(s){if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype `+s.dtype+". ")}),n=B0(n,e[0].shape)[0];var t=He(e.map(function(s){return s.shape}),n);if($(t)===0)return H0([],t);if((e=e.filter(function(s){return s.size>0})).length===1)return e[0];var o=e.map(function(s){return s.shape});J6(o,n);var a=e,i={axis:n};return M.runKernelFunc(function(s){return s.concat(e,n)},a,function(s){var u=o.map(function(c){return c[n]});return S2(s,u,n).map(function(c){return function(){return c}})},"Concat",i)}}),n7=A({concat1d_:function(r){return N0(r,0)}}),r7=A({concat2d_:function(r,n){return N0(r,n)}}),o7=A({concat3d_:function(r,n){return N0(r,n)}}),a7=A({concat4d_:function(r,n){return N0(r,n)}}),S2=A({split_:function(r,n,e){e===void 0&&(e=0);var t,o=_(r,"x","split");return e=B0(e,o.shape)[0],typeof n=="number"?(E(o.shape[e]%n==0,function(){return"Number of splits must evenly divide the axis."}),t=new Array(n).fill(o.shape[e]/n)):(E(o.shape[e]===n.reduce(function(a,i){return a+i}),function(){return"The sum of sizes must match the size of the axis dimension."}),t=n),M.runKernelFunc(function(a){return a.split(o,t,e)},{$x:o},function(a){return{$x:function(){return N0(a,e)}}})}});function xe(r,n){return r(n={exports:{}},n.exports),n.exports}var i7=xe(function(r){(function(n,e,t){function o(s){var u,c=this,l=(u=4022871197,function(h){h=h.toString();for(var f=0;f<h.length;f++){var p=.02519603282416938*(u+=h.charCodeAt(f));p-=u=p>>>0,u=(p*=u)>>>0,u+=4294967296*(p-=u)}return 23283064365386963e-26*(u>>>0)});c.next=function(){var h=2091639*c.s0+23283064365386963e-26*c.c;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=0|h)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(s),c.s0<0&&(c.s0+=1),c.s1-=l(s),c.s1<0&&(c.s1+=1),c.s2-=l(s),c.s2<0&&(c.s2+=1),l=null}function a(s,u){return u.c=s.c,u.s0=s.s0,u.s1=s.s1,u.s2=s.s2,u}function i(s,u){var c=new o(s),l=u&&u.state,h=c.next;return h.int32=function(){return 4294967296*c.next()|0},h.double=function(){return h()+11102230246251565e-32*(2097152*h()|0)},h.quick=h,l&&(typeof l=="object"&&a(l,c),h.state=function(){return a(c,{})}),h}e&&e.exports?e.exports=i:t&&t.amd?t(function(){return i}):this.alea=i})(0,r,!1)}),s7=xe(function(r){(function(n,e,t){function o(s){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},s===(0|s)?u.x=s:c+=s;for(var l=0;l<c.length+64;l++)u.x^=0|c.charCodeAt(l),u.next()}function a(s,u){return u.x=s.x,u.y=s.y,u.z=s.z,u.w=s.w,u}function i(s,u){var c=new o(s),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var f=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&a(l,c),h.state=function(){return a(c,{})}),h}e&&e.exports?e.exports=i:t&&t.amd?t(function(){return i}):this.xor128=i})(0,r,!1)}),u7=xe(function(r){(function(n,e,t){function o(s){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^h^h<<1)|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,s===(0|s)?u.x=s:c+=s;for(var l=0;l<c.length+64;l++)u.x^=0|c.charCodeAt(l),l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function a(s,u){return u.x=s.x,u.y=s.y,u.z=s.z,u.w=s.w,u.v=s.v,u.d=s.d,u}function i(s,u){var c=new o(s),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var f=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&a(l,c),h.state=function(){return a(c,{})}),h}e&&e.exports?e.exports=i:t&&t.amd?t(function(){return i}):this.xorwow=i})(0,r,!1)}),c7=xe(function(r){(function(n,e,t){function o(s){var u=this;u.next=function(){var c,l,h=u.x,f=u.i;return c=h[f],l=(c^=c>>>7)^c<<24,l^=(c=h[f+1&7])^c>>>10,l^=(c=h[f+3&7])^c>>>3,l^=(c=h[f+4&7])^c<<7,c=h[f+7&7],l^=(c^=c<<13)^c<<9,h[f]=l,u.i=f+1&7,l},function(c,l){var h,f=[];if(l===(0|l))f[0]=l;else for(l=""+l,h=0;h<l.length;++h)f[7&h]=f[7&h]<<15^l.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?f[7]=-1:f[h],c.x=f,c.i=0,h=256;h>0;--h)c.next()}(u,s)}function a(s,u){return u.x=s.x.slice(),u.i=s.i,u}function i(s,u){s==null&&(s=+new Date);var c=new o(s),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var f=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.x&&a(l,c),h.state=function(){return a(c,{})}),h}e&&e.exports?e.exports=i:t&&t.amd?t(function(){return i}):this.xorshift7=i})(0,r,!1)}),l7=xe(function(r){(function(n,e,t){function o(s){var u=this;u.next=function(){var c,l,h=u.w,f=u.X,p=u.i;return u.w=h=h+1640531527|0,l=f[p+34&127],c=f[p=p+1&127],l^=l<<13,c^=c<<17,l^=l>>>15,c^=c>>>12,l=f[p]=l^c,u.i=p,l+(h^h>>>16)|0},function(c,l){var h,f,p,d,m,v=[],g=128;for(l===(0|l)?(f=l,l=null):(l+="\0",f=0,g=Math.max(g,l.length)),p=0,d=-32;d<g;++d)l&&(f^=l.charCodeAt((d+32)%l.length)),d===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,d>=0&&(m=m+1640531527|0,p=(h=v[127&d]^=f+m)==0?p+1:0);for(p>=128&&(v[127&(l&&l.length||0)]=-1),p=127,d=512;d>0;--d)f=v[p+34&127],h=v[p=p+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,v[p]=f^h;c.w=m,c.X=v,c.i=p}(u,s)}function a(s,u){return u.i=s.i,u.w=s.w,u.X=s.X.slice(),u}function i(s,u){s==null&&(s=+new Date);var c=new o(s),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var f=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.X&&a(l,c),h.state=function(){return a(c,{})}),h}e&&e.exports?e.exports=i:t&&t.amd?t(function(){return i}):this.xor4096=i})(0,r,!1)}),h7=xe(function(r){(function(n,e,t){function o(s){var u=this,c="";u.next=function(){var h=u.b,f=u.c,p=u.d,d=u.a;return h=h<<25^h>>>7^f,f=f-p|0,p=p<<24^p>>>8^d,d=d-h|0,u.b=h=h<<20^h>>>12^f,u.c=f=f-p|0,u.d=p<<16^f>>>16^d,u.a=d-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,s===Math.floor(s)?(u.a=s/4294967296|0,u.b=0|s):c+=s;for(var l=0;l<c.length+20;l++)u.b^=0|c.charCodeAt(l),u.next()}function a(s,u){return u.a=s.a,u.b=s.b,u.c=s.c,u.d=s.d,u}function i(s,u){var c=new o(s),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var f=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&a(l,c),h.state=function(){return a(c,{})}),h}e&&e.exports?e.exports=i:t&&t.amd?t(function(){return i}):this.tychei=i})(0,r,!1)}),fe=xe(function(r){(function(n,e){var t,o=this,a=256,i=6,s="random",u=e.pow(a,i),c=e.pow(2,52),l=2*c,h=a-1;function f(g,x,b){var y=[],w=m(function k(I,R){var T,D=[],L=typeof I;if(R&&L=="object")for(T in I)try{D.push(k(I[T],R-1))}catch{}return D.length?D:L=="string"?I:I+"\0"}((x=x==1?{entropy:!0}:x||{}).entropy?[g,v(n)]:g??function(){try{var k;return t&&(k=t.randomBytes)?k=k(a):(k=new Uint8Array(a),(o.crypto||o.msCrypto).getRandomValues(k)),v(k)}catch{var I=o.navigator,R=I&&I.plugins;return[+new Date,o,R,o.screen,v(n)]}}(),3),y),C=new p(y),S=function(){for(var k=C.g(i),I=u,R=0;k<c;)k=(k+R)*a,I*=a,R=C.g(1);for(;k>=l;)k/=2,I/=2,R>>>=1;return(k+R)/I};return S.int32=function(){return 0|C.g(4)},S.quick=function(){return C.g(4)/4294967296},S.double=S,m(v(C.S),n),(x.pass||b||function(k,I,R,T){return T&&(T.S&&d(T,C),k.state=function(){return d(C,{})}),R?(e[s]=k,I):k})(S,w,"global"in x?x.global:this==e,x.state)}function p(g){var x,b=g.length,y=this,w=0,C=y.i=y.j=0,S=y.S=[];for(b||(g=[b++]);w<a;)S[w]=w++;for(w=0;w<a;w++)S[w]=S[C=h&C+g[w%b]+(x=S[w])],S[C]=x;(y.g=function(k){for(var I,R=0,T=y.i,D=y.j,L=y.S;k--;)I=L[T=h&T+1],R=R*a+L[h&(L[T]=L[D=h&D+I])+(L[D]=I)];return y.i=T,y.j=D,R})(a)}function d(g,x){return x.i=g.i,x.j=g.j,x.S=g.S.slice(),x}function m(g,x){for(var b,y=g+"",w=0;w<y.length;)x[h&w]=h&(b^=19*x[h&w])+y.charCodeAt(w++);return v(x)}function v(g){return String.fromCharCode.apply(0,g)}if(e["seed"+s]=f,m(e.random(),n),r.exports){r.exports=f;try{t=require("crypto")}catch{}}})([],Math)});fe.alea=i7,fe.xor128=s7,fe.xorwow=u7,fe.xorshift7=c7,fe.xor4096=l7,fe.tychei=h7;var an=fe.alea,A2=function(){function r(n,e,t,o,a){this.mean=n,this.stdDev=e,this.dtype=t,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var i=a||Math.random();this.random=an(i.toString())}return r.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var n=this.nextVal;return this.nextVal=NaN,n}for(var e,t,o=!1;!o;){var a=void 0,i=void 0,s=void 0;do s=(a=2*this.random()-1)*a+(i=2*this.random()-1)*i;while(s>=1||s===0);var u=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*u,t=this.mean+this.stdDev*i*u,this.truncated&&!this.isValidTruncated(e)||(o=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)},r.prototype.convertValue=function(n){return this.dtype==null||this.dtype==="float32"?n:Math.round(n)},r.prototype.isValidTruncated=function(n){return n<=this.upper&&n>=this.lower},r}(),f7=function(){function r(n,e,t,o){this.alpha=n,this.beta=1/e,this.dtype=t;var a=o||Math.random();this.randu=an(a.toString()),this.randn=new A2(0,1,t,!1,this.randu()),this.d=n<1?n+2/3:n-1/3,this.c=1/Math.sqrt(9*this.d)}return r.prototype.nextValue=function(){for(var n,e,t,o,a,i;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,e=1-.331*(n=o*o)*n,t=.5*n+this.d*(1-i+Math.log(i)),(a=this.randu())<e||Math.log(a)<t)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)},r.prototype.convertValue=function(n){return this.dtype==="float32"?n:Math.round(n)},r}(),p7=function(){function r(n,e,t,o){var a=this;if(n===void 0&&(n=0),e===void 0&&(e=1),this.canReturnFloat=function(){return a.dtype==null||a.dtype==="float32"},this.min=n,this.range=e-n,this.dtype=t,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between "+n+" - "+e+" <= 1 and dtype is not float");this.random=an(o)}return r.prototype.convertValue=function(n){return this.canReturnFloat()?n:Math.round(n)},r.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},r}();function o0(r,n,e){return n===void 0&&(n="float32"),n=n||"float32",O4(r),new rt(r,n,e)}function d7(r,n){n===void 0&&(n=!1),console.log(r.toString(n))}var H4=A({batchToSpaceND_:function(r,n,e){var t=_(r,"x","batchToSpaceND"),o=n.reduce(function(a,i){return a*i});return E(t.rank>=1+n.length,function(){return"input rank is "+t.rank+" but should be > than blockShape.length "+n.length}),E(e.length===n.length,function(){return"crops.length is "+e.length+" but should be equal to blockShape.length  "+n.length}),E(t.shape[0]%o==0,function(){return"input tensor batch is "+t.shape[0]+" but is not divisible by the product of the elements of blockShape "+n.join(" * ")+" === "+o}),M.runKernelFunc(function(a){return a.batchToSpaceND(t,n,e)},{$x:t},function(a){return{$x:function(){return a.spaceToBatchND(n,e)}}})}}),v7=A({broadcastTo_:function(r,n){var e=_(r,"broadcastTo","x"),t=e.shape;if(n.some(function(u){return!(u>0)||u%1!=0}))throw new Error("broadcastTo(): Invalid broadcast shape ["+n+"].");if(n.length<e.rank)throw new Error("broadcastTo(): shape.length="+n.length+" < input.rank="+e.rank+".");if(n.length>e.rank){for(var o=e.shape.slice();o.length<n.length;)o.unshift(1);e=e.reshape(o)}for(var a=Array.from(n),i=n.length-1;i>=0;i--)if(e.shape[i]===n[i])a[i]=1;else if(e.shape[i]!==1)throw new Error("broadcastTo(): ["+t+"] cannot be broadcast to ["+n+"].");var s=a.map(function(u,c){return u>1?c:-1}).filter(function(u){return u>=0});return s.length===0?e.clone():M.runKernelFunc(function(u){return u.tile(e,a)},{input:e},function(u){return{input:function(){return u.sum(s,!0)}}})}}),m7=A({cast_:function(r,n){var e=_(r,"x","cast");if(!u6(n))throw new Error("Failed to cast to unknown dtype "+n);if(n==="string"&&e.dtype!=="string"||n!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");var t={dtype:n};return M.runKernelFunc(function(o){return o.cast(e,n)},{x:e},function(o){return{x:function(){return o.clone()}}},"Cast",t)}}),g7=A({clone_:function(r){var n=_(r,"x","clone",null);return M.runKernelFunc(function(){return M.makeTensorFromDataId(n.dataId,n.shape,n.dtype)},{$x:n},function(e){return{$x:function(){return e.toFloat()}}})}}),y7=A({cumsum_:function(r,n,e,t){n===void 0&&(n=0),e===void 0&&(e=!1),t===void 0&&(t=!1);var o=_(r,"x","cumsum"),a=O1([n|=0],o.rank),i=o;a!=null&&(i=o.transpose(a));var s=B1(1,o.rank)[0],u=M.runKernelFunc(function(c){return c.cumsum(i,s,e,t)},{permutedX:i},function(c){return{permutedX:function(){return c.cumsum(n,e,!t)}}});return a!=null&&(u=u.transpose(a)),u}}),x7=A({depthToSpace_:function(r,n,e){e===void 0&&(e="NHWC");var t=_(r,"x","depthToSpace"),o=e==="NHWC"?t.shape[1]:t.shape[2],a=e==="NHWC"?t.shape[2]:t.shape[3],i=e==="NHWC"?t.shape[3]:t.shape[1];return E(o*n>=0,function(){return`Negative dimension size caused by overflow when multiplying
      `+o+" and "+n+`  for depthToSpace with input shape
      `+t.shape}),E(a*n>=0,function(){return`Negative dimension size caused by overflow when multiplying
      `+a+" and "+n+` for depthToSpace with input shape
          `+t.shape}),E(i%(n*n)==0,function(){return"Dimension size must be evenly divisible by "+n*n+" but is "+i+" for depthToSpace with input shape "+t.shape}),M.runKernelFunc(function(s){return s.depthToSpace(t,n,e)},{$x:t})}}),h1=A({expandDims_:function(r,n){n===void 0&&(n=0);var e=_(r,"x","expandDims",null);E(n<=e.rank,function(){return"Axis must be <= rank of the tensor"});var t=e.shape.slice();return n<0&&(E(-(e.rank+1)<=n,function(){return"Axis must be in the interval ["+-(e.rank+1)+", "+e.rank+"]"}),n=e.rank+n+1),t.splice(n,0,1),g1(e,t)}}),j4=A({eye_:function(r,n,e,t){t===void 0&&(t="float32"),n==null&&(n=r);for(var o=o0([r,n],t),a=r<=n?r:n,i=0;i<a;++i)o.set(1,i,i);var s=o.toTensor().as2D(r,n);if(e==null)return s;if(e.length===1)return Oe(h1(s,0),[e[0],1,1]);if(e.length===2)return Oe(h1(h1(s,0),0),[e[0],e[1],1,1]);if(e.length===3)return Oe(h1(h1(h1(s,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+e.length+"D.")}}),b7=A({multinomial_:function(r,n,e,t){t===void 0&&(t=!1);var o=_(r,"logits","multinomial"),a=o.size,i=o.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);e=e||Math.random();var s=i===1?o.as2D(1,-1):o,u=M.runKernelFunc(function(c){return c.multinomial(s,t,n,e)},{logits2D:s});return i===1?u.as1D():u}}),l2=A({oneHot_:function(r,n,e,t){if(e===void 0&&(e=1),t===void 0&&(t=0),n<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+n);var o=_(r,"indices","oneHot","int32"),a=o.shape.concat([n]);return o=o.flatten(),M.runKernelFunc(function(i){return i.oneHot(o,n,e,t)},{$indices:o},function(i){return{$indices:function(){return w0(o.shape,"float32")}}}).reshape(a)}}),be=A({pad_:function(r,n,e){e===void 0&&(e=0);var t=_(r,"x","pad");if(t.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var o={paddings:n,constantValue:e};return M.runKernelFunc(function(a){return a.pad(t,n,e)},{x:t},function(a){var i=n.map(function(s){return s[0]});return{x:function(){return a.slice(i,t.shape)}}},"PadV2",o)}}),w7=A({pad1d_:function(r,n,e){return e===void 0&&(e=0),E(n.length===2,function(){return"Invalid number of paddings. Must be length of 2."}),be(r,[n],e)}}),C7=A({pad2d_:function(r,n,e){return e===void 0&&(e=0),E(n.length===2&&n[0].length===2&&n[1].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),be(r,n,e)}}),_7=A({pad3d_:function(r,n,e){return e===void 0&&(e=0),E(n.length===3&&n[0].length===2&&n[1].length===2&&n[2].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),be(r,n,e)}}),E7=A({pad4d_:function(r,n,e){return e===void 0&&(e=0),E(n.length===4&&n[0].length===2&&n[1].length===2&&n[2].length===2&&n[3].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),be(r,n,e)}}),I7=A({rand_:function(r,n,e){var t=$(r),o=null;if(e==null||e==="float32")o=new Float32Array(t);else if(e==="int32")o=new Int32Array(t);else{if(e!=="bool")throw new Error("Unknown data type "+e);o=new Uint8Array(t)}for(var a=0;a<t;a++)o[a]=n();return M.makeTensor(o,r,e)}}),R7=A({randomNormal_:function(r,n,e,t,o){if(n===void 0&&(n=0),e===void 0&&(e=1),t!=null&&t==="bool")throw new Error("Unsupported data type "+t);for(var a=new A2(n,e,t,!1,o),i=o0(r,t),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),k7=A({randomGamma_:function(r,n,e,t,o){if(e===void 0&&(e=1),t===void 0&&(t="float32"),e==null&&(e=1),t==null&&(t="float32"),t!=="float32"&&t!=="int32")throw new Error("Unsupported data type "+t);for(var a=new f7(n,e,t,o),i=o0(r,t),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),q4=A({randomUniform_:function(r,n,e,t,o){n===void 0&&(n=0),e===void 0&&(e=1),t===void 0&&(t="float32");for(var a=o0(r,t),i=new p7(n,e,null,o),s=0;s<a.values.length;s++)a.values[s]=i.nextValue();return a.toTensor()}}),g1=A({reshape_:function(r,n){var e=_(r,"x","reshape",null);n=i6(n,e.size),E(e.size===$(n),function(){return"new shape and old shape must have the same number of elements."});var t={shape:n};return M.runKernelFunc(function(o){return o.reshape(e,n)},{x:e},function(o){return{x:function(){return o.reshape(e.shape)}}},"Reshape",t)}}),K4=A({spaceToBatchND_:function(r,n,e){var t=_(r,"x","spaceToBatchND");return E(t.rank>=1+n.length,function(){return"input rank "+t.rank+" should be > than [blockShape] "+n.length}),E(e.length===n.length,function(){return"paddings.shape[0] "+e.length+" must be equal to [blockShape] "+n.length}),E(t.shape.reduce(function(o,a,i){return i>0&&i<=n.length?o&&(a+e[i-1][0]+e[i-1][1])%n[i-1]==0:o},!0),function(){return"input spatial dimensions "+t.shape.slice(1)+" with paddings "+e.toString()+" must be divisible by blockShapes "+n.toString()}),M.runKernelFunc(function(o){return o.spaceToBatchND(t,n,e)},{$x:t},function(o){return{$x:function(){return o.batchToSpaceND(n,e)}}})}}),X4=A({squeeze_:function(r,n){var e=_(r,"x","squeeze");return g1(e,pe(e.shape,n).newShape)}}),c1=A({stack_:function(r,n){n===void 0&&(n=0);var e=Ut(r,"tensors","stack");if(E(e.length>=1,function(){return"Pass at least one tensor to tf.stack"}),e.length===1)return e[0].expandDims(n);var t=e[0].rank,o=e[0].shape,a=e[0].dtype;E(n<=t,function(){return"Axis must be <= rank of the tensor"}),e.forEach(function(s){y0(o,s.shape,"All tensors passed to stack must have matching shapes")}),e.forEach(function(s){E(a===s.dtype,function(){return"All tensors passed to stack must have matching dtypes"})});var i=e.map(function(s){return s.expandDims(n)});return N0(i,n)}}),Oe=A({tile_:function(r,n){var e=_(r,"x","tile",null);E(e.rank===n.length,function(){return"Error in transpose: rank of input "+e.rank+" must match length of reps "+n+"."});var t=[e],o={reps:n};return M.runKernelFunc(function(a,i){var s=a.tile(e,n);return i([e]),s},{x:e},function(a,i){var s=i[0];return{x:function(){var u=v0(s);if(s.rank===1)for(var c=0;c<n[0];++c)u=u.add(a.slice([c*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(c=0;c<n[0];++c)for(var l=0;l<n[1];++l)u=u.add(a.slice([c*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(c=0;c<n[0];++c)for(l=0;l<n[1];++l)for(var h=0;h<n[2];++h)u=u.add(a.slice([c*s.shape[0],l*s.shape[1],h*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(s.rank!==4)throw new Error("Gradient for tile operation is not implemented for rank-"+s.rank+" tensors yet.");for(c=0;c<n[0];++c)for(l=0;l<n[1];++l)for(h=0;h<n[2];++h)for(var f=0;f<n[3];++f)u=u.add(a.slice([c*s.shape[0],l*s.shape[1],h*s.shape[2],f*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return u}}},"Tile",o,t)}}),S7=A({truncatedNormal_:function(r,n,e,t,o){if(n===void 0&&(n=0),e===void 0&&(e=1),t!=null&&t==="bool")throw new Error("Unsupported data type "+t);for(var a=new A2(n,e,t,!0,o),i=o0(r,t),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),F0=A({unstack_:function(r,n){n===void 0&&(n=0),n=n||0;var e=_(r,"x","unstack");E(n>=-e.shape.length&&n<e.shape.length,function(){return"Axis = "+n+" is not in [-"+e.shape.length+", "+e.shape.length+")"}),n<0&&(n+=e.shape.length);var t={axis:n};return M.runKernelFunc(function(o){return o.unstack(e,n)},{x:e},function(o){return{x:function(){return c1(o,n)}}},"Unpack",t)}}),A7=function(r,n){return X(this,void 0,void 0,function(){var e,t,o,a,i,s,u,c,l,h;return Y(this,function(f){switch(f.label){case 0:return e=_(r,"x","setdiff1d"),t=_(n,"y","setdiff1d"),E(e.dtype===t.dtype,function(){return"x and y should have the same dtype, but got x ("+e.dtype+") and y ("+t.dtype+")."}),E(e.rank===1,function(){return"x should be 1D tensor, but got x ("+e.shape+")."}),E(t.rank===1,function(){return"y should be 1D tensor, but got y ("+t.shape+")."}),[4,e.data()];case 1:return o=f.sent(),[4,t.data()];case 2:for(a=f.sent(),i=new Set(a),s=0,l=0;l<o.length;l++)i.has(o[l])||s++;for(u=new rt([s],e.dtype),c=new rt([s],"int32"),l=0,h=0;l<o.length;l++)i.has(o[l])||(u.values[h]=o[l],c.values[h]=l,h++);return[2,[u.toTensor(),c.toTensor()]]}})})};function zt(r,n,e,t){t===void 0&&(t=!0);var o=[];if(t)(o=o.concat(n.slice(0))).push(r[0]/e),o=o.concat(r.slice(1));else{o=o.concat(r[0]);for(var a=n.length,i=0;i<a;++i)o=o.concat([r[i+1]/n[i],n[i]]);o=o.concat(r.slice(a+1))}return o}function Ht(r,n,e){e===void 0&&(e=!0);var t=[];if(e){t.push(n);for(var o=n+1;o<r;++o)o<=2*n?(t.push(o),t.push(o-(n+1))):t.push(o)}else{var a=[],i=[];for(o=1;o<r;++o)o>=2*n+1||o%2==1?i.push(o):a.push(o);t.push.apply(t,a),t.push(0),t.push.apply(t,i)}return t}function jt(r,n,e,t){t===void 0&&(t=!0);var o=[];t?o.push(r[0]/e):o.push(r[0]*e);for(var a=1;a<r.length;++a)a<=n.length?t?o.push(n[a-1]*r[a]):o.push(r[a]/n[a-1]):o.push(r[a]);return o}function Y4(r,n){for(var e=[0],t=0;t<n;++t)e.push(r[t][0]);return e}function $4(r,n,e){for(var t=r.slice(0,1),o=0;o<e;++o)t.push(r[o+1]-n[o][0]-n[o][1]);return t}function J4(r,n){if(r.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+r.rank+".");if(n.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+n.rank+".");if(n.dtype!=="int32")throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+n.dtype+".");if(n.shape[n.rank-1]>r.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+n.shape[n.rank-1]+" vs. "+r.rank);if(r.size===0)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+r.shape+".");for(var e=n.shape,t=e[e.length-1],o=1,a=0;a<e.length-1;++a)o*=e[a];var i=r.shape,s=e.slice();s.pop();var u=1;for(a=t;a<r.rank;++a)u*=i[a],s.push(i[a]);var c=M1(r.shape).map(function(l){return l/u}).concat([1]).slice(0,t);return[s,o,u,c]}var Q4=30;function On(r){return r<=Q4?r:o2(r,Math.floor(Math.sqrt(r)))}function D7(r,n,e){var t=n.rank>1?n.shape[n.rank-1]:1,o=n.rank>1?n.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+e.shape+", indices.shape: "+n.shape+", shape: "+r+", sliceDim: "+t+", and batchDim: "+o+".";if(e.rank<o)throw new Error(a+" update.rank < "+o+". ");if(r.length<t+(e.rank-o))throw new Error(a+" Output shape length < "+(t+(e.rank-o)));if(e.rank!==o+r.length-t)throw new Error(a+" update.rank != "+(o+r.length-t));for(var i=0;i<o;++i)if(e.shape[i]!==n.shape[i])throw new Error(a+" updates.shape["+i+"] ("+e.shape[i]+") != indices.shape["+i+"] ("+n.shape[i]+").");for(i=0;i<e.rank-o;++i)if(e.shape[i+o]!==r[i+t])throw new Error(a+" updates.shape["+(i+o)+"] ("+e.shape[i+o]+") != shape["+(i+o)+"] ("+r[i+o]+")")}function M7(r,n,e){if(n.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+n.rank+".");if(r.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+r.rank+".");if(n.dtype!=="int32")throw new Error("The dtype of 'indices' should be int32, but got dtype: "+n.dtype);if(e.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+e);if(e.length===0){if(n.size===0)throw new Error("Indices specified for empty output. indices shape: "+n.shape);if(r.size===0)throw new Error("Updates specified for empty output. updates shape: "+r.shape)}D7(e,n,r)}function qt(r,n,e){for(var t=n.shape.length,o=t>1?n.shape[t-1]:1,a=e.length,i=1,s=o;s<a;++s)i*=e[s];var u=o<1?1:o;return{sliceRank:o,numUpdates:$(n.shape)/u,sliceSize:i,strides:M1(e.slice(0,o)).concat([1]),outputSize:$(e)}}function T7(r,n,e){E(r.rank===n.length,function(){return"Error in slice"+r.rank+"D: Length of begin "+n+" must match the rank of the array ("+r.rank+")."}),E(r.rank===e.length,function(){return"Error in slice"+r.rank+"D: Length of size "+e+" must match the rank of the array ("+r.rank+")."});for(var t=function(a){E(n[a]+e[a]<=r.shape[a],function(){return"Error in slice"+r.rank+"D: begin["+a+"] + size["+a+"] ("+(n[a]+e[a])+") would overflow input.shape["+a+"] ("+r.shape[a]+")"})},o=0;o<r.rank;++o)t(o)}function L3(r){for(var n=[],e=0;r>0;)1&r&&n.push(e),r/=2,e++;return n}function D2(r,n,e){for(var t=[],o=0;o<r.length;o++)t[o]=Math.ceil((n[o]-r[o])/e[o]);return t}function N7(r,n,e,t,o){var a=n[o],i=e[o]||1;(r&1<<o||a==null)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var s=t[o];return a<0&&(a+=s),a=t2(0,a,s-1)}function F7(r,n,e,t,o){var a=n[o],i=e[o]||1;(r&1<<o||a==null)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var s=t[o];return a<0&&(a+=s),a=i>0?t2(0,a,s):t2(-1,a,s-1)}function Z4(r,n,e){for(var t=e.length,o=0;o<e.length;o++)if(e[o]>1){t=o;break}for(o=t+1;o<e.length;o++)if(n[o]>0||e[o]!==r[o])return!1;return!0}function er(r,n){for(var e=r.length>0?r[r.length-1]:1,t=0;t<r.length-1;t++)e+=r[t]*n[t];return e}function P7(r,n){E(r2(r),function(){return"The f passed in variableGrads(f) must be a function"}),E(n==null||Array.isArray(n)&&n.every(function(l){return l instanceof ze}),function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"});var e=n!=null;if(!e)for(var t in n=[],M.registeredVariables)n.push(M.registeredVariables[t]);var o=e?n.filter(function(l){return!l.trainable}):null,a=n.length;E((n=n.filter(function(l){return l.trainable})).length>0,function(){return"variableGrads() expects at least one of the input variables to be trainable, but none of the "+a+" variables is trainable."});var i=M.gradients(r,n,null,!0),s=i.value,u=i.grads;E(u.some(function(l){return l!=null}),function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."}),E(s.rank===0,function(){return"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+s.rank+" tensor"});var c={};return n.forEach(function(l,h){u[h]!=null&&(c[l.name]=u[h])}),o!=null&&o.forEach(function(l){return c[l.name]=null}),{value:s,grads:c}}function sn(r){return M.customGrad(r)}var q1=A({softmax_:function(r,n){n===void 0&&(n=-1);var e=_(r,"logits","softmax","float32");if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+e.rank+" and dim was "+n);return M.runKernelFunc(function(t,o){var a=t.softmax(e,n);return o([a]),a},{logits:e},function(t,o){var a=o[0],i=t.mul(a);return{logits:function(){return i.sub(i.sum([n],!0).mul(a))}}},"Softmax",{dim:n},[],[!0])}}),O7=A({logSoftmax_:function(r,n){n===void 0&&(n=-1);var e=_(r,"logits","logSoftmax");if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+e.rank+" and axis was "+n);return sn(function(t,o){var a=t.max(n,!0),i=t.sub(a),s=i.toFloat().sub(i.exp().sum(n,!0).log());return o([s]),{value:s,gradFunc:function(u,c){var l=c[0].exp();return u.sub(u.sum(n,!0).mul(l))}}})(e)}}),tr=function(){function r(n,e){this.backend=n,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}return r.prototype.get=function(n){return this.data.has(n)||this.dataMover.moveData(this.backend,n),this.data.get(n)},r.prototype.set=function(n,e){this.dataIdsCount++,this.data.set(n,e)},r.prototype.has=function(n){return this.data.has(n)},r.prototype.delete=function(n){return this.dataIdsCount--,this.data.delete(n)},r.prototype.numDataIds=function(){return this.dataIdsCount},r}(),nr=function(){function r(){}return r.prototype.time=function(n){return N("time")},r.prototype.read=function(n){return N("read")},r.prototype.readSync=function(n){return N("readSync")},r.prototype.numDataIds=function(){return N("numDataIds")},r.prototype.disposeData=function(n){return N("disposeData")},r.prototype.write=function(n,e,t){return N("write")},r.prototype.move=function(n,e,t,o){return N("move")},r.prototype.memory=function(){return N("memory")},r.prototype.floatPrecision=function(){return N("floatPrecision")},r.prototype.epsilon=function(){return this.floatPrecision()===32?1e-7:1e-4},r.prototype.batchMatMul=function(n,e,t,o){return N("batchMatMul")},r.prototype.fusedBatchMatMul=function(n){return n.a,n.b,n.transposeA,n.transposeB,n.bias,n.activation,n.preluActivationWeights,N("fusedBatchMatMul")},r.prototype.slice=function(n,e,t){return N("slice")},r.prototype.stridedSlice=function(n,e,t,o){return N("stridedSlice")},r.prototype.unstack=function(n,e){return N("unstack")},r.prototype.reverse=function(n,e){return N("reverse")},r.prototype.concat=function(n,e){return N("concat")},r.prototype.neg=function(n){return N("neg")},r.prototype.add=function(n,e){return N("add")},r.prototype.addN=function(n){return N("addN")},r.prototype.subtract=function(n,e){return N("subtract")},r.prototype.multiply=function(n,e){return N("multiply")},r.prototype.realDivide=function(n,e){return N("realDivide")},r.prototype.floorDiv=function(n,e){return N("floorDiv")},r.prototype.sum=function(n,e){return N("sum")},r.prototype.prod=function(n,e){return N("prod")},r.prototype.unsortedSegmentSum=function(n,e,t){return N("unsortedSegmentSum")},r.prototype.argMin=function(n,e){return N("argMin")},r.prototype.argMax=function(n,e){return N("argMax")},r.prototype.equal=function(n,e){return N("equal")},r.prototype.notEqual=function(n,e){return N("notEqual")},r.prototype.less=function(n,e){return N("less")},r.prototype.lessEqual=function(n,e){return N("lessEqual")},r.prototype.greater=function(n,e){return N("greater")},r.prototype.greaterEqual=function(n,e){return N("greaterEqual")},r.prototype.logicalNot=function(n){return N("logicalNot")},r.prototype.logicalAnd=function(n,e){return N("logicalAnd")},r.prototype.logicalOr=function(n,e){return N("logicalOr")},r.prototype.where=function(n){return N("where")},r.prototype.select=function(n,e,t){return N("select")},r.prototype.topk=function(n,e,t){return N("topk")},r.prototype.min=function(n,e){return N("min")},r.prototype.minimum=function(n,e){return N("minimum")},r.prototype.mod=function(n,e){return N("mod")},r.prototype.max=function(n,e){return N("max")},r.prototype.maximum=function(n,e){return N("maximum")},r.prototype.all=function(n,e){return N("all")},r.prototype.any=function(n,e){return N("any")},r.prototype.squaredDifference=function(n,e){return N("squaredDifference")},r.prototype.ceil=function(n){return N("ceil")},r.prototype.floor=function(n){return N("floor")},r.prototype.round=function(n){return N("round")},r.prototype.sign=function(n){return N("sign")},r.prototype.isNaN=function(n){return N("isNaN")},r.prototype.isInf=function(n){return N("isInf")},r.prototype.isFinite=function(n){return N("isFinite")},r.prototype.pow=function(n,e){return N("pow")},r.prototype.exp=function(n){return N("exp")},r.prototype.expm1=function(n){return N("expm1")},r.prototype.softmax=function(n,e){return N("softmax")},r.prototype.log=function(n){return N("log")},r.prototype.log1p=function(n){return N("log1p")},r.prototype.sqrt=function(n){return N("sqrt")},r.prototype.rsqrt=function(n){return N("rsqrt")},r.prototype.square=function(n){return N("square")},r.prototype.reciprocal=function(n){return N("reciprocal")},r.prototype.relu=function(n){return N("relu")},r.prototype.relu6=function(n){return N("relu6")},r.prototype.prelu=function(n,e){return N("prelu")},r.prototype.elu=function(n){return N("elu")},r.prototype.eluDer=function(n,e){return N("eluDer")},r.prototype.selu=function(n){return N("selu")},r.prototype.int=function(n){return N("int")},r.prototype.clip=function(n,e,t){return N("clip")},r.prototype.abs=function(n){return N("abs")},r.prototype.complexAbs=function(n){return N("complexAbs")},r.prototype.sigmoid=function(n){return N("sigmoid")},r.prototype.softplus=function(n){return N("softplus")},r.prototype.sin=function(n){return N("sin")},r.prototype.cos=function(n){return N("cos")},r.prototype.tan=function(n){return N("tan")},r.prototype.asin=function(n){return N("asin")},r.prototype.acos=function(n){return N("acos")},r.prototype.atan=function(n){return N("atan")},r.prototype.atan2=function(n,e){return N("atan2")},r.prototype.sinh=function(n){return N("sinh")},r.prototype.cosh=function(n){return N("cosh")},r.prototype.tanh=function(n){return N("tanh")},r.prototype.asinh=function(n){return N("asinh")},r.prototype.acosh=function(n){return N("acosh")},r.prototype.atanh=function(n){return N("atanh")},r.prototype.erf=function(n){return N("erf")},r.prototype.step=function(n,e){return N("step")},r.prototype.fusedConv2d=function(n){return n.input,n.filter,n.convInfo,n.bias,n.activation,n.preluActivationWeights,N("fusedConv2d")},r.prototype.conv2d=function(n,e,t){return N("conv2d")},r.prototype.conv2dDerInput=function(n,e,t){return N("conv2dDerInput")},r.prototype.conv2dDerFilter=function(n,e,t){return N("conv2dDerFilter")},r.prototype.fusedDepthwiseConv2D=function(n){return n.input,n.filter,n.convInfo,n.bias,n.activation,n.preluActivationWeights,N("fusedDepthwiseConv2D")},r.prototype.depthwiseConv2D=function(n,e,t){return N("depthwiseConv2D")},r.prototype.depthwiseConv2DDerInput=function(n,e,t){return N("depthwiseConv2DDerInput")},r.prototype.depthwiseConv2DDerFilter=function(n,e,t){return N("depthwiseConv2DDerFilter")},r.prototype.conv3d=function(n,e,t){return N("conv3d")},r.prototype.conv3dDerInput=function(n,e,t){return N("conv3dDerInput")},r.prototype.conv3dDerFilter=function(n,e,t){return N("conv3dDerFilter")},r.prototype.maxPool=function(n,e){return N("maxPool")},r.prototype.maxPoolBackprop=function(n,e,t,o){return N("maxPoolBackprop")},r.prototype.avgPool=function(n,e){return N("avgPool")},r.prototype.avgPoolBackprop=function(n,e,t){return N("avgPoolBackprop")},r.prototype.avgPool3d=function(n,e){return N("avgPool3d")},r.prototype.avgPool3dBackprop=function(n,e,t){return N("avgPool3dBackprop")},r.prototype.maxPool3d=function(n,e){return N("maxPool3d")},r.prototype.maxPool3dBackprop=function(n,e,t,o){return N("maxPool3dBackprop")},r.prototype.reshape=function(n,e){return N("reshape")},r.prototype.cast=function(n,e){return N("cast")},r.prototype.tile=function(n,e){return N("tile")},r.prototype.pad=function(n,e,t){return N("pad")},r.prototype.transpose=function(n,e){return N("transpose")},r.prototype.gather=function(n,e,t){return N("gather")},r.prototype.gatherND=function(n,e){return N("gatherND")},r.prototype.scatterND=function(n,e,t){return N("scatterND")},r.prototype.batchToSpaceND=function(n,e,t){return N("batchToSpaceND")},r.prototype.spaceToBatchND=function(n,e,t){return N("spaceToBatchND")},r.prototype.resizeBilinear=function(n,e,t,o){return N("resizeBilinear")},r.prototype.resizeBilinearBackprop=function(n,e,t){return N("resizeBilinearBackprop")},r.prototype.resizeNearestNeighbor=function(n,e,t,o){return N("resizeNearestNeighbor")},r.prototype.resizeNearestNeighborBackprop=function(n,e,t){return N("resizeNearestNeighborBackprop")},r.prototype.batchNormalization=function(n,e,t,o,a,i){return N("batchNormalization")},r.prototype.localResponseNormalization4D=function(n,e,t,o,a){return N("localResponseNormalization4D")},r.prototype.LRNGrad=function(n,e,t,o,a,i,s){return N("LRNGrad")},r.prototype.multinomial=function(n,e,t,o){return N("multinomial")},r.prototype.oneHot=function(n,e,t,o){return N("oneHot")},r.prototype.cumsum=function(n,e,t,o){return N("cumsum")},r.prototype.nonMaxSuppression=function(n,e,t,o,a){return N("nonMaxSuppression")},r.prototype.fft=function(n){return N("fft")},r.prototype.ifft=function(n){return N("ifft")},r.prototype.complex=function(n,e){return N("complex")},r.prototype.real=function(n){return N("real")},r.prototype.imag=function(n){return N("imag")},r.prototype.cropAndResize=function(n,e,t,o,a,i){return N("cropAndResize")},r.prototype.depthToSpace=function(n,e,t){return N("depthToSpace")},r.prototype.split=function(n,e,t){return N("split")},r.prototype.sparseToDense=function(n,e,t,o){return N("sparseToDense")},r.prototype.diag=function(n){return N("diag")},r.prototype.fill=function(n,e,t){return N("fill")},r.prototype.onesLike=function(n){return N("onesLike")},r.prototype.zerosLike=function(n){return N("zerosLike")},r.prototype.linspace=function(n,e,t){return N("linspace")},r.prototype.dispose=function(){return N("dispose")},r}();function N(r){throw new Error("'"+r+"' not yet implemented or not found in the registry. Did you forget to import the kernel?")}function ee(r,n){for(var e=r.length,t=[],o=0;o<e;o++){var a=e-1-o,i=r[a]||1;(n[n.length-1-o]||1)>1&&i===1&&t.unshift(a)}return t}function P0(r,n){for(var e=[],t=0;t<n.length;t++){var o=r[r.length-t-1],a=n.length-t-1,i=n[a];(o==null||o===1&&i>1)&&e.unshift(a)}return e}function l0(r,n){for(var e=[],t=Math.max(r.length,n.length),o=0;o<t;o++){var a=r[r.length-o-1];a==null&&(a=1);var i=n[n.length-o-1];if(i==null&&(i=1),a===1)e.unshift(i);else if(i===1)e.unshift(a);else{if(a!==i)throw Error("Operands could not be broadcast together with shapes "+r+" and "+n+".");e.unshift(a)}}return e}function at(r,n,e,t,o,a,i){i===void 0&&(i="channelsLast");var s,u=Yt(n),c=u[0],l=u[1];if(i==="channelsLast")s=[c,l,r[3],r[3]];else{if(i!=="channelsFirst")throw new Error("Unknown dataFormat "+i);s=[c,l,r[1],r[1]]}return we(r,s,e,t,o,a,!1,i)}function Kt(r,n,e,t,o,a,i){i===void 0&&(i="NDHWC");var s,u,c=h2(n),l=c[0],h=c[1],f=c[2];if(i==="NDHWC")u="channelsLast",s=[l,h,f,r[4],r[4]];else{if(i!=="NCDHW")throw new Error("Unknown dataFormat "+i);u="channelsFirst",s=[l,h,f,r[1],r[1]]}return Xt(r,s,e,t,o,!1,u,a)}function we(r,n,e,t,o,a,i,s){i===void 0&&(i=!1),s===void 0&&(s="channelsLast");var u=[-1,-1,-1,-1],c=u[0],l=u[1],h=u[2],f=u[3];if(s==="channelsLast")c=r[0],l=r[1],h=r[2],f=r[3];else{if(s!=="channelsFirst")throw new Error("Unknown dataFormat "+s);c=r[0],f=r[1],l=r[2],h=r[3]}var p,d=n[0],m=n[1],v=n[3],g=Yt(e),x=g[0],b=g[1],y=Yt(t),w=y[0],C=y[1],S=Be(d,w),k=Be(m,C),I=function(O,B,U,V,W,z,H,q){var e0,t0,i0;if(typeof O=="number"){e0={top:O,bottom:O,left:O,right:O,type:O===0?"VALID":"NUMBER"};var s0=function(f0,x0,m0,k0,C0){k0==null&&(k0=rr(f0,x0,m0));var _0=f0[0],w1=f0[1],C1=et((_0-x0+2*k0)/m0+1,C0);E(A0(C1),function(){return"The output # of rows ("+C1+") must be an integer. Change the stride and/or zero pad parameters"});var r1=et((w1-x0+2*k0)/m0+1,C0);return E(A0(r1),function(){return"The output # of columns ("+r1+") must be an integer. Change the stride and/or zero pad parameters"}),[C1,r1]}([B,U],z,V,O,q);t0=s0[0],i0=s0[1]}else if(O==="same"){t0=Math.ceil(B/V),i0=Math.ceil(U/W);var c0=Math.max(0,(t0-1)*V+z-B),p0=Math.max(0,(i0-1)*W+H-U),h0=Math.floor(c0/2),d0=c0-h0,D0=Math.floor(p0/2);e0={top:h0,bottom:d0,left:D0,right:p0-D0,type:"SAME"}}else{if(O!=="valid")throw Error("Unknown padding parameter: "+O);e0={top:0,bottom:0,left:0,right:0,type:"VALID"},t0=Math.ceil((B-z+1)/V),i0=Math.ceil((U-H+1)/W)}return{padInfo:e0,outHeight:t0,outWidth:i0}}(o,l,h,x,b,S,k,a),R=I.padInfo,T=I.outHeight,D=I.outWidth,L=i?v*f:v;return s==="channelsFirst"?p=[c,L,T,D]:s==="channelsLast"&&(p=[c,T,D,L]),{batchSize:c,dataFormat:s,inHeight:l,inWidth:h,inChannels:f,outHeight:T,outWidth:D,outChannels:L,padInfo:R,strideHeight:x,strideWidth:b,filterHeight:d,filterWidth:m,effectiveFilterHeight:S,effectiveFilterWidth:k,dilationHeight:w,dilationWidth:C,inShape:r,outShape:p,filterShape:n}}function Xt(r,n,e,t,o,a,i,s){a===void 0&&(a=!1),i===void 0&&(i="channelsLast");var u=[-1,-1,-1,-1,-1],c=u[0],l=u[1],h=u[2],f=u[3],p=u[4];if(i==="channelsLast")c=r[0],l=r[1],h=r[2],f=r[3],p=r[4];else{if(i!=="channelsFirst")throw new Error("Unknown dataFormat "+i);c=r[0],p=r[1],l=r[2],h=r[3],f=r[4]}var d,m=n[0],v=n[1],g=n[2],x=n[4],b=h2(e),y=b[0],w=b[1],C=b[2],S=h2(t),k=S[0],I=S[1],R=S[2],T=Be(m,k),D=Be(v,I),L=Be(g,R),O=function(H,q,e0,t0,i0,s0,c0,p0,h0,d0,D0){var f0,x0,m0,k0;if(typeof H=="number"){f0={top:H,bottom:H,left:H,right:H,front:H,back:H,type:H===0?"VALID":"NUMBER"};var C0=function(Ie,V1,Cn,Re,_1,_n){_1==null&&(_1=rr(Ie,V1,Re));var X5=Ie[0],Y5=Ie[1],$5=Ie[2],En=et((X5-V1+2*_1)/Re+1,_n);E(A0(En),function(){return"The output # of depths ("+En+") must be an integer. Change the stride and/or zero pad parameters"});var In=et((Y5-V1+2*_1)/Re+1,_n);E(A0(In),function(){return"The output # of rows ("+In+") must be an integer. Change the stride and/or zero pad parameters"});var Rn=et(($5-V1+2*_1)/Re+1,_n);return E(A0(Rn),function(){return"The output # of columns ("+Rn+") must be an integer. Change the stride and/or zero pad parameters"}),[En,In,Rn,Cn]}([q,e0,t0,1],p0,1,i0,H,D0);x0=C0[0],m0=C0[1],k0=C0[2]}else if(H==="same"){x0=Math.ceil(q/i0),m0=Math.ceil(e0/s0),k0=Math.ceil(t0/c0);var _0=(x0-1)*i0+p0-q,w1=(m0-1)*s0+h0-e0,C1=(k0-1)*c0+d0-t0,r1=Math.floor(_0/2),Ee=_0-r1,L1=Math.floor(w1/2),J1=w1-L1,W1=Math.floor(C1/2);f0={top:L1,bottom:J1,left:W1,right:C1-W1,front:r1,back:Ee,type:"SAME"}}else{if(H!=="valid")throw Error("Unknown padding parameter: "+H);f0={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},x0=Math.ceil((q-p0+1)/i0),m0=Math.ceil((e0-h0+1)/s0),k0=Math.ceil((t0-d0+1)/c0)}return{padInfo:f0,outDepth:x0,outHeight:m0,outWidth:k0}}(o,l,h,f,y,w,C,T,D,L,s),B=O.padInfo,U=O.outDepth,V=O.outHeight,W=O.outWidth,z=a?x*p:x;return i==="channelsFirst"?d=[c,z,U,V,W]:i==="channelsLast"&&(d=[c,U,V,W,z]),{batchSize:c,dataFormat:i,inDepth:l,inHeight:h,inWidth:f,inChannels:p,outDepth:U,outHeight:V,outWidth:W,outChannels:z,padInfo:B,strideDepth:y,strideHeight:w,strideWidth:C,filterDepth:m,filterHeight:v,filterWidth:g,effectiveFilterDepth:T,effectiveFilterHeight:D,effectiveFilterWidth:L,dilationDepth:k,dilationHeight:I,dilationWidth:R,inShape:r,outShape:d,filterShape:n}}function rr(r,n,e,t){t===void 0&&(t=1);var o=Be(n,t);return Math.floor((r[0]*(e-1)-e+o)/2)}function Yt(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function h2(r){return typeof r=="number"?[r,r,r]:r}function Be(r,n){return n<=1?r:r+(r-1)*(n-1)}function et(r,n){if(!n)return r;switch(n){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error("Unknown roundingMode "+n)}}function je(r){var n=Yt(r),e=n[0],t=n[1],o=n[2];return e===1&&t===1&&o===1}function n1(r,n){return je(r)||je(n)}function M2(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error("Unknown dataFormat "+r)}function or(r,n,e){if(n==="complex64"){if(r.dtype==="complex64")return r.clone();var t=w0(r.shape),o=r.toFloat(),a=e.complex(o,t);return t.dispose(),o.dispose(),a}if(!c6(r.dtype,n))return M.makeTensorFromDataId(r.dataId,r.shape,n);if(r.dtype==="complex64"){var i=e.real(r);return a=i.cast(n),i.dispose(),a}if(n==="int32")return e.int(r);if(n==="bool"){var s=j(0,r.dtype);return a=e.notEqual(r,s),s.dispose(),a}throw new Error("Error in Cast: failed to cast "+r.dtype+" to "+n)}function f2(r,n){return M.makeTensorFromDataId(r.dataId,n,r.dtype)}function ar(r,n,e){var t=(n-r)/(e-1),o=ft(e,"float32");o[0]=r;for(var a=1;a<o.length;a++)o[a]=o[a-1]+t;return M0(o,"float32")}function p2(r,n){if(r.length!==n.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+r.length+", imag: "+n.length+".");for(var e=new Float32Array(2*r.length),t=0;t<e.length;t+=2)e[t]=r[t/2],e[t+1]=n[t/2];return e}function W3(r,n){return{real:r[2*n],imag:r[2*n+1]}}function B7(r,n,e,t){r[2*t]=n,r[2*t+1]=e}function L7(r,n,e){var t=(e?2:-2)*Math.PI*(r/n);return{real:Math.cos(t),imag:Math.sin(t)}}function W7(r,n,e){var t=function(a,i,s){return function(u,c,l){for(var h=0,f=u.length,p=0,d=!1;h<f;){var m=l(c,u[p=h+(f-h>>>1)]);m>0?h=p+1:(f=p,d=!m)}return d?h:-h-1}(a,i,s||V7)}(r,n,e),o=t<0?-(t+1):t;r.splice(o,0,n)}function V7(r,n){return r>n?1:r<n?-1:0}function T2(r,n,e,t,o){return ir(r,n,e,t,o,0).selectedIndices}function N2(r,n,e,t,o,a){var i=ir(r,n,e,t,o,a);return i.numValidOutputs.dispose(),{selectedIndices:i.selectedIndices,selectedScores:i.selectedScores}}function ir(r,n,e,t,o,a,i,s){s===void 0&&(s=!1);for(var u=Array.from(n).map(function(y,w){return{score:y,boxIndex:w,suppressBeginIndex:0}}).filter(function(y){return y.score>o}).sort(V3),c=a>0?-.5/a:0,l=[],h=[];l.length<e&&u.length>0;){var f=u.pop(),p=f.score,d=f.boxIndex,m=f.suppressBeginIndex;if(p<o)break;for(var v=!1,g=l.length-1;g>=m;--g){var x=U7(r,d,l[g]);if(x>=t){v=!0;break}if(f.score=f.score*G7(t,c,x),f.score<=o)break}f.suppressBeginIndex=l.length,v||(f.score===p?(l.push(d),h.push(f.score)):f.score>o&&W7(u,f,V3))}var b=l.length;return s&&(l.fill(0,b),h.fill(0,b)),{selectedIndices:M0(l,"int32"),selectedScores:M0(h,"float32"),numValidOutputs:j(b,"int32")}}function U7(r,n,e){var t=r.subarray(4*n,4*n+4),o=r.subarray(4*e,4*e+4),a=Math.min(t[0],t[2]),i=Math.min(t[1],t[3]),s=Math.max(t[0],t[2]),u=Math.max(t[1],t[3]),c=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),f=Math.max(o[1],o[3]),p=(s-a)*(u-i),d=(h-c)*(f-l);if(p<=0||d<=0)return 0;var m=Math.max(a,c),v=Math.max(i,l),g=Math.min(s,h),x=Math.min(u,f),b=Math.max(g-m,0)*Math.max(x-v,0);return b/(p+d-b)}function G7(r,n,e){var t=Math.exp(n*e*e);return e<=r?t:0}function V3(r,n){return r.score-n.score||r.score===n.score&&n.boxIndex-r.boxIndex}function sr(r,n,e){var t=new Array(r.rank).fill(0),o=r.shape.slice();return n.map(function(a){o[e]=a;var i=r.slice(t,o);return t[e]+=a,i})}function ur(r,n){for(var e=new Array(r.rank),t=0;t<e.length;t++)e[t]=r.shape[t]*n[t];var o=o0(e,r.dtype);for(t=0;t<o.values.length;++t){for(var a=o.indexToLoc(t),i=new Array(r.rank),s=0;s<i.length;s++)i[s]=a[s]%r.shape[s];var u=r.locToIndex(i);o.values[t]=r.values[u]}return o.toTensor()}function cr(r,n,e,t,o){for(var a=n[n.length-1],i=[r.length/a,a],s=i[0],u=i[1],c=nt(e,s*t),l=nt("int32",s*t),h=0;h<s;h++){for(var f=h*u,p=r.subarray(f,f+u),d=[],m=0;m<p.length;m++)d.push({value:p[m],index:m});d.sort(function(y,w){return w.value-y.value});var v=h*t,g=c.subarray(v,v+t),x=l.subarray(v,v+t);for(m=0;m<t;m++)g[m]=d[m].value,x[m]=d[m].index}var b=n.slice();return b[b.length-1]=t,[H0(c,b,e),H0(l,b,"int32")]}function F2(r,n){for(var e=[],t=0;t<n.length;t++)n[t]&&e.push(t);var o=o0(r,"int32"),a=o0([e.length,r.length],"int32");for(t=0;t<e.length;t++){var i=o.indexToLoc(e[t]),s=t*r.length;a.values.set(i,s)}return a.toTensor()}var z7=function(r,n){this.outputShape=[],this.outputShape=r,this.variableNames=n.map(function(o,a){return"T"+a});var e=[];this.variableNames.forEach(function(o){e.push("float v"+o+" = get"+o+"AtOutCoords();")});var t=this.variableNames.map(function(o){return"v"+o}).join(" + ");this.userCode=`
      void main() {
        `+e.join(`
        `)+`

        float result = `+t+`;
        setOutput(result);
      }
    `},H7=function(r,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.variableNames=n.map(function(o,a){return"T"+a});var e=[];this.variableNames.forEach(function(o){e.push("vec4 v"+o+" = get"+o+"AtOutCoords();")});var t=this.variableNames.map(function(o){return"v"+o}).join(" + ");this.userCode=`
      void main() {
        `+e.join(`
        `)+`

        vec4 result = `+t+`;
        setOutput(result);
      }
    `},j7=function(r,n,e){this.variableNames=["A"];var t=r.windowSize,o=r.batchSize,a=r.inSize,i=Math.ceil(a/t);e||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];var s=n==="max"?">":"<",u=e?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * `+t+`;

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < `+t+`; i++) {
          int inIdx = `+u+`;
          float candidate = getA(batch, inIdx);
          if (candidate `+s+` bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `};function lr(r,n){return["x","y","z","w","u","v"].slice(0,n).map(function(e){return r+"."+e})}function Z0(r,n){return n===1?[r]:lr(r,n)}function X0(){var r,n,e,t,o,a,i,s,u,c;return P().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",n="in",e="out",t="in",o="texture",a="outputColor",i="out vec4 outputColor;",s=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",n="attribute",e="varying",t="varying",o="texture2D",a="gl_FragColor",i="",s=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:n,varyingVs:e,varyingFs:t,texture2D:o,output:a,defineOutput:i,defineSpecialNaN:s,defineSpecialInf:u,defineRound:c}}function de(r,n,e){e===void 0&&(e="index");var t=M1(n);return t.map(function(o,a){return"int "+r[a]+" = "+e+" / "+o+"; "+(a===t.length-1?"int "+r[a+1]+" = "+e+" - "+r[a]+" * "+o:"index -= "+r[a]+" * "+o)+";"}).join("")}function P2(r){var n=M1(r).map(function(e){return e.toString()});return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * `+n[0]+" + coords.y * "+n[1]+` + coords.z;
  }
`}var hr=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;function q7(r,n,e,t){var o=[];r.forEach(function(p){var d=$(p.shapeInfo.logicalShape);p.shapeInfo.isUniform?o.push("uniform float "+p.name+(d>1?"["+d+"]":"")+";"):(o.push("uniform sampler2D "+p.name+";"),o.push("uniform int offset"+p.name+";"))});var a,i,s=o.join(`
`),u=r.map(function(p){return function(d,m,v){v===void 0&&(v=!1);var g="";g+=v?fr(d):Me(d);var x=d.shapeInfo.logicalShape,b=m.logicalShape;return x.length<=b.length&&(g+=v?function(y,w){var C,S=y.name,k=S.charAt(0).toUpperCase()+S.slice(1),I="get"+k+"AtOutCoords",R=y.shapeInfo.logicalShape.length,T=w.logicalShape.length,D=ee(y.shapeInfo.logicalShape,w.logicalShape),L=b0(T),O=T-R,B=["x","y","z","w","u","v"];C=R===0?"":T<2&&D.length>=1?"coords = 0;":D.map(function(e0){return"coords."+B[e0+O]+" = 0;"}).join(`
`);var U="";U=T<2&&R>0?"coords":y.shapeInfo.logicalShape.map(function(e0,t0){return"coords."+B[t0+O]}).join(", ");var V="return outputValue;",W=$(y.shapeInfo.logicalShape)===1,z=$(w.logicalShape)===1;if(R!==1||W||z){if(W&&!z)V=T===1?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(D.length){var H=R-2,q=R-1;D.indexOf(H)>-1&&D.indexOf(q)>-1?V="return vec4(outputValue.x);":D.indexOf(H)>-1?V="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":D.indexOf(q)>-1&&(V="return vec4(outputValue.xx, outputValue.zz);")}}else V=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 `+I+`() {
      `+L+` coords = getOutputCoords();
      `+C+`
      vec4 outputValue = get`+k+"("+U+`);
      `+V+`
    }
  `}(d,m):function(y,w){var C=y.name,S=C.charAt(0).toUpperCase()+C.slice(1),k="get"+S+"AtOutCoords",I=w.texShape,R=y.shapeInfo.texShape,T=y.shapeInfo.logicalShape.length,D=w.logicalShape.length;if(!y.shapeInfo.isUniform&&T===D&&y.shapeInfo.flatOffset==null&&W0(R,I))return`
      float `+k+`() {
        return sampleTexture(`+C+`, resultUV);
      }
    `;var L,O=b0(D),B=ee(y.shapeInfo.logicalShape,w.logicalShape),U=D-T,V=["x","y","z","w","u","v"];L=T===0?"":D<2&&B.length>=1?"coords = 0;":B.map(function(z){return"coords."+V[z+U]+" = 0;"}).join(`
`);var W="";return W=D<2&&T>0?"coords":y.shapeInfo.logicalShape.map(function(z,H){return"coords."+V[H+U]}).join(", "),`
    float `+k+`() {
      `+O+` coords = getOutputCoords();
      `+L+`
      return get`+S+"("+W+`);
    }
  `}(d,m)),g}(p,n,t)}).join(`
`),c=n.texShape,l=X0(),h=function(p){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return `+p.texture2D+`(textureSampler, uv).r;
    }
  `}(l),f=function(p){return p.version+`
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    `+p.varyingFs+` vec2 resultUV;
    `+p.defineOutput+`
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    `+p.defineSpecialNaN+`
    `+p.defineSpecialInf+`
    `+p.defineRound+`

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    `+K7+`
    `+X7+`
    `+Y7+`
  `}(l);return n.isPacked?(a=function(p,d){switch(p.length){case 0:return`
    int getOutputCoords() {
      return 0;
    }
  `;case 1:return function(y,w){var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)];return C[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * `+C[1]+`.0);
      }
    `:C[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * `+C[0]+`.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));
      return 2 * (resTexRC.x * `+C[1]+` + resTexRC.y);
    }
  `}(0,d);case 2:return function(y,w){var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)];if(W0(y,w))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(`+C[0]+", "+C[1]+`));
      }
    `;var S=Math.ceil(y[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));

      int index = resTexRC.x * `+C[1]+` + resTexRC.y;
      int r = 2 * (index / `+S+`);
      int c = imod(index, `+S+`) * 2;

      return ivec2(r, c);
    }
  `}(p,d);case 3:return m=p,v=d,g=[Math.ceil(v[0]/2),Math.ceil(v[1]/2)],x=Math.ceil(m[2]/2),b=x*Math.ceil(m[1]/2),`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+g[0]+", "+g[1]+`));
      int index = resTexRC.x * `+g[1]+` + resTexRC.y;

      int b = index / `+b+`;
      index -= b * `+b+`;

      int r = 2 * (index / `+x+`);
      int c = imod(index, `+x+`) * 2;

      return ivec3(b, r, c);
    }
  `;default:return function(y,w){for(var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)],S=Math.ceil(y[y.length-1]/2),k=S*Math.ceil(y[y.length-2]/2),I=k,R="",T="b, r, c",D=2;D<y.length-1;D++)I*=y[y.length-D-1],R=`
      int b`+D+" = index / "+I+`;
      index -= b`+D+" * "+I+`;
    `+R,T="b"+D+", "+T;return`
    ivec`+y.length+` getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));
      int index = resTexRC.x * `+C[1]+` + resTexRC.y;

      `+R+`

      int b = index / `+k+`;
      index -= b * `+k+`;

      int r = 2 * (index / `+S+`);
      int c = imod(index, `+S+`) * 2;

      return ivec`+y.length+"("+T+`);
    }
  `}(p,d)}var m,v,g,x,b}(n.logicalShape,c),i=function(p){return`
    void setOutput(vec4 val) {
      `+p.output+` = val;
    }
  `}(l)):(a=function(p,d){switch(p.length){case 0:return`
    int getOutputCoords() {
      return 0;
    }
  `;case 1:return function(g,x){return x[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * `+x[1]+`.0);
      }
    `:x[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * `+x[0]+`.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+x[0]+", "+x[1]+`));
      return resTexRC.x * `+x[1]+` + resTexRC.y;
    }
  `}(0,d);case 2:return function(g,x){return W0(g,x)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(`+x[0]+", "+x[1]+`));
      }
    `:g[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(`+x[0]+", "+x[1]+`));
        int index = resTexRC.x * `+x[1]+` + resTexRC.y;
        return ivec2(index, 0);
      }
    `:g[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(`+x[0]+", "+x[1]+`));
        int index = resTexRC.x * `+x[1]+` + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+x[0]+", "+x[1]+`));
      int index = resTexRC.x * `+x[1]+` + resTexRC.y;
      int r = index / `+g[1]+`;
      int c = index - r * `+g[1]+`;
      return ivec2(r, c);
    }
  `}(p,d);case 3:return m=d,v=de(["r","c","d"],p),`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+m[0]+", "+m[1]+`));
      int index = resTexRC.x * `+m[1]+` + resTexRC.y;
      `+v+`
      return ivec3(r, c, d);
    }
  `;case 4:return function(g,x){var b=de(["r","c","d","d2"],g);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(`+x[0]+", "+x[1]+`));
      int index = resTexRC.x * `+x[1]+` + resTexRC.y;
      `+b+`
      return ivec4(r, c, d, d2);
    }
  `}(p,d);case 5:return function(g,x){var b=de(["r","c","d","d2","d3"],g);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(`+x[0]+`,
                             `+x[1]+`));

      int index = resTexRC.x * `+x[1]+` + resTexRC.y;

      `+b+`

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(p,d);case 6:return function(g,x){var b=de(["r","c","d","d2","d3","d4"],g);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(`+x[0]+", "+x[1]+`));
      int index = resTexRC.x * `+x[1]+` + resTexRC.y;

      `+b+`

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(p,d);default:throw new Error(p.length+"-D output sampling is not yet supported")}var m,v}(n.logicalShape,c),i=function(p){return`
    void setOutput(float val) {
      `+p.output+` = vec4(val, 0, 0, 0);
    }
  `}(l)),t&&(f+=$7),[f,h,i,s,a,u,e].join(`
`)}function Me(r){var n=r.shapeInfo.logicalShape;switch(n.length){case 0:return function(e){var t=e.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"float "+o+"() {return "+t+";}";var a=e.shapeInfo.texShape,i=a[0],s=a[1];if(i===1&&s===1)return`
      float `+o+`() {
        return sampleTexture(`+t+`, halfCR);
      }
    `;var u=e.shapeInfo.texShape,c=u[0],l=u[1],h=le(t);return`
    float `+o+`() {
      vec2 uv = uvFromFlat(`+c+", "+l+", "+h+`);
      return sampleTexture(`+t+`, uv);
    }
  `}(r);case 1:return function(e){var t=e.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`
      float `+o+`(int index) {
        `+ke(e)+`
      }
    `;var a=e.shapeInfo.texShape,i=a[0],s=a[1];if(s===1&&i===1)return`
      float `+o+`(int index) {
        return sampleTexture(`+t+`, halfCR);
      }
    `;var u=le(t);return s===1?`
      float `+o+`(int index) {
        vec2 uv = vec2(0.5, (float(index + `+u+") + 0.5) / "+i+`.0);
        return sampleTexture(`+t+`, uv);
      }
    `:i===1?`
      float `+o+`(int index) {
        vec2 uv = vec2((float(index + `+u+") + 0.5) / "+s+`.0, 0.5);
        return sampleTexture(`+t+`, uv);
      }
    `:`
    float `+o+`(int index) {
      vec2 uv = uvFromFlat(`+i+", "+s+", index + "+u+`);
      return sampleTexture(`+t+`, uv);
    }
  `}(r);case 2:return function(e){var t=e.shapeInfo.logicalShape,o=e.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),i=e.shapeInfo.texShape;if(i!=null&&W0(t,i)){var s=i[0],u=i[1];return`
    float `+a+`(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(`+u+".0, "+s+`.0);
      return sampleTexture(`+o+`, uv);
    }
  `}var c=pe(t),l=c.newShape,h=c.keptDims,f=l;if(f.length<t.length){var p=Te(e,f);return`
      `+Me(p)+`
      float `+a+`(int row, int col) {
        return `+a+"("+Ne(["row","col"],h)+`);
      }
    `}if(e.shapeInfo.isUniform)return`
      float `+a+`(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(`+t[1]+`, 1)));
        `+ke(e)+`
      }
    `;var d=i[0],m=i[1],v=le(o);return m===1?`
    float `+a+`(int row, int col) {
      float index = dot(vec3(row, col, `+v+"), vec3("+t[1]+`, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / `+d+`.0);
      return sampleTexture(`+o+`, uv);
    }
  `:d===1?`
    float `+a+`(int row, int col) {
      float index = dot(vec3(row, col, `+v+"), vec3("+t[1]+`, 1, 1));
      vec2 uv = vec2((index + 0.5) / `+m+`.0, 0.5);
      return sampleTexture(`+o+`, uv);
    }
  `:`
  float `+a+`(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * `+t[1]+" + col + "+v+`;
    vec2 uv = uvFromFlat(`+d+", "+m+`, index);
    return sampleTexture(`+o+`, uv);
  }
`}(r);case 3:return function(e){var t=e.shapeInfo.logicalShape,o=e.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),i=t[1]*t[2],s=t[2],u=pe(t),c=u.newShape,l=u.keptDims,h=c;if(h.length<t.length){var f=Te(e,h);return`
        `+Me(f)+`
        float `+a+`(int row, int col, int depth) {
          return `+a+"("+Ne(["row","col","depth"],l)+`);
        }
      `}if(e.shapeInfo.isUniform)return`
      float `+a+`(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(`+i+", "+s+`, 1)));
        `+ke(e)+`
      }
    `;var p=e.shapeInfo.texShape,d=p[0],m=p[1],v=e.shapeInfo.flatOffset;if(m===i&&v==null)return`
        float `+a+`(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(`+s+`, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(`+m+".0, "+d+`.0);
          return sampleTexture(`+o+`, uv);
        }
      `;if(m===s&&v==null)return`
    float `+a+`(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(`+t[1]+`, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+m+".0, "+d+`.0);
      return sampleTexture(`+o+`, uv);
    }
  `;var g=le(o);return`
      float `+a+`(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * `+i+" + col * "+s+" + depth + "+g+`;
        vec2 uv = uvFromFlat(`+d+", "+m+`, index);
        return sampleTexture(`+o+`, uv);
      }
  `}(r);case 4:return function(e){var t=e.shapeInfo.logicalShape,o=e.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),i=t[3],s=t[2]*i,u=t[1]*s,c=pe(t),l=c.newShape,h=c.keptDims;if(l.length<t.length){var f=Te(e,l);return`
      `+Me(f)+`
      float `+a+`(int row, int col, int depth, int depth2) {
        return `+a+"("+Ne(["row","col","depth","depth2"],h)+`);
      }
    `}if(e.shapeInfo.isUniform)return`
      float `+a+`(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(`+u+", "+s+", "+i+`, 1)));
        `+ke(e)+`
      }
    `;var p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,m=d[0],v=d[1];if(v===u&&p==null)return`
      float `+a+`(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(`+s+", "+i+`, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+v+".0, "+m+`.0);
        return sampleTexture(`+o+`, uv);
      }
    `;if(v===i&&p==null)return`
      float `+a+`(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(`+t[1]*t[2]+", "+t[2]+`, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+v+".0, "+m+`.0);
        return sampleTexture(`+o+`, uv);
      }
    `;var g=le(o);return`
    float `+a+`(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+u+" + col * "+s+` +
          depth * `+i+` + depth2;
      vec2 uv = uvFromFlat(`+m+", "+v+", index + "+g+`);
      return sampleTexture(`+o+`, uv);
    }
  `}(r);case 5:return function(e){var t=e.shapeInfo.logicalShape,o=e.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),i=t[4],s=t[3]*i,u=t[2]*s,c=t[1]*u,l=pe(t),h=l.newShape,f=l.keptDims;if(h.length<t.length){var p=Te(e,h);return`
      `+Me(p)+`
      float `+a+`(int row, int col, int depth, int depth2, int depth3) {
        return `+a+"("+Ne(["row","col","depth","depth2","depth3"],f)+`);
      }
    `}if(e.shapeInfo.isUniform)return`
      float `+a+`(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(`+c+", "+u+", "+s+", "+i+`)) +
          depth3;
        `+ke(e)+`
      }
    `;var d=e.shapeInfo.flatOffset,m=e.shapeInfo.texShape,v=m[0],g=m[1];if(g===c&&d==null)return`
      float `+a+`(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(`+u+", "+s+", "+i+`, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+g+".0, "+v+`.0);
        return sampleTexture(`+o+`, uv);
      }
    `;if(g===i&&d==null)return`
      float `+a+`(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(`+t[1]*t[2]*t[3]+`,
               `+t[2]*t[3]+", "+t[3]+`, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+g+".0, "+v+`.0);
        return sampleTexture(`+o+`, uv);
      }
    `;var x=le(o);return`
    float `+a+`(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+c+" + col * "+u+" + depth * "+s+` +
          depth2 * `+i+" + depth3 + "+x+`;
      vec2 uv = uvFromFlat(`+v+", "+g+`, index);
      return sampleTexture(`+o+`, uv);
    }
  `}(r);case 6:return function(e){var t=e.shapeInfo.logicalShape,o=e.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),i=pe(t),s=i.newShape,u=i.keptDims;if(s.length<t.length){var c=Te(e,s);return`
      `+Me(c)+`
      float `+a+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return `+a+"("+Ne(["row","col","depth","depth2","depth3","depth4"],u)+`);
      }
    `}var l=t[5],h=t[4]*l,f=t[3]*h,p=t[2]*f,d=t[1]*p;if(e.shapeInfo.isUniform)return`
      float `+a+`(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(`+d+", "+p+", "+f+", "+h+`)) +
          dot(
            vec2(depth3, depth4),
            vec2(`+l+`, 1)));
        `+ke(e)+`
      }
    `;var m=e.shapeInfo.flatOffset,v=e.shapeInfo.texShape,g=v[0],x=v[1];if(x===d&&m==null)return`
      float `+a+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(`+p+", "+f+", "+h+", "+l+`)) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+x+".0, "+g+`.0);
        return sampleTexture(`+o+`, uv);
      }
    `;if(x===l&&m==null)return`
      float `+a+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(`+t[1]*t[2]*t[3]*t[4]+`,
               `+t[2]*t[3]*t[4]+`,
               `+t[3]*t[4]+`,
               `+t[4]+`)) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+x+".0, "+g+`.0);
        return sampleTexture(`+o+`, uv);
      }
    `;var b=le(o);return`
    float `+a+`(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+d+" + col * "+p+" + depth * "+f+` +
          depth2 * `+h+" + depth3 * "+l+" + depth4 + "+b+`;
      vec2 uv = uvFromFlat(`+g+", "+x+`, index);
      return sampleTexture(`+o+`, uv);
    }
  `}(r);default:throw new Error(n.length+"-D input sampling is not yet supported")}}function fr(r){var n,e,t;switch(r.shapeInfo.logicalShape.length){case 0:return n=r.name,e="get"+n.charAt(0).toUpperCase()+n.slice(1),t=X0(),`
    vec4 `+e+`() {
      return `+t.texture2D+"("+n+`, halfCR);
    }
  `;case 1:return function(o){var a=o.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),s=o.shapeInfo.texShape,u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=X0();return`
    vec4 `+i+`(int index) {
      vec2 uv = packedUVfrom1D(
        `+u[0]+", "+u[1]+`, index);
      return `+c.texture2D+"("+a+`, uv);
    }
  `}(r);case 2:return function(o){var a=o.shapeInfo.logicalShape,i=o.name,s="get"+i.charAt(0).toUpperCase()+i.slice(1),u=o.shapeInfo.texShape,c=u[0],l=u[1],h=X0();if(u!=null&&W0(a,u))return`
      vec4 `+s+`(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(`+l+".0, "+c+`.0);

        return `+h.texture2D+"("+i+`, uv);
      }
    `;var f=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)],p=Math.ceil(a[1]/2);return`
    vec4 `+s+`(int row, int col) {
      vec2 uv = packedUVfrom2D(`+p+", "+f[0]+", "+f[1]+`, row, col);
      return `+h.texture2D+"("+i+`, uv);
    }
  `}(r);case 3:return function(o){var a=o.shapeInfo.logicalShape,i=o.name,s="get"+i.charAt(0).toUpperCase()+i.slice(1),u=o.shapeInfo.texShape,c=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];if(a[0]===1){var l=a.slice(1),h=Te(o,l);return`
        `+fr(h)+`
        vec4 `+s+`(int b, int row, int col) {
          return `+s+"("+Ne(["b","row","col"],[1,2])+`);
        }
      `}var f=c[0],p=c[1],d=Math.ceil(a[2]/2),m=d*Math.ceil(a[1]/2),v=X0();return`
    vec4 `+s+`(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        `+f+", "+p+", "+m+", "+d+`, b, row, col);
      return `+v.texture2D+"("+i+`, uv);
    }
  `}(r);default:return function(o){for(var a=o.shapeInfo.logicalShape,i=a.length,s=o.name,u="get"+s.charAt(0).toUpperCase()+s.slice(1),c=o.shapeInfo.texShape,l=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],h=l[0],f=l[1],p=Math.ceil(a[i-1]/2),d=p*Math.ceil(a[i-2]/2),m="int b, int row, int col",v="b * "+d+" + (row / 2) * "+p+" + (col / 2)",g=2;g<i-1;g++)m="int b"+g+", "+m,d*=a[i-g-1],v="b"+g+" * "+d+" + "+v;var x=X0();return`
    vec4 `+u+"("+m+`) {
      int index = `+v+`;
      int texR = index / `+f+`;
      int texC = index - texR * `+f+`;
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+f+", "+h+`);
      return `+x.texture2D+"("+s+`, uv);
    }
  `}(r)}}var K7=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,X7=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Y7=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$7=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function le(r){return"offset"+r}function ke(r){var n=r.name,e=$(r.shapeInfo.logicalShape);return e<2?"return "+n+";":`
    for (int i = 0; i < `+e+`; i++) {
      if (i == index) {
        return `+n+`[i];
      }
    }
  `}function b0(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error("GPU for rank "+r+" is not yet supported")}function Te(r,n){var e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=n,e}function Ne(r,n){return n.map(function(e){return r[e]}).join(", ")}var J7=function(r,n,e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E(r.length>2,function(){return"Packed arg"+(e.charAt(0).toUpperCase()+e.slice(1))+" supports only inputs with rank above 2."});var o=r[r.length-1],a=Math.ceil(o/n);this.outputShape=r.slice(0,-1),a>1&&this.outputShape.push(a),t||this.variableNames.push("bestIndicesA");var i,s,u=this.outputShape,c=u.length,l=b0(c),h=Z0("coords",c);if(a===1){var f=b0(s=c+1);i=`
        `+f+" sourceLocR = "+f+"("+h.join()+`, 0);
        ++`+h[c-1]+`;
        `+f+" sourceLocG = "+f+"("+h.join()+`, 0);
        ++`+h[c-2]+`;
        `+f+" sourceLocA = "+f+"("+h.join()+`, 0);
        --`+h[c-1]+`;
        `+f+" sourceLocB = "+f+"("+h.join()+`, 0);
        --`+h[c-2]+";"}else s=c,i=`
        `+l+` sourceLocR = coords;
        ++`+h[c-1]+`;
        `+l+` sourceLocG = coords;
        ++`+h[c-2]+`;
        `+l+` sourceLocA = coords;
        --`+h[c-1]+`;
        `+l+` sourceLocB = coords;
        --`+h[c-2]+";";var p=["x","y","z","w","u","v"].slice(0,s),d="."+p[s-1],m=p.map(function(k){return"int "+k}),v=Z0("sourceLocR",s-1).concat("inIdx.r"),g=Z0("sourceLocG",s-1).concat("inIdx.g"),x=Z0("sourceLocB",s-1).concat("inIdx.b"),b=Z0("sourceLocA",s-1).concat("inIdx.a"),y=e==="max"?"greaterThan":"lessThan",w=t?"":`
          inIdx = round(vec4(getBestIndicesAChannel(`+v.join()+`),
                             getBestIndicesAChannel(`+g.join()+`),
                             getBestIndicesAChannel(`+x.join()+`),
                             getBestIndicesAChannel(`+b.join()+")));",C=`vec4(
            getAChannel(`+v.join()+`),
            hasNextCol ? getAChannel(`+g.join()+`) : 0.,
            hasNextRow ? getAChannel(`+x.join()+`) : 0.,
            hasNextRow && hasNextCol ? getAChannel(`+b.join()+") : 0.)",S=t?"":`
      float getBestIndicesAChannel(`+m.join()+`) {
        return getChannel(getBestIndicesA(`+p.join()+`),
                                          vec2(`+p.slice(-2).join()+`));
      }`;this.userCode=`
      float getAChannel(`+m.join()+`) {
        return getChannel(getA(`+p.join()+`),
                               vec2(`+p.slice(-2).join()+`));
      }
      `+S+`
      void main() {
        `+l+` coords = getOutputCoords();
        bool hasNextCol = `+h[c-1]+" < "+(u[c-1]-1)+`;
        bool hasNextRow = `+h[c-2]+" < "+(u[c-2]-1)+`;
        `+i+`
        ivec4 srcIdx = ivec4(sourceLocR`+d+", sourceLocG"+d+`,
          sourceLocB`+d+", sourceLocA"+d+") * "+n+`;
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = `+C+`;

        for (int i = 0; i < `+n+`; i++) {
          inIdx = srcIdx;
          `+w+`
          vec4 candidate = `+C+`;
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(`+y+`(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `},Q7=function(r){this.variableNames=["dy"],this.outputShape=r.inShape;var n=r.filterHeight,e=r.filterWidth,t=r.strideHeight,o=r.strideWidth,a=r.dilationHeight,i=r.dilationWidth,s=r.effectiveFilterHeight,u=r.effectiveFilterWidth,c=s-1-r.padInfo.top,l=u-1-r.padInfo.left,h=1/(n*e);this.userCode=`
      const ivec2 pads = ivec2(`+c+", "+l+`);
      const float avgMultiplier = float(`+h+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+s+`;
            wR += `+a+`) {
          float dyR = float(dyRCorner + wR) / `+t+`.0;

          if (dyR < 0.0 || dyR >= `+r.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < `+u+`;
            wC+= `+i+`) {
            float dyC = float(dyCCorner + wC) / `+o+`.0;

            if (dyC < 0.0 || dyC >= `+r.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `},Z7=function(r){this.variableNames=["dy"],this.outputShape=r.inShape;var n=r.filterDepth,e=r.filterHeight,t=r.filterWidth,o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,s=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,p=l-1-r.padInfo.front,d=h-1-r.padInfo.top,m=f-1-r.padInfo.left,v=1/(n*e*t);this.userCode=`
      const ivec3 pads = ivec3(`+p+", "+d+", "+m+`);
      const float avgMultiplier = float(`+v+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < `+l+`;
            wD += `+s+`) {
          float dyD = float(dyDCorner + wD) / `+o+`.0;

          if (dyD < 0.0 || dyD >= `+r.outDepth+`.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < `+h+`;
              wR += `+u+`) {
            float dyR = float(dyRCorner + wR) / `+a+`.0;

            if (dyR < 0.0 || dyR >= `+r.outHeight+`.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < `+f+`;
                wC += `+c+`) {
              float dyC = float(dyCCorner + wC) / `+i+`.0;

              if (dyC < 0.0 || dyC >= `+r.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `},e8=function(r,n,e,t,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],l0(r,n),l0(r,e);var i="0.0";t!=null&&(l0(r,t),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");var s="1.0";o!=null&&(l0(r,o),this.variableNames.push("scale"),s="getScaleAtOutCoords()"),this.outputShape=r,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = `+i+`;
        float scale = `+s+`;
        float inv = scale * inversesqrt(variance + float(`+a+`));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `},t8=function(r,n,e,t,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],l0(r,n),l0(r,e);var i="vec4(0.0)";t!=null&&(l0(r,t),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");var s="vec4(1.0)";o!=null&&(l0(r,o),this.variableNames.push("scale"),s="getScaleAtOutCoords()"),this.outputShape=r,this.userCode=`
      void main() {
        vec4 offset = `+i+`;
        vec4 scale = `+s+`;

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(`+a+`));

        setOutput((x - mean) * inv + offset);
      }
    `},n8="return areal * breal - aimag * bimag;",r8="return areal * bimag + aimag * breal;",U3=function(r,n,e){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=l0(n,e),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        `+r+`
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `},Bn="return a + b;",Ln="return a - b;",G3="return a * b;",pr="return (a < 0.) ? b * a : a;",S0=function(r,n,e){this.variableNames=["A","B"],this.outputShape=l0(n,e),this.userCode=`
      float binaryOperation(float a, float b) {
        `+r+`
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `},dr=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,G1=function(r,n,e,t){t===void 0&&(t=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=l0(n,e);var o=this.outputShape.length,a="";if(t)if(o===0||$(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          `+b0(o)+` coords = getOutputCoords();
        `,o===1)a+=`
            result.y = (coords + 1) >= `+this.outputShape[0]+` ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{var i=Z0("coords",o);a+=`
            bool nextRowOutOfBounds =
              (`+i[o-2]+" + 1) >= "+this.outputShape[o-2]+`;
            bool nextColOutOfBounds =
              (`+i[o-1]+" + 1) >= "+this.outputShape[o-1]+`;
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        `+r+`
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        `+a+`

        setOutput(result);
      }
    `},o8=function(){function r(n){this.variableNames=["A"],this.outputShape=n,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}return r.prototype.getCustomSetupFunc=function(n,e){var t=this;return function(o,a){t.minLoc==null&&(t.minLoc=o.getUniformLocationNoThrow(a,"minVal"),t.maxLoc=o.getUniformLocationNoThrow(a,"maxVal")),o.gl.uniform1f(t.minLoc,n),o.gl.uniform1f(t.maxLoc,e)}},r}(),a8=function(){function r(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}return r.prototype.getCustomSetupFunc=function(n,e){var t=this;return function(o,a){t.minLoc==null&&(t.minLoc=o.getUniformLocationNoThrow(a,"minVal"),t.maxLoc=o.getUniformLocationNoThrow(a,"maxVal")),o.gl.uniform1f(t.minLoc,n),o.gl.uniform1f(t.maxLoc,e)}},r}(),i8=function(r){this.variableNames=["real","imag"],this.outputShape=r,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `},s8=function(r){this.outputShape=[],this.outputShape=He(r,1),this.variableNames=r.map(function(s,u){return"T"+u});var n=new Array(r.length-1);n[0]=r[0][1];for(var e=1;e<n.length;e++)n[e]=n[e-1]+r[e][1];var t=["if (yC < "+n[0]+") setOutput(getT0(yR, yC));"];for(e=1;e<n.length;e++){var o=n[e-1];t.push("else if (yC < "+n[e]+") setOutput(getT"+e+"(yR, yC-"+o+"));")}var a=n.length,i=n[n.length-1];t.push("else setOutput(getT"+a+"(yR, yC-"+i+"));"),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        `+t.join(`
        `)+`
      }
    `},u8=function(r,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=He(r,n);var e=this.outputShape,t=e.length,o=b0(t),a=Z0("coords",t),i=["x","y","z","w","u","v"].slice(0,t);this.variableNames=r.map(function(v,g){return"T"+g});var s=new Array(r.length-1);s[0]=r[0][n];for(var u=1;u<s.length;u++)s[u]=s[u-1]+r[u][n];var c=i[n],l=i.slice(-2),h=i.join(),f="if ("+c+" < "+s[0]+`) {
        return getChannel(
            getT0(`+h+"), vec2("+l.join()+`));
        }`;for(u=1;u<s.length;u++){var p=s[u-1];f+=`
        if (`+c+" < "+s[u]+"  && "+c+" >= "+s[u-1]+`) {
          return getChannel(
            getT`+u+"("+It(i,c,p)+`),
            vec2(`+It(l,c,p)+`));
        }`}var d=s.length,m=s[s.length-1];f+=`
        return getChannel(
          getT`+d+"("+It(i,c,m)+`),
          vec2(`+It(l,c,m)+"));",this.userCode=`
      float getValue(`+i.map(function(v){return"int "+v})+`) {
        `+f+`
      }

      void main() {
        `+o+` coords = getOutputCoords();
        vec4 result = vec4(getValue(`+a+`), 0., 0., 0.);

        `+a[t-1]+" = "+a[t-1]+` + 1;
        if (`+a[t-1]+" < "+e[t-1]+`) {
          result.g = getValue(`+a+`);
        }

        `+a[t-2]+" = "+a[t-2]+` + 1;
        if (`+a[t-2]+" < "+e[t-2]+`) {
          result.a = getValue(`+a+`);
        }

        `+a[t-1]+" = "+a[t-1]+` - 1;
        if (`+a[t-2]+" < "+e[t-2]+` &&
            `+a[t-1]+" < "+e[t-1]+`) {
          result.b = getValue(`+a+`);
        }
        setOutput(result);
      }
    `};function It(r,n,e){var t=r.indexOf(n);return r.map(function(o,a){return a===t?o+" - "+e:o}).join()}var c8=function(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape;var n=r.strideHeight,e=r.strideWidth,t=r.padInfo.top,o=r.padInfo.left,a=r.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < `+r.batchSize+`; b++) {
          for (int yR = 0; yR < `+r.outHeight+`; yR++) {
            int xR = wR + yR * `+n+" - "+t+`;

            if (xR < 0 || xR >= `+r.inHeight+`) {
              continue;
            }

            for (int yC = 0; yC < `+r.outWidth+`; yC++) {
              int xC = wC + yC * `+e+" - "+o+`;

              if (xC < 0 || xC >= `+r.inWidth+`) {
                continue;
              }

              if (`+a+`) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `},l8=function(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;var n=r.filterHeight,e=r.filterWidth,t=r.strideHeight,o=r.strideWidth,a=r.dataFormat==="channelsLast",i=n-1-r.padInfo.top,s=e-1-r.padInfo.left,u=a?1:2,c=a?2:3,l=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(`+i+", "+s+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[`+l+`];

        ivec2 dyCorner = ivec2(coords[`+u+"], coords["+c+`]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+n+`; wR++) {
          float dyR = float(dyRCorner + wR) / `+t+`.0;

          if (dyR < 0.0 || dyR >= `+r.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = `+n+` - 1 - wR;

          for (int wC = 0; wC < `+e+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+o+`.0;

            if (dyC < 0.0 || dyC >= `+r.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = `+e+` - 1 - wC;

            for (int d2 = 0; d2 < `+r.outChannels+`; d2++) {

              if (`+a+`) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `},h8=function(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape;var n=r.strideDepth,e=r.strideHeight,t=r.strideWidth,o=r.padInfo.front,a=r.padInfo.top,i=r.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < `+r.batchSize+`; b++) {
          for (int yF = 0; yF < `+r.outDepth+`; yF++) {
            int xF = wF + yF * `+n+" - "+o+`;

            if (xF < 0 || xF >= `+r.inDepth+`) {
              continue;
            }

            for (int yR = 0; yR < `+r.outHeight+`; yR++) {
              int xR = wR + yR * `+e+" - "+a+`;

              if (xR < 0 || xR >= `+r.inHeight+`) {
                continue;
              }

              for (int yC = 0; yC < `+r.outWidth+`; yC++) {
                int xC = wC + yC * `+t+" - "+i+`;

                if (xC < 0 || xC >= `+r.inWidth+`) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},f8=function(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;var n=r.filterDepth,e=r.filterHeight,t=r.filterWidth,o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,s=n-1-r.padInfo.front,u=e-1-r.padInfo.top,c=t-1-r.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(`+s+", "+u+", "+c+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < `+n+`; wF++) {
          float dyF = float(dyFCorner + wF) / `+o+`.0;

          if (dyF < 0.0 || dyF >= `+r.outDepth+`.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = `+n+` - 1 - wF;

          for (int wR = 0; wR < `+e+`; wR++) {
            float dyR = float(dyRCorner + wR) / `+a+`.0;

            if (dyR < 0.0 || dyR >= `+r.outHeight+`.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = `+e+` - 1 - wR;

            for (int wC = 0; wC < `+t+`; wC++) {
              float dyC = float(dyCCorner + wC) / `+i+`.0;

              if (dyC < 0.0 || dyC >= `+r.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = `+t+` - 1 - wC;

              for (int d2 = 0; d2 < `+r.outChannels+`; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},p8=function(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape;var n=r.strideHeight,e=r.strideWidth,t=r.padInfo.top,o=r.padInfo.left,a=r.outChannels/r.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * `+a+` + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < `+r.batchSize+`; b++) {
          for (int yR = 0; yR < `+r.outHeight+`; yR++) {
            int xR = wR + yR * `+n+" - "+t+`;

            if (xR < 0 || xR >= `+r.inHeight+`) {
              continue;
            }

            for (int yC = 0; yC < `+r.outWidth+`; yC++) {
              int xC = wC + yC * `+e+" - "+o+`;

              if (xC < 0 || xC >= `+r.inWidth+`) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `},d8=function(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;var n=r.filterHeight,e=r.filterWidth,t=r.strideHeight,o=r.strideWidth,a=n-1-r.padInfo.top,i=e-1-r.padInfo.left,s=r.outChannels/r.inChannels;this.userCode=`
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < `+n+`; wR++) {
          float dyR = float(dyRCorner + wR) / `+t+`.0;

          if (dyR < 0.0 || dyR >= `+r.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = `+n+` - 1 - wR;

          for (int wC = 0; wC < `+e+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+o+`.0;

            if (dyC < 0.0 || dyC >= `+r.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = `+e+` - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < `+s+`; dm++) {
              int d2 = d1 * `+s+` + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `},z3=function(r,n,e,t){n===void 0&&(n=!1),e===void 0&&(e=null),t===void 0&&(t=!1),this.variableNames=["x","W"],this.outputShape=r.outShape;var o=r.padInfo.top,a=r.padInfo.left,i=r.strideHeight,s=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.filterHeight,h=r.filterWidth,f=4*Math.floor(r.inChannels/4),p=r.inChannels%4,d=r.dataFormat==="channelsLast",m=d?1:2,v=d?2:3,g=d?3:1,x="",b="";e&&(x=t?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          `+e+`
        }`:`
          float activation(float x) {
            `+e+`
          }
        `,b="result = activation(result);");var y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),t&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+x+`

      const ivec2 strides = ivec2(`+i+", "+s+`);
      const ivec2 pads = ivec2(`+o+", "+a+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[`+g+`];

        ivec2 xRCCorner =
            ivec2(coords[`+m+"], coords["+v+`]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+l+`; wR++) {
          int xR = xRCorner + wR * `+u+`;

          if (xR < 0 || xR >= `+r.inHeight+`) {
            continue;
          }

          for (int wC = 0; wC < `+h+`; wC++) {
            int xC = xCCorner + wC * `+c+`;

            if (xC < 0 || xC >= `+r.inWidth+`) {
              continue;
            }

            for (int d1 = 0; d1 < `+f+`; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (`+d+`) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (`+(p===1)+`) {

              if (`+d+`) {
                dotProd +=
                    getX(batch, xR, xC, `+f+`) *
                    getW(wR, wC, `+f+`, d2);
              } else {
                dotProd +=
                    getX(batch, `+f+`, xR, xC) *
                    getW(wR, wC, `+f+`, d2);
              }

            } else if (`+(p===2)+`) {
              vec2 wValues = vec2(
                getW(wR, wC, `+f+`, d2),
                getW(wR, wC, `+f+` + 1, d2)
              );

              if (`+d+`) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, `+f+`),
                  getX(batch, xR, xC, `+f+` + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, `+f+`, xR, xC),
                  getX(batch, `+f+` + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (`+(p===3)+`) {
              vec3 wValues = vec3(
                getW(wR, wC, `+f+`, d2),
                getW(wR, wC, `+f+` + 1, d2),
                getW(wR, wC, `+f+` + 2, d2)
              );

              if (`+d+`) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, `+f+`),
                  getX(batch, xR, xC, `+f+` + 1),
                  getX(batch, xR, xC, `+f+` + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, `+f+`, xR, xC),
                  getX(batch, `+f+` + 1, xR, xC),
                  getX(batch, `+f+` + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        `+y+`
        `+b+`
        setOutput(result);
      }
    `},v8=function(r){this.variableNames=["x","W"],this.outputShape=r.outShape;var n=r.padInfo.front,e=r.padInfo.top,t=r.padInfo.left,o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,s=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,l=r.filterDepth,h=r.filterHeight,f=r.filterWidth,p=4*Math.floor(r.inChannels/4),d=r.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(`+o+", "+a+", "+i+`);
      const ivec3 pads = ivec3(`+n+", "+e+", "+t+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < `+l+`; wF++) {
          int xF = xFCorner + wF * `+s+`;

          if (xF < 0 || xF >= `+r.inDepth+`) {
            continue;
          }

          for (int wR = 0; wR < `+h+`; wR++) {
            int xR = xRCorner + wR * `+u+`;

            if (xR < 0 || xR >= `+r.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+f+`; wC++) {
              int xC = xCCorner + wC * `+c+`;

              if (xC < 0 || xC >= `+r.inWidth+`) {
                continue;
              }

              for (int d1 = 0; d1 < `+p+`; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (`+(d===1)+`) {
                dotProd +=
                  getX(batch, xF, xR, xC, `+p+`) *
                  getW(wF, wR, wC, `+p+`, d2);
              } else if (`+(d===2)+`) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, `+p+`),
                  getX(batch, xF, xR, xC, `+p+` + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, `+p+`, d2),
                  getW(wF, wR, wC, `+p+` + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (`+(d===3)+`) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, `+p+`),
                  getX(batch, xF, xR, xC, `+p+` + 1),
                  getX(batch, xF, xR, xC, `+p+` + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, `+p+`, d2),
                  getW(wF, wR, wC, `+p+` + 1, d2),
                  getW(wF, wR, wC, `+p+` + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},H3=function(r,n,e,t){n===void 0&&(n=!1),e===void 0&&(e=null),t===void 0&&(t=!1),this.variableNames=["x","W"],this.outputShape=r.outShape;var o=r.inHeight,a=r.inWidth,i=r.padInfo.top,s=r.padInfo.left,u=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,h=r.dilationWidth,f=r.filterHeight,p=r.filterWidth,d=r.outChannels/r.inChannels,m="",v="";e&&(m=t?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          `+e+`
        }`:`
          float activation(float x) {
            `+e+`
          }
        `,v="result = activation(result);");var g=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),t&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+m+`

      const ivec2 strides = ivec2(`+u+", "+c+`);
      const ivec2 pads = ivec2(`+i+", "+s+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / `+d+`;
        int q = d2 - d1 * `+d+`;

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < `+f+`; wR++) {
          int xR = xRCorner + wR * `+l+`;

          if (xR < 0 || xR >= `+o+`) {
            continue;
          }

          for (int wC = 0; wC < `+p+`; wC++) {
            int xC = xCCorner + wC * `+h+`;

            if (xC < 0 || xC >= `+a+`) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        `+g+`
        `+v+`
        setOutput(result);
      }
    `},j3=function(r,n,e,t){n===void 0&&(n=!1),e===void 0&&(e=null),t===void 0&&(t=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.outShape;for(var o=r.inHeight,a=r.inWidth,i=r.padInfo.top,s=r.padInfo.left,u=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,h=r.dilationWidth,f=r.filterHeight,p=r.filterWidth,d=p,m="int xR; int xC; int xCOffset;",v=0;v<f;v++)for(var g=0;g<p;g++)m+=`
          vec4 xTexelR`+v+"C"+2*g+` = vec4(0.);
          vec4 wR`+v+"C"+g+` = vec4(0.);
          vec4 xR`+v+"C"+g+" = vec4(0.);";for(v=0;v<f;v++)for(var x=0;x<d;x++){if(m+=`
          xR = xRCorner + `+v*l+`;
          xC = xCCorner + `+(g=2*x)*h+`;
        `,c===1){if(g<p&&(m+=s%2==1?`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < `+o+" && xCOffset >= 0 && xCOffset < "+a+`) {
                  xTexelR`+v+"C"+g+` = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= `+a+`) {
                    xTexelR`+v+"C"+g+`.zw = vec2(0.);
                  }
                } else {
                  xTexelR`+v+"C"+g+` = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < `+o+" && xCOffset >= 0 && xCOffset < "+a+`) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= `+a+`) {
                    previous.zw = vec2(0.);
                  }

                  xR`+v+"C"+g+" = vec4(previous.zw, xTexelR"+v+"C"+g+`.xy);
                } else {
                  xR`+v+"C"+g+" = vec4(0, 0, xTexelR"+v+"C"+g+`.xy);
                }
              `:`
                if(xR >= 0 && xR < `+o+" && xC >= 0 && xC < "+a+`) {
                  xTexelR`+v+"C"+g+` = getX(batch, xR, xC, d1);
                } else {
                  xTexelR`+v+"C"+g+` = vec4(0.);
                }

                xR`+v+"C"+g+" = xTexelR"+v+"C"+g+`;
              `,g+1<p)){var b=s%2==0?T4(h):h;h%2==0&&s%2==1||h%2!=0&&s%2!=1?(m+=`
                  xCOffset = xC + `+s%2+" + "+b+`;

                  if(xR >= 0 && xR < `+o+` &&
                    xCOffset >= 0 && xCOffset < `+a+`) {
                    xTexelR`+v+"C"+(g+2)+` = getX(batch, xR, xCOffset, d1);
                  }
                `,h>1&&(m+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < `+o+` &&
                      xCOffset >= 0 && xCOffset < `+a+`) {
                      xTexelR`+v+"C"+g+` = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR`+v+"C"+g+` = vec4(0.);
                    }
                  `),m+=`
                  xR`+v+"C"+(g+1)+` = vec4(
                    xTexelR`+v+"C"+g+".zw, xTexelR"+v+"C"+(g+2)+`.xy);
                `):m+=`
                  xCOffset = xC + `+b+`;

                  if(xR >= 0 && xR < `+o+` &&
                    xCOffset >= 0 && xCOffset < `+a+`) {
                    xTexelR`+v+"C"+(g+2)+` = getX(batch, xR, xCOffset, d1);
                  }

                  xR`+v+"C"+(g+1)+" = xTexelR"+v+"C"+(g+2)+`;
                `}}else g<p&&(m+=`
              if(xR >= 0 && xR < `+o+`) {
            `,s%2==1?(m+=`
                xCOffset = xC + 1 - `+c+`;
                if(xCOffset >= 0 && xCOffset < `+a+`) {
                  xTexelR`+v+"C"+g+` = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR`+v+"C"+g+` = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < `+a+`) {
                  xTexelR`+v+"C"+(g+2)+` = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR`+v+"C"+(g+2)+` = vec4(0.);
                }

                xR`+v+"C"+g+` = vec4(
                  xTexelR`+v+"C"+g+".zw, xTexelR"+v+"C"+(g+2)+`.zw);
              `,g+1<p&&(m+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + `+c+`;
                  if(xCOffset >= 0 && xCOffset < `+a+`) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR`+v+"C"+(g+1)+" = vec4(xTexelR"+v+"C"+(g+2)+`.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < `+a+`) {
                  xTexelR`+v+"C"+g+` = getX(batch, xR, xC, d1);
                } else {
                  xTexelR`+v+"C"+g+` = vec4(0.);
                }

                xCOffset = xC + `+c+`;
                if(xCOffset >= 0 && xCOffset < `+a+`) {
                  xTexelR`+v+"C"+(g+2)+` = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR`+v+"C"+(g+2)+` = vec4(0.);
                }

                xR`+v+"C"+g+` = vec4(
                  xTexelR`+v+"C"+g+".xy, xTexelR"+v+"C"+(g+2)+`.xy);
              `,g+1<p&&(m+=`
                  xR`+v+"C"+(g+1)+` = vec4(
                    xTexelR`+v+"C"+g+".zw, xTexelR"+v+"C"+(g+2)+`.zw);
                `)),m+="}");g<p&&(m+=`
            vec4 wTexelR`+v+"C"+g+" = getW("+v+", "+g+`, d1, q);
            wR`+v+"C"+g+" = vec4(wTexelR"+v+"C"+g+".xz, wTexelR"+v+"C"+g+`.xz);
          `,g+1<p&&(m+=`
              vec4 wTexelR`+v+"C"+(g+1)+" = getW("+v+", "+(g+1)+`, d1, q);
              wR`+v+"C"+(g+1)+` =
                vec4(wTexelR`+v+"C"+(g+1)+".xz, wTexelR"+v+"C"+(g+1)+".xz);"))}for(v=0;v<f;v++)for(g=0;g<p;g++)m+="dotProd += xR"+v+"C"+g+" * wR"+v+"C"+g+";";var y="",w="";e&&(y=t?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          `+e+`
        }`:`vec4 activation(vec4 x) {
          `+e+`
        }`,w="result = activation(result);");var C=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),t&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+y+`

      const ivec2 strides = ivec2(`+u+", "+c+`);
      const ivec2 pads = ivec2(`+i+", "+s+`);

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        `+m+`

        vec4 result = dotProd;
        `+C+`
        `+w+`
        setOutput(result);
      }
    `},m8=function(r,n,e,t,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var a=r[0],i=r[1],s=r[2],u=r[3],c=n[0],l=e[0],h=e[1];this.outputShape=[c,l,h,u];var f=t==="bilinear"?1:0,p=[i-1+".0",s-1+".0"],d=p[0],m=p[1],v=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio","y1*"+d+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+d],g=v[0],x=v[1],b=v[2],y=h>1?[""+(s-1)/(h-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],w=y[0],C=y[1],S=y[2];this.userCode=`
      const float height_ratio = float(`+g+`);
      const float width_ratio = float(`+w+`);
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= `+a+`) {
          return;
        }

        float height_scale = `+x+`;
        float width_scale = `+C+`;

        float in_y = `+b+`;
        if( in_y < 0.0 || in_y > `+d+` ) {
          setOutput(float(`+o+`));
          return;
        }
        float in_x = `+S+`;
        if( in_x < 0.0 || in_x > `+m+` ) {
          setOutput(float(`+o+`));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(`+f+` == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `},g8=function(r,n,e){this.variableNames=["x"],this.outputShape=r;var t=r.length,o=r[r.length-1],a=e?"<":">";this.userCode=`
      int getIndex(int i) {
        `+(e?"return "+o+" -i - 1;":"return i;")+`
      }

      void main() {
        `+b0(t)+` coords = getOutputCoords();
        int end = `+q3(t,"coords")+`;
        float val = 0.0;
        for (int i = `+o+` - 1; i >= 0; i -= 1) {
          int idx = getIndex(i);
          if (idx `+a+` end) {
            continue;
          }
          if (idx == end && `+n+`) {
            continue;
          }
          `+q3(t,"coords")+` = idx;
          val += getX(`+function(i,s){if(i===1)return""+s;if(i===2)return s+".x, "+s+".y";if(i===3)return s+".x, "+s+".y, "+s+".z";if(i===4)return s+".x, "+s+".y, "+s+".z, "+s+".w";throw Error("Cumulative sum for rank "+i+" is not yet supported")}(t,"coords")+`);
        }
        setOutput(val);
      }
    `};function q3(r,n){if(r===1)return""+n;if(r===2)return n+".y";if(r===3)return n+".z";if(r===4)return n+".w";throw Error("Cumulative sum for rank "+r+" is not yet supported")}var y8=function(r){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ot.DENSE;var n=Ze(r),e=X0();this.outputShape=r,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        `+de(["r","c","d"],r)+`
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(`+n[0]+", "+n[1]+`));
        int index = 4 * (resTexRC.x * `+n[1]+` + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        `+e.output+` = result;
      }
    `},x8=function(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ot.DENSE;var n=Ze(r),e=X0();this.outputShape=r,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        `+de(["r","c","d"],r)+`
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(`+n[0]+", "+n[1]+`));
        int index = 4 * (resTexRC.x * `+n[1]+` + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        `+e.output+` = result;
      }
    `},b8=function(){function r(n,e,t){this.variableNames=["x"],this.outputShape=[],this.outputShape=n,this.blockSize=e,this.dataFormat=t,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = `+this.getHeightCoordString()+`;
      int w = `+this.getWidthCoordString()+`;
      int d = `+this.getDepthCoordString()+`;

      int in_h = h / `+e+`;
      int offset_h = imod(h, `+e+`);
      int in_w = w / `+e+`;
      int offset_w = imod(w, `+e+`);
      int offset_d = (offset_h * `+e+` + offset_w) *
        `+this.getOutputDepthSize()+`;
      int in_d = d + offset_d;

      float result = `+this.getInputSamplingString()+`;
      setOutput(result);
    }
  `}return r.prototype.getHeightCoordString=function(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"},r.prototype.getWidthCoordString=function(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"},r.prototype.getDepthCoordString=function(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"},r.prototype.getOutputDepthSize=function(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]},r.prototype.getInputSamplingString=function(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},r}(),w8=function(r){this.variableNames=["X"],this.outputShape=[r,r],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `},C8=function(r){this.variableNames=["A"],this.outTexUsage=i1.DOWNLOAD;var n=X0();this.outputShape=r,this.userCode=`
      `+hr+`

      void main() {
        float x = getAAtOutCoords();
        `+n.output+` = encode_float(x);
      }
    `},_8=function(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=i1.DOWNLOAD;var n=X0();this.outputShape=r,this.userCode=`
      `+hr+`

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        `+n.output+` = encode_float(x);
      }
    `},E8=function(r,n,e){e===void 0&&(e=!1),this.variableNames=["A"];var t=X0(),o=n[0],a=n[1];this.outputShape=r;var i="result";e&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      `+P2(r)+`

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);
        
        int r = flatIndex / `+a+`;
        int c = imod(flatIndex, `+a+`);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(`+a+".0, "+o+`.0);
        vec4 values = `+t.texture2D+`(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        `+t.output+" = vec4("+i+`, 0., 0., 0.);
      }
    `},I8=function(r,n,e){e===void 0&&(e=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var t=X0(),o=n[0],a=n[1];this.outputShape=r;var i="",s="result";e&&(s="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var c=0;c<=1;c++){var l=2*u+c;i+=`
          localCoords = coords;
          if(localCoords[2] + `+c+" < "+r[2]+`) {
            localCoords[2] += `+c+`;
            if(localCoords[1] + `+u+" < "+r[1]+`) {
              localCoords[1] += `+u+`;

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / `+a+`;
              c = imod(flatIndex, `+a+`);
              uv = (vec2(c, r) + halfCR) / vec2(`+a+".0, "+o+`.0);
              values = `+t.texture2D+`(A, uv);

              if(offset == 0) {
                result[`+l+`] = values[0];
              } else if(offset == 1) {
                result[`+l+`] = values[1];
              } else if(offset == 2) {
                result[`+l+`] = values[2];
              } else {
                result[`+l+`] = values[3];
              }
            }
          }
        `}this.userCode=`
      `+P2(r)+`

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        `+i+`

        `+t.output+" = "+s+`;
      }
    `},R8="return real * expR - imag * expI;",k8="return real * expI + imag * expR;",K3=function(r,n,e){this.variableNames=["real","imag"];var t=n[1];this.outputShape=n;var o=e?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=e?t+".0":"1.0";this.userCode=`
      const float exponentMultiplier = `+o+`;

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        `+r+`
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(`+t+`);
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < `+t+`; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / `+a+`;
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `},S8=function(){function r(n,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=n,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}return r.prototype.getCustomSetupFunc=function(n){var e=this;return function(t,o){e.valueLoc==null&&(e.valueLoc=t.getUniformLocationNoThrow(o,"value")),t.gl.uniform1f(e.valueLoc,n)}},r}(),A8=function(r,n,e){this.variableNames=["A","indices"];var t=r.slice();t[e]=n,this.outputShape=t,this.rank=t.length;var o=b0(this.rank),a=function(i,s){var u=i.length;if(u>4)throw Error("Gather for rank "+u+" is not yet supported");if(u===1)return"int(getIndices(resRC))";for(var c=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],h=0;h<i.length;h++)h===s?l.push("int(getIndices("+c[h]+"))"):l.push(""+c[h]);return l.join()}(r,e);this.userCode=`
      void main() {
        `+o+` resRC = getOutputCoords();
        setOutput(getA(`+a+`));
      }
    `},D8=function(r,n,e){this.sliceDim=r,this.strides=n,this.variableNames=["x","indices"],this.outputShape=e;var t=b0(n.length),o=b0(e.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        `+t+" strides = "+t+"("+this.strides+`);
         void main() {
          `+o+` coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < `+this.sliceDim+`; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * `+a+`;
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `};function M8(r,n){var e=X0();return R6(r,n,e.version+`
    precision highp float;
    `+e.attribute+` vec3 clipSpacePos;
    `+e.attribute+` vec2 uv;
    `+e.varyingVs+` vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function T8(r,n){return M6(r,n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function N8(r,n){return T6(r,n,new Uint16Array([0,1,2,2,1,3]))}function dt(r,n,e,t,o,a,i){F6(e,t);var s=N6(r,n),u=r.TEXTURE_2D;return J(r,n,function(){return r.bindTexture(u,s)}),J(r,n,function(){return r.texParameteri(u,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)}),J(r,n,function(){return r.texParameteri(u,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)}),J(r,n,function(){return r.texParameteri(u,r.TEXTURE_MIN_FILTER,r.NEAREST)}),J(r,n,function(){return r.texParameteri(u,r.TEXTURE_MAG_FILTER,r.NEAREST)}),J(r,n,function(){return r.texImage2D(u,0,o,e,t,0,a,i,null)}),J(r,n,function(){return r.bindTexture(r.TEXTURE_2D,null)}),s}function F8(r,n,e,t,o){var a=on(e,t);return dt(r,n,a[0],a[1],o.internalFormatFloat,o.textureFormatFloat,r.FLOAT)}function P8(r,n,e,t,o){var a=on(e,t);return dt(r,n,a[0],a[1],o.internalFormatHalfFloat,o.textureFormatFloat,o.textureTypeHalfFloat)}function O8(r,n,e,t,o){var a=on(e,t);return dt(r,n,a[0],a[1],r.RGBA,r.RGBA,r.UNSIGNED_BYTE)}function B8(r,n,e,t,o){var a=pt(e,t);return dt(r,n,a[0],a[1],o.internalFormatPackedFloat,r.RGBA,r.FLOAT)}function L8(r,n,e,t,o){var a=pt(e,t);return dt(r,n,a[0],a[1],o.internalFormatPackedHalfFloat,r.RGBA,o.textureTypeHalfFloat)}function W8(r,n,e,t){return J(r,n,function(){return r.bindBuffer(r.ARRAY_BUFFER,t)}),F3(r,n,e,"clipSpacePos",t,3,20,0)&&F3(r,n,e,"uv",t,2,20,12)}function V8(r,n,e,t,o,a,i){var s,u,c;J(r,n,function(){return r.bindTexture(r.TEXTURE_2D,e)}),a instanceof Uint8Array?(s=new Uint8Array(t*o*4),u=r.UNSIGNED_BYTE,c=r.RGBA):(s=new Float32Array(t*o*4),u=r.FLOAT,c=i.internalFormatPackedFloat),s.set(a),J(r,n,function(){return r.texImage2D(r.TEXTURE_2D,0,c,t,o,0,r.RGBA,u,s)}),J(r,n,function(){return r.bindTexture(r.TEXTURE_2D,null)})}function U8(r,n,e,t){J(r,n,function(){return r.bindTexture(r.TEXTURE_2D,e)}),t.data instanceof Uint8Array?J(r,n,function(){return r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)}):J(r,n,function(){return r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)}),J(r,n,function(){return r.bindTexture(r.TEXTURE_2D,null)})}function G8(r,n,e,t,o){var a=r.createBuffer();J(r,n,function(){return r.bindBuffer(r.PIXEL_PACK_BUFFER,a)});var i=16*e*t;return J(r,n,function(){return r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)}),J(r,n,function(){return r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)}),J(r,n,function(){return r.bindBuffer(r.PIXEL_PACK_BUFFER,null)}),a}function z8(r,n,e){var t=r,o=new Float32Array(e);return t.bindBuffer(t.PIXEL_PACK_BUFFER,n),t.getBufferSubData(t.PIXEL_PACK_BUFFER,0,o),t.bindBuffer(t.PIXEL_PACK_BUFFER,null),o}function H8(r,n,e,t,o){var a=on(e,t),i=a[0],s=a[1],u=new Uint8Array(e*t*4);return J(r,n,function(){return r.readPixels(0,0,i,s,o.downloadTextureFormat,r.UNSIGNED_BYTE,u)}),new Float32Array(u.buffer)}function j8(r,n,e,t,o,a,i,s){var u=r,c=new Float32Array(function(l,h){var f=pt(l,h);return f[0]*f[1]*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,n),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function q8(r,n,e,t){var o=new Float32Array(e*t*4);return J(r,n,function(){return r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,o)}),o}var K8=function(){function r(n){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var e=P().getNumber("WEBGL_VERSION");n!=null?(this.gl=n,w6(e,n)):this.gl=P1(e);var t="WEBGL_color_buffer_float";if(P().getNumber("WEBGL_VERSION")===1){if(this.textureFloatExtension=wt(this.gl,this.debug,"OES_texture_float"),p1(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=wt(this.gl,this.debug,"OES_texture_half_float");else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(t),p1(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=wt(this.gl,this.debug,"EXT_color_buffer_half_float");else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(t="EXT_color_buffer_float",p1(this.gl,t))this.colorBufferFloatExtension=this.gl.getExtension(t);else{if(!p1(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=T8(this.gl,this.debug),this.indexBuffer=N8(this.gl,this.debug),this.framebuffer=P6(this.gl,this.debug),this.textureConfig=I2(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(r.prototype,"debug",{get:function(){return P().getBool("DEBUG")},enumerable:!0,configurable:!0}),r.prototype.dispose=function(){var n=this;if(!this.disposed){this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var e=this.gl;J(e,this.debug,function(){return e.finish()}),J(e,this.debug,function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)}),J(e,this.debug,function(){return e.deleteFramebuffer(n.framebuffer)}),J(e,this.debug,function(){return e.bindBuffer(e.ARRAY_BUFFER,null)}),J(e,this.debug,function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)}),J(e,this.debug,function(){return e.deleteBuffer(n.indexBuffer)}),this.disposed=!0}},r.prototype.createFloat32MatrixTexture=function(n,e){return this.throwIfDisposed(),F8(this.gl,this.debug,n,e,this.textureConfig)},r.prototype.createFloat16MatrixTexture=function(n,e){return this.throwIfDisposed(),P8(this.gl,this.debug,n,e,this.textureConfig)},r.prototype.createUnsignedBytesMatrixTexture=function(n,e){return this.throwIfDisposed(),O8(this.gl,this.debug,n,e,this.textureConfig)},r.prototype.uploadPixelDataToTexture=function(n,e){this.throwIfDisposed(),U8(this.gl,this.debug,n,e)},r.prototype.uploadDenseMatrixToTexture=function(n,e,t,o){this.throwIfDisposed(),V8(this.gl,this.debug,n,e,t,o,this.textureConfig)},r.prototype.createFloat16PackedMatrixTexture=function(n,e){return this.throwIfDisposed(),L8(this.gl,this.debug,n,e,this.textureConfig)},r.prototype.createPackedMatrixTexture=function(n,e){return this.throwIfDisposed(),B8(this.gl,this.debug,n,e,this.textureConfig)},r.prototype.deleteMatrixTexture=function(n){var e=this;this.throwIfDisposed(),this.outputTexture===n&&(P3(this.gl,this.debug,this.framebuffer),this.outputTexture=null),J(this.gl,this.debug,function(){return e.gl.deleteTexture(n)})},r.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(n,e,t){var o=this;return this.downloadMatrixDriver(n,function(){return H8(o.gl,o.debug,e,t,o.textureConfig)})},r.prototype.downloadPackedMatrixFromBuffer=function(n,e,t,o,a,i){return j8(this.gl,n,0,0,0,a,i,this.textureConfig)},r.prototype.downloadFloat32MatrixFromBuffer=function(n,e){return z8(this.gl,n,e)},r.prototype.createBufferFromTexture=function(n,e,t){this.bindTextureToFrameBuffer(n);var o=G8(this.gl,this.debug,e,t,this.textureConfig);return this.unbindTextureToFrameBuffer(),o},r.prototype.createAndWaitForFence=function(){var n=this.createFence(this.gl);return this.pollFence(n)},r.prototype.createFence=function(n){var e,t,o=this;if(P().getBool("WEBGL_FENCE_API_ENABLED")){var a=n,i=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);n.flush(),t=function(){var s=a.clientWaitSync(i,0,0);return s===a.ALREADY_SIGNALED||s===a.CONDITION_SATISFIED},e=i}else P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),t=function(){return o.isQueryAvailable(e,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):t=function(){return!0};return{query:e,isFencePassed:t}},r.prototype.downloadMatrixFromPackedTexture=function(n,e,t){var o=this;return this.downloadMatrixDriver(n,function(){return q8(o.gl,o.debug,e,t)})},r.prototype.createProgram=function(n){this.throwIfDisposed();var e=this.gl,t=k6(e,this.debug,n),o=M8(e,this.debug),a=A6(e,this.debug);return J(e,this.debug,function(){return e.attachShader(a,o)}),J(e,this.debug,function(){return e.attachShader(a,t)}),D6(e,this.debug,a),this.debug&&Nn(e,this.debug,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=W8(e,this.debug,this.program,this.vertexBuffer)),a},r.prototype.deleteProgram=function(n){var e=this;this.throwIfDisposed(),n===this.program&&(this.program=null),n!=null&&J(this.gl,this.debug,function(){return e.gl.deleteProgram(n)})},r.prototype.setProgram=function(n){var e=this;this.throwIfDisposed(),this.program=n,this.program!=null&&this.debug&&Nn(this.gl,this.debug,this.program),J(this.gl,this.debug,function(){return e.gl.useProgram(n)})},r.prototype.getUniformLocation=function(n,e,t){return t===void 0&&(t=!0),this.throwIfDisposed(),t?B6(this.gl,this.debug,n,e):L6(this.gl,n,e)},r.prototype.getAttributeLocation=function(n,e){var t=this;return this.throwIfDisposed(),J(this.gl,this.debug,function(){return t.gl.getAttribLocation(n,e)})},r.prototype.getUniformLocationNoThrow=function(n,e){return this.throwIfDisposed(),this.gl.getUniformLocation(n,e)},r.prototype.setInputMatrixTexture=function(n,e,t){this.throwIfDisposed(),this.throwIfNoProgram(),W6(this.gl,this.debug,this.program,n,e,t)},r.prototype.setOutputMatrixTexture=function(n,e,t){this.setOutputMatrixTextureDriver(n,t,e)},r.prototype.setOutputPackedMatrixTexture=function(n,e,t){this.throwIfDisposed();var o=pt(e,t),a=o[0],i=o[1];this.setOutputMatrixTextureDriver(n,a,i)},r.prototype.setOutputMatrixWriteRegion=function(n,e,t,o){this.setOutputMatrixWriteRegionDriver(t,n,o,e)},r.prototype.setOutputPackedMatrixWriteRegion=function(n,e,t,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},r.prototype.debugValidate=function(){this.program!=null&&Nn(this.gl,this.debug,this.program),Ct(this.gl)},r.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var n=this.gl;this.debug&&this.debugValidate(),J(n,this.debug,function(){return n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0)})},r.prototype.blockUntilAllProgramsCompleted=function(){var n=this;this.throwIfDisposed(),J(this.gl,this.debug,function(){return n.gl.finish()})},r.prototype.getQueryTimerExtension=function(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=wt(this.gl,this.debug,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},r.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},r.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},r.prototype.beginQuery=function(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){var n=this.gl,e=this.getQueryTimerExtensionWebGL2(),t=n.createQuery();return n.beginQuery(e.TIME_ELAPSED_EXT,t),t}var o=this.getQueryTimerExtensionWebGL1(),a=o.createQueryEXT();return o.beginQueryEXT(o.TIME_ELAPSED_EXT,a),a},r.prototype.endQuery=function(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")!==2){var n=this.getQueryTimerExtensionWebGL1();n.endQueryEXT(n.TIME_ELAPSED_EXT)}else{var e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT)}},r.prototype.waitForQueryAndGetTime=function(n){return X(this,void 0,void 0,function(){var e=this;return Y(this,function(t){switch(t.label){case 0:return[4,S3(function(){return e.disposed||e.isQueryAvailable(n,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})];case 1:return t.sent(),[2,this.getQueryTime(n,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}})})},r.prototype.getQueryTime=function(n,e){if(e===0)return null;if(e===2){var t=this.gl;return t.getQueryParameter(n,t.QUERY_RESULT)/1e6}var o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(n,o.QUERY_RESULT_EXT)/1e6},r.prototype.isQueryAvailable=function(n,e){if(e===0)return!0;if(e===2){var t=this.gl,o=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(n,t.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),a&&!this.disjoint}return a=(o=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(n,o.QUERY_RESULT_AVAILABLE_EXT),this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),a&&!this.disjoint},r.prototype.pollFence=function(n){var e=this;return new Promise(function(t){e.addItemToPoll(function(){return n.isFencePassed()},function(){return t()})})},r.prototype.pollItems=function(){for(var n=function(t){for(var o=0;o<t.length&&t[o]();++o);return o-1}(this.itemsToPoll.map(function(t){return t.isDoneFn})),e=0;e<=n;++e)(0,this.itemsToPoll[e].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(n+1)},r.prototype.addItemToPoll=function(n,e){var t=this;this.itemsToPoll.push({isDoneFn:n,resolveFn:e}),this.itemsToPoll.length>1||S3(function(){return t.pollItems(),t.itemsToPoll.length===0})},r.prototype.bindTextureToFrameBuffer=function(n){this.throwIfDisposed(),Fn(this.gl,this.debug,n,this.framebuffer),this.debug&&Ct(this.gl)},r.prototype.unbindTextureToFrameBuffer=function(){this.outputTexture!=null?(Fn(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&Ct(this.gl)):P3(this.gl,this.debug,this.framebuffer)},r.prototype.downloadMatrixDriver=function(n,e){this.bindTextureToFrameBuffer(n);var t=e();return this.unbindTextureToFrameBuffer(),t},r.prototype.setOutputMatrixTextureDriver=function(n,e,t){this.throwIfDisposed();var o=this.gl;Fn(o,this.debug,n,this.framebuffer),this.debug&&Ct(o),this.outputTexture=n,J(o,this.debug,function(){return o.viewport(0,0,e,t)}),J(o,this.debug,function(){return o.scissor(0,0,e,t)})},r.prototype.setOutputMatrixWriteRegionDriver=function(n,e,t,o){var a=this;this.throwIfDisposed(),J(this.gl,this.debug,function(){return a.gl.scissor(n,e,t,o)})},r.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},r.prototype.throwIfNoProgram=function(){if(this.program==null)throw new Error("No GPU program is currently set.")},r}();function X3(r,n){if(r.length!==n.length)throw Error("Binary was compiled with "+r.length+" inputs, but was executed with "+n.length+" inputs");r.forEach(function(e,t){var o=e.logicalShape,a=n[t],i=a.shape;if(!W0(o,i))throw Error("Binary was compiled with different shapes than the current args. Shapes "+o+" and "+i+" must match");if(!e.isUniform||!a.isUniform){var s=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!W0(s,u))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+s+" and "+u+" must match")}})}var X8=function(r,n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;for(var t=e.filterWidth,o=e.inChannels,a=e.strideWidth,i=e.strideHeight,s=e.padInfo,u=e.outWidth,c=e.dilationWidth,l=e.dilationHeight,h=e.dataFormat,f=s.left,p=s.top,d=o*t,m=X0(),v=h==="channelsLast",g=v?0:1,x=v?1:2,b="",y=0;y<=1;y++)for(var w=0;w<=1;w++)b+=`
          blockIndex = rc.y + `+w+`;
          pos = rc.x + `+y+`;

          if(blockIndex < `+r[1]+" && pos < "+r[0]+`) {
            offsetY = int(blockIndex / (`+u+")) * "+i+" - "+p+`;
            d0 = offsetY + `+l+" * (pos / "+d+`);

            if(d0 < `+n[g]+` && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), `+u+".) * "+a+". - "+f+`.);
              d1 = offsetX + `+c+" * (int(mod(float(pos), "+d+".) / "+o+`.));

              if(d1 < `+n[x]+` && d1 >= 0) {

                ch = int(mod(float(pos), `+o+`.));

                if (`+v+`) {
                  innerDims = vec2(d1, ch);
                  result[`+(2*y+w)+`] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[`+(2*y+w)+`] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        `+b+`

        `+m.output+` = result;
      }
    `},Y8=function(r,n,e,t,o){this.variableNames=["x"],this.outputShape=[];var a,i=n,s=r[3]-1;this.outputShape=r;var u="float("+e+") + float("+t+") * sum";a=o===.5?"inversesqrt("+u+")":o===1?"1.0/("+u+")":"exp(log("+u+") * float(-"+o+"));",this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -`+i+"; j <= "+i+`; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  `+s+`) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * `+a+`;
        setOutput(val);
      }
    `},$8=function(r,n,e,t,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=r,this.depth=r[3],this.depthRadius=n,this.bias=e,this.alpha=t,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < `+this.depth+`; ++d) {
          int depthBegin = int(max(0.0, float(d - `+n+`)));
          int depthEnd = int(min(float(`+this.depth+`),
              float(d + `+n+` + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = `+this.depth+`;

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(`+t+") * norm + float("+e+`);

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(`+t+`)
                * float(`+o+`)
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * `+o+`);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `},J8=function(r,n,e,t,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var a,i=n,s=r[3]-1;this.outputShape=r;var u="float("+e+") + float("+t+") * sum";a=o===.5?"inversesqrt("+u+")":o===1?"1.0/("+u+")":"exp(log("+u+") * float(-"+o+"));",this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < `+this.outputShape[3]+`;
        bool hasNextRow = c < `+this.outputShape[2]+`;

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - `+i+`;
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - `+i+"; j <= "+i+`; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(`+s+`));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * `+a+`;
        setOutput(result);
      }
    `},Q8=function(r){this.variableNames=["dy","maxPos"],this.outputShape=r.inShape;var n=r.strideHeight,e=r.strideWidth,t=r.dilationHeight,o=r.effectiveFilterHeight,a=r.effectiveFilterWidth,i=o-1-r.padInfo.top,s=a-1-r.padInfo.left,u=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(`+i+", "+s+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+o+`;
          wR += `+t+`) {
          float dyR = float(dyRCorner + wR) / `+n+`.0;

          if (dyR < 0.0 || dyR >= `+r.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < `+a+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+e+`.0;

            if (dyC < 0.0 || dyC >= `+r.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = `+u+` - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * `+a+` + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `},Z8=function(r){this.variableNames=["dy","maxPos"],this.outputShape=r.inShape;var n=r.strideDepth,e=r.strideHeight,t=r.strideWidth,o=r.dilationDepth,a=r.dilationHeight,i=r.dilationWidth,s=r.effectiveFilterDepth,u=r.effectiveFilterHeight,c=r.effectiveFilterWidth,l=s-1-r.padInfo.front,h=u-1-r.padInfo.top,f=c-1-r.padInfo.left,p=s*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(`+l+", "+h+", "+f+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < `+s+`;
           wD += `+o+`) {
          float dyD = float(dyDCorner + wD) / `+n+`.0;

          if (dyD < 0.0 || dyD >= `+r.outDepth+`.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < `+u+`;
              wR += `+a+`) {
            float dyR = float(dyRCorner + wR) / `+e+`.0;

            if (dyR < 0.0 || dyR >= `+r.outHeight+`.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < `+c+`;
                wC += `+i+`) {
              float dyC = float(dyCCorner + wC) / `+t+`.0;

              if (dyC < 0.0 || dyC >= `+r.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = `+p+` -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * `+u+" * "+c+` +
                  wR * `+c+` + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `},Wn=function(r,n,e,t,o,a,i){e===void 0&&(e=!1),t===void 0&&(t=!1),o===void 0&&(o=!1),a===void 0&&(a=null),i===void 0&&(i=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;var s=e?r[1]:r[2],u=Math.ceil(s/2),c=e?"i * 2, rc.y":"rc.y, i * 2",l=t?"rc.z, i * 2":"i * 2, rc.z",h=e?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=t?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],p="",d="";a&&(p=i?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          `+a+`
        }`:`vec4 activation(vec4 x) {
          `+a+`
        }`,d="result = activation(result);");var m=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+p+`

      const float sharedDimension = `+u+`.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < `+u+`; i++) {
          vec4 a = getMatrixA(rc.x, `+c+`);
          vec4 b = getMatrixB(rc.x, `+l+`);

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (`+h[0]+" * "+f[0]+`);
          result += (`+h[1]+" * "+f[1]+`);
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        `+m+`

        `+d+`

        setOutput(result);
      }
    `},e9=function(){function r(n,e,t){this.variableNames=["probs"],this.outputShape=[n,t],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < `+(e-1)+`; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(`+(e-1)+`));
      }
    `}return r.prototype.getCustomSetupFunc=function(n){var e=this;return function(t,o){e.seedLoc==null&&(e.seedLoc=t.getUniformLocation(o,"seed")),t.gl.uniform1f(e.seedLoc,n)}},r}(),t9=function(r,n,e,t){this.variableNames=["indices"],this.outputShape=[r,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(`+t+"), float("+e+`),
                      float(index == coords.y)));
      }
    `},n9=function(r){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=r;var n=r.length;if(n===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{var e=Z0("rc",n),t=b0(n),o=function(s,u,c){if(s===1)return"rc > "+u[0];for(var l="",h=s-2;h<s;h++)l+=c[h]+" >= "+u[h],h<s-1&&(l+="||");return l}(n,r,e),a=function(s,u,c,l){if(s===1)return"";var h=l.slice(-2);return`
    int r = `+h[0]+`;
    int c = `+h[1]+`;
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= `+u+`;
    bool rEdge = rp1 >= `+c+`;
  `}(n,r[r.length-1],r[r.length-2],e),i=function(s,u){var c=s.length,l=function(h,f){for(var p=[],d=0;d<=1;d++)for(var m=0;m<=1;m++){for(var v=(d===0?"r":"rp1")+", "+(m===0?"c":"cp1"),g=2;g<h;g++)v=f[f.length-1-g]+","+v;p.push(v)}return p}(c,u);return c===1?`getA(rc),
            rc + 1 >= `+s[0]+` ? 0. : getA(rc + 1),
            0, 0`:"getA("+l[0]+`),
          cEdge ? 0. : getA(`+l[1]+`),
          rEdge ? 0. : getA(`+l[2]+`),
          rEdge || cEdge ? 0. : getA(`+l[3]+")"}(r,e);this.userCode=`
        void main() {
          `+t+` rc = getOutputCoords();

          if(`+o+`) {
            setOutput(vec4(0));
          } else {
            `+a+`

            setOutput(vec4(`+i+`));
          }
        }
      `}},r9=function(r,n,e){this.variableNames=["x"],this.outputShape=n.map(function(u,c){return u[0]+r[c]+u[1]});var t=r.length,o=b0(t),a=n.map(function(u){return u[0]}).join(","),i=n.map(function(u,c){return u[0]+r[c]}).join(","),s=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t);this.userCode=t!==1?`
      `+o+" start = "+o+"("+a+`);
      `+o+" end = "+o+"("+i+`);

      void main() {
        `+o+` outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(`+e+`));
        } else {
          `+o+` coords = outC - start;
          setOutput(getX(`+s+`));
        }
      }
    `:`
        int start = `+a+`;
        int end = `+i+`;

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(`+e+`));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `},o9=function(r,n,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map(function(v,g){return v[0]+r[g]+v[1]});for(var t=r.length,o=b0(t),a=n.map(function(v){return v[0]}).join(","),i=n.map(function(v,g){return v[0]+r[g]}).join(","),s=Z0("rc",t),u=Z0("source",t),c=s[t-1]+" < "+this.outputShape[t-1],l=t===1?"source":"vec2("+u.slice(-2).join()+")",h=[o+" rc = outputLoc;",s[t-1]+` += 1;
       if(`+c+`) {
      `,t===1?"":`}
       rc = outputLoc;
       `+s[t-2]+` += 1;
       if(`+s[t-2]+" < "+this.outputShape[t-2]+") {",t===1?"":"  "+s[t-1]+` += 1;
         if(`+c+") {"],f=t===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="",d=0,m=t===1?2:4;d<m;d++)p+=`
        `+h[d]+`
        if (`+f+`) {
          result[`+d+"] = float("+e+`);
        } else {
          `+o+` source = rc - start;
          result[`+d+"] = getChannel(getX("+u.join()+"), "+l+`);
        }
      `;p+=t===1?"} ":"}}",this.userCode=`
      const `+o+" start = "+o+"("+a+`);
      const `+o+" end = "+o+"("+i+`);

      void main() {
        `+o+` outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        `+p+`
        setOutput(result);
      }
    `},Vn=function(r,n,e){if(this.variableNames=["x"],n==="avg"&&e)throw new Error("Cannot compute positions for average pool.");var t=r.filterWidth,o=r.strideHeight,a=r.strideWidth,i=r.dilationHeight,s=r.dilationWidth,u=r.effectiveFilterHeight,c=r.effectiveFilterWidth,l=r.padInfo.top,h=r.padInfo.left;this.outputShape=r.outShape;var f=n==="avg",p="0.0";if(f||(p="-1.0 / 1e-20"),e)this.userCode=`
        const ivec2 strides = ivec2(`+o+", "+a+`);
        const ivec2 pads = ivec2(`+l+", "+h+`);

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < `+u+`;
              wR += `+i+`) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= `+r.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+c+`;
                wC += `+s+`) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= `+r.inWidth+`) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = wR * `+c+` + wC;
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{var d=n+"("+n+"("+n+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";n==="avg"&&(d="avgValue / count");var m=4*Math.floor(t/4),v=t%4,g=`
      if (`+f+`) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(`+o+", "+a+`);
      const ivec2 pads = ivec2(`+l+", "+h+`);
      const float initializationValue = `+p+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= `+r.inWidth+`) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(`+p+`);
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < `+u+`;
            wR += `+i+`) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= `+r.inHeight+`) {
            continue;
          }

          for (int wC = 0; wC < `+m+`; wC += 4) {
            int xC = xCCorner + wC * `+s+`;

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+s+`, d),
              getValue(batch, xR, xC + 2 * `+s+`, d),
              getValue(batch, xR, xC + 3 * `+s+`, d)
            );

            `+g+`
          }

          int xC = xCCorner + `+m+`;
          if (`+(v===1)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            `+g+`
          } else if (`+(v===2)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+s+`, d),
              initializationValue,
              initializationValue
            );

            `+g+`
          } else if (`+(v===3)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+s+`, d),
              getValue(batch, xR, xC + 2 * `+s+`, d),
              initializationValue
            );

            `+g+`
          }
        }
        setOutput(`+d+`);
      }
    `}},Un=function(r,n,e){if(this.variableNames=["x"],n==="avg"&&e)throw new Error("Cannot compute positions for average pool.");var t=r.filterWidth,o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,s=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,p=r.padInfo.front,d=r.padInfo.top,m=r.padInfo.left;this.outputShape=r.outShape;var v=n==="avg",g="0.0";if(v||(g="-1.0 / 1e-20"),e)this.userCode=`
        const ivec3 strides =
            ivec3(`+o+", "+a+", "+i+`);
        const ivec3 pads = ivec3(`+p+", "+d+", "+m+`);

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < `+l+`;
              wD += `+s+`) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= `+r.inDepth+`) {
              continue;
            }

            for (int wR = 0; wR < `+h+`;
                wR += `+u+`) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= `+r.inHeight+`) {
                continue;
              }

              for (int wC = 0; wC < `+f+`;
                  wC += `+c+`) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= `+r.inWidth+`) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition =
                      wD * `+h+" * "+f+` +
                      wR * `+f+` + wC;;
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{var x=n+"("+n+"("+n+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";n==="avg"&&(x="avgValue / count");var b=4*Math.floor(t/4),y=t%4,w=`
      if (`+v+`) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(`+o+", "+a+", "+i+`);
      const ivec3 pads = ivec3(`+p+", "+d+", "+m+`);
      const float initializationValue = `+g+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= `+r.inWidth+`) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(`+g+`);
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < `+l+`;
            wD += `+s+`) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= `+r.inDepth+`) {
            continue;
          }

          for (int wR = 0; wR < `+h+`;
            wR += `+u+`) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= `+r.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+b+`; wC += 4) {
              int xC = xCCorner + wC * `+c+`;

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+c+`, ch),
                getValue(batch, xD, xR, xC + 2 * `+c+`, ch),
                getValue(batch, xD, xR, xC + 3 * `+c+`, ch)
              );

              `+w+`
            }

            int xC = xCCorner + `+b+`;
            if (`+(y===1)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              `+w+`
            } else if (`+(y===2)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+c+`, ch),
                initializationValue,
                initializationValue
              );

              `+w+`
            } else if (`+(y===3)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+c+`, ch),
                getValue(batch, xD, xR, xC + 2 * `+c+`, ch),
                initializationValue
              );

              `+w+`
            }
          }
          setOutput(`+x+`);
        }
      }
    `}},a9=function(r,n){this.variableNames=["x"];var e=r.windowSize,t=r.batchSize,o=r.inSize,a=Math.ceil(o/e);this.outputShape=[t,a];var i="0.0",s="";n==="prod"?i="1.0":n==="min"?(i="1.0 / 1e-20",s="min"):n==="max"&&(i="-1.0 / 1e-20",s="max");var u=n+"("+n+"("+n+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");var c=4*Math.floor(e/4),l=e%4,h=`
      if (`+(n==="sum")+`) {
        sumValue += dot(values, ones);
      } else if (`+(n==="prod")+`) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = `+s+`(values, minMaxValue);
      }
    `,f="vec4";n==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):n==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");var p="";o%e>0&&(p=`
        if (inIdx < 0 || inIdx >= `+o+`) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = `+i+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        `+p+`
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * `+e+`;

        vec4 minMaxValue = vec4(`+i+`);
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < `+c+`; i += 4) {
          int inIdx = inOffset + i;
          `+f+" values = "+f+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          `+h+`
        }

        int inIdx = inOffset + `+c+`;
        if (`+(l===1)+`) {
          `+f+" values = "+f+`(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          `+h+`
        } else if (`+(l===2)+`) {
          `+f+" values = "+f+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          `+h+`
        } else if (`+(l===3)+`) {
          `+f+" values = "+f+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          `+h+`
        }
        setOutput(`+u+`);
      }
    `},i9=function(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;for(var e="",t=0;t<4;t++){var o="thisRC = rc;";t%2==1&&(o+="thisRC.z += 1;"),t>1&&(o+="thisRC.y += 1;"),e+=`
        `+o+`
        `+(t>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+`
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[`+t+`] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        `+(t>0?"}":"")+`
      `}this.userCode=`
      
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      `+de(["r","c","d"],n)+`
      return ivec3(r, c, d);
    }
  
      `+P2(r)+`

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = `+r[1]+`;
        int cols = `+r[2]+`;

        `+e+`

        setOutput(result);
      }
    `},s9=function(r,n,e){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n.shape;var t=n.shape,o=t[1],a=t[2],i=r.shape,s=i[1],u=i[2],c=[e&&s>1?o-1:o,e&&u>1?a-1:a],l=[e&&s>1?s-1:s,e&&u>1?u-1:u],h=c[0]/l[0],f=c[1]/l[1],p=1/h,d=1/f,m=2*Math.ceil(p)+2,v=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(`+h+`);
        const float widthScale = float(`+f+`);

        const float invHeightScale = float(`+p+`);
        const float invWidthScale = float(`+d+`);

        const int winHeight = int(`+m+`);
        const int winWidth = int(`+v+`);

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= `+s+`) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= `+u+`) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), `+(o-1)+`.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), `+(a-1)+`.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `},u9=function(r,n,e,t){this.variableNames=["A"],this.outputShape=[];var o=r[0],a=r[1],i=r[2],s=r[3];this.outputShape=[o,n,e,s];var u=[t&&n>1?a-1:a,t&&e>1?i-1:i],c=[t&&n>1?n-1:n,t&&e>1?e-1:e];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`);
      const vec2 inputShapeRC = vec2(`+a+".0, "+i+`.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `},c9=function(r,n,e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var o=r[0],a=r[1],i=r[2],s=r[3];this.outputShape=[o,n,e,s];var u=[t&&n>1?a-1:a,t&&e>1?i-1:i],c=[t&&n>1?n-1:n,t&&e>1?e-1:e];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`,
          `+u[1]/c[1]+`);
      const vec3 inputShapeRC = vec3(`+a+".0, "+i+`.0,
                                     `+i+`.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < `+(s-1)+`;
        bool hasNextRow = coords.z < `+(e-1)+`;

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `},l9=function(r,n,e){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n.shape;var t=n.shape,o=t[1],a=t[2],i=r.shape,s=i[1],u=i[2],c=[e&&s>1?o-1:o,e&&u>1?a-1:a],l=[e&&s>1?s-1:s,e&&u>1?u-1:u],h=c[0]/l[0],f=c[1]/l[1],p=1/h,d=1/f,m=2*Math.ceil(p)+2,v=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(`+h+`);
        const float widthScale = float(`+f+`);

        const float invHeightScale = float(`+p+`);
        const float invWidthScale = float(`+d+`);

        const int winHeight = int(`+m+`);
        const int winWidth = int(`+v+`);

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= `+s+`) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= `+u+`) {
              continue;
            }

            float sourceFracRow =
              float(`+c[0]+`) *
                (float(dyR) / float(`+l[0]+`));

            float sourceFracCol =
                float(`+c[1]+`) *
                  (float(dyC) / float(`+l[1]+`));

            int sourceNearestRow = int(min(
                float(int(`+o+`) - 1),
                `+e+` ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(`+a+`) - 1),
                `+e+` ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `},h9=function(r,n,e,t){this.variableNames=["A"],this.outputShape=[];var o=r[0],a=r[1],i=r[2],s=r[3];this.outputShape=[o,n,e,s];var u=[t&&n>1?a-1:a,t&&e>1?i-1:i],c=[t&&n>1?n-1:n,t&&e>1?e-1:e],l=t?"0.5":"0.0";this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`);
      const vec2 inputShapeRC = vec2(`+a+".0, "+i+`.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + `+l+`)));

        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `},f9=function(r,n){this.variableNames=["x"];var e=r.length;if(e>4)throw new Error("WebGL backend: Reverse of rank-"+e+" tensor is not yet supported");if(this.outputShape=r,e!==1){var t=r.map(function(a,i){return function(s){return n.indexOf(s)!==-1&&r[s]!==1?r[s]+" - coords["+s+"] - 1":"coords["+s+"]"}(i)}).join(","),o=b0(e);this.userCode=`
      void main() {
        `+o+` coords = getOutputCoords();
        setOutput(getX(`+t+`));
      }
    `}else this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(`+r[0]+` - coord - 1));
        }
      `},p9=function(r,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var e=r.length;if(e>4)throw new Error("WebGL backend: Reverse of rank-"+e+" tensor is not yet supported");this.outputShape=r;var t=Z0("rc",e),o=t[e-1]+" + 1 < "+this.outputShape[e-1],a=t[e-2]+" + 1 < "+this.outputShape[e-2],i=b0(e);function s(u){var c=r.map(function(l,h){return function(f,p){return n.indexOf(f)!==-1&&r[f]!==1?r[f]+" - "+p[f]+" - 1":""+p[f]}(h,u)});return"getChannel(getX("+c.join(",")+"), vec2("+c.slice(-2).join(",")+"))"}this.userCode=e===1?`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(`+r[0]+` - rc - 1),
            `+r[0]+` - rc - 1);
          if(`+o+`){
              result.g = getChannel(getX(`+r[0]+` - (rc  + 1) - 1),
                `+r[0]+` - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:`
        void main() {
          `+i+` rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = `+function(u){return s(u)}(t.slice())+`;
          if(`+o+`){
            result.g = `+function(u){return u[e-1]="("+u[e-1]+" + 1)",s(u)}(t.slice())+`;
          }
          if(`+a+`) {
            result.b = `+function(u){return u[e-2]="("+u[e-2]+" + 1)",s(u)}(t.slice())+`;
            if(`+o+`) {
              result.a = `+function(u){return u[e-1]="("+u[e-1]+" + 1)",u[e-2]="("+u[e-2]+" + 1)",s(u)}(t.slice())+`;
            }
          }
          setOutput(result);
        }
    `},Y3=function(r,n,e,t,o,a,i){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;var s=b0(o.length),u=b0(a.length),c="";e===1?c="i":e===2&&(c="i, j");var l="getIndices("+c+")",h="";t===1?h="i":t===2&&(h="i, coords[1]");var f="getUpdates("+h+")",p=n>1?"strides[j]":"strides";this.userCode=`
        `+s+" strides = "+s+"("+o+`);

        void main() {
          `+u+` coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < `+r+`; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < `+n+`; j++) {
              int index = round(`+l+`);
              flattenedIndex += index * `+p+`;
            }
            if (flattenedIndex == coords[0]) {
              sum += `+f+`;
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `},d9=function(r,n){this.variableNames=["x","segmentIds"];var e=r.windowSize,t=r.batchSize,o=r.inSize,a=r.numSegments,i=a*Math.ceil(o/e);this.outputShape=[t,i];var s=4*Math.floor(e/4),u=e%4,c=`
        sumValue += dot(values, segFilter);
    `,l="";o%e>0&&(l=`
        if (inIdx < 0 || inIdx >= `+o+`) {
          return initializationValue;
        }
      `);var h="";o%e>0&&(h=`
        if (inIdx < 0 || inIdx >= `+o+`) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        `+l+`
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        `+h+`
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          `+a+")) * float("+e+`));
        int currentSeg = int(mod(float(outIdx), float(`+a+`)));

        float sumValue = 0.0;

        for (int i = 0; i < `+s+`; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          `+c+`
        }

        int inIdx = inOffset + `+s+`;
        if (`+(u===1)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          `+c+`
        } else if (`+(u===2)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          `+c+`
        } else if (`+(u===3)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          `+c+`
        }
        setOutput(sumValue);
      }
    `},v9=function(r,n,e){var t,o;if(this.variableNames=["c","a","b"],this.outputShape=n,e>4)throw Error("Where for rank "+e+" is not yet supported");if(e===1)o="resRC",t="resRC";else{for(var a=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[],u=0;u<n.length;u++)s.push(""+a[u]),u<r&&i.push(""+a[u]);t=i.join(),o=s.join()}var c=b0(e);this.userCode=`
      void main() {
        `+c+` resRC = getOutputCoords();
        float cVal = getC(`+t+`);
        if (cVal >= 1.0) {
          setOutput(getA(`+o+`));
        } else {
          setOutput(getB(`+o+`));
        }
      }
    `},m9=function(){function r(n){this.variableNames=["source"],this.outputShape=n,this.rank=n.length;var e,t=b0(this.rank),o="uniform int start["+this.rank+"];",a=function(i){if(i===1)return"sourceLoc";if(i<=6)return Gn.slice(0,i).map(function(s){return"sourceLoc."+s}).join(",");throw Error("Slicing for rank "+i+" is not yet supported")}(this.rank);e=`
        `+t+` sourceLoc;
        `+t+` coords = getOutputCoords();
        `+n.map(function(i,s){return"sourceLoc."+Gn[s]+" = start["+s+"] + coords."+Gn[s]+";"}).join(`
`)+`
      `,this.userCode=`
      `+o+`
      void main() {
        `+e+`
        setOutput(getSource(`+a+`));
      }
    `}return r.prototype.getCustomSetupFunc=function(n){var e=this;if(n.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+n.length+")");return function(t,o){e.startLoc==null&&(e.startLoc=t.getUniformLocationNoThrow(o,"start"),e.startLoc==null)||t.gl.uniform1iv(e.startLoc,n)}},r}(),Gn=["x","y","z","w","u","v"],g9=function(){function r(n){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.rank=n.length;var e=b0(this.rank),t=Z0("coords",this.rank),o=Z0("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":"vec2("+o.slice(-2).join()+")",i="getChannel(getSource("+o.join()+"), "+a+")",s=`
      result.x = `+i+`;
      if (++`+t[this.rank-1]+" < "+n[this.rank-1]+`) {
        ++`+o[this.rank-1]+`;
        result.y = `+i+`;
        --`+o[this.rank-1]+`;
      }
    `,u=this.rank===1?"":`
      --`+t[this.rank-1]+`;
      if (++`+t[this.rank-2]+" < "+n[this.rank-2]+`) {
        ++`+o[this.rank-2]+`;
        result.z = `+i+`;
        if (++`+t[this.rank-1]+" < "+n[this.rank-1]+`) {
          ++`+o[this.rank-1]+`;
          result.w = `+i+`;
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            `+e+"("+n.map(function(l,h){return"start["+h+"]"}).join()+");":n.map(function(l,h){return o[h]+" = "+t[h]+" + start["+h+"];"}).join(`
`);this.userCode=`
      uniform int start[`+this.rank+`];
      void main() {
        `+e+` coords = getOutputCoords();
        `+e+` sourceLoc;
        `+c+`
        vec4 result = vec4(0.);
        `+s+`
        `+u+`
        setOutput(result);
      }
    `}return r.prototype.getCustomSetupFunc=function(n){var e=this;if(n.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+n.length+")");return function(t,o){e.startLoc==null&&(e.startLoc=t.getUniformLocationNoThrow(o,"start"),e.startLoc==null)||t.gl.uniform1iv(e.startLoc,n)}},r}(),y9=function(r,n,e){this.variableNames=["x"],this.outputShape=e;var t=e.length,o=b0(e.length),a=b0(e.length),i="";if(t===1)i="coords * strides + begin";else{var s=0;i=e.map(function(u,c){return s++,e.length===1?"coords * strides["+c+"] + begin["+c+"]":"coords["+(s-1)+"] * strides["+c+"] + begin["+c+"]"}).join(",")}this.userCode=`
      `+o+" begin = "+o+"("+r+`);
      `+o+" strides = "+o+"("+n+`);

      void main() {
        `+a+` coords = getOutputCoords();
        setOutput(getX(`+i+`));
      }
    `},x9=function(){function r(n){this.gpgpu=n,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return r.prototype.acquireTexture=function(n,e,t){var o,a=$3(e,t),i=J3(n,a,t);if(i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]),this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var s=this.freeTextures[i].shift();return this.usedTextures[i].push(s),s}return this.numUsedTextures++,this.log(),a===a1.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(n[0],n[1]):a===a1.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(n[0],n[1]):a===a1.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(n[0],n[1]):a===a1.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(n[0],n[1]):a===a1.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(n[0],n[1])),this.usedTextures[i].push(o),o},r.prototype.releaseTexture=function(n,e,t,o){if(this.freeTextures!=null){var a=J3(e,$3(t,o),o);a in this.freeTextures||(this.freeTextures[a]=[]),this.freeTextures[a].push(n),this.numFreeTextures++,this.numUsedTextures--;var i=this.usedTextures[a],s=i.indexOf(n);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(s,1),this.log()}},r.prototype.log=function(){if(this.logEnabled){var n=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+n+")")}},r.prototype.getNumUsedTextures=function(){return this.numUsedTextures},r.prototype.getNumFreeTextures=function(){return this.numFreeTextures},r.prototype.dispose=function(){var n=this;if(this.freeTextures!=null){for(var e in this.freeTextures)this.freeTextures[e].forEach(function(t){n.gpgpu.deleteMatrixTexture(t)});for(var e in this.usedTextures)this.usedTextures[e].forEach(function(o){n.gpgpu.deleteMatrixTexture(o)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},r}();function $3(r,n){if(r===i1.UPLOAD)return a1.PACKED_2X2_FLOAT32;if(r===i1.RENDER||r==null)return function(e){return P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?a1.PACKED_2X2_FLOAT32:a1.UNPACKED_FLOAT32:e?a1.PACKED_2X2_FLOAT16:a1.UNPACKED_FLOAT16}(n);if(r===i1.DOWNLOAD||r===i1.PIXELS)return a1.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+r)}function J3(r,n,e){return r[0]+"_"+r[1]+"_"+n+"_"+e}var b9=function(r,n){this.variableNames=["A"];for(var e=new Array(r.length),t=0;t<e.length;t++)e[t]=r[t]*n[t];this.outputShape=e,this.rank=e.length;var o=b0(this.rank),a=function(i){var s=i.length;if(s>5)throw Error("Tile for rank "+s+" is not yet supported");if(s===1)return"imod(resRC, "+i[0]+")";for(var u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],c=[],l=0;l<i.length;l++)c.push("imod("+u[l]+", "+i[l]+")");return c.join()}(r);this.userCode=`
      void main() {
        `+o+` resRC = getOutputCoords();
        setOutput(getA(`+a+`));
      }
    `},w9=function(r,n){this.variableNames=["A"];for(var e=new Array(r.length),t=0;t<e.length;t++)e[t]=r[n[t]];this.outputShape=e,this.rank=e.length;var o=b0(this.rank),a=function(i){var s=i.length;if(s>6)throw Error("Transpose for rank "+s+" is not yet supported");for(var u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],c=new Array(s),l=0;l<i.length;l++)c[i[l]]=u[l];return c.join()}(n);this.userCode=`
    void main() {
      `+o+` resRC = getOutputCoords();
      setOutput(getA(`+a+`));
    }
    `},C9=function(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var e=new Array(r.length),t=0;t<e.length;t++)e[t]=r[n[t]];if(this.outputShape=e,this.rank=e.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var o=b0(this.rank),a=lr("rc",this.rank),i=new Array(this.rank);for(t=0;t<n.length;t++)i[n[t]]=a[t];var s="vec2("+i.slice(-2).join()+")",u="++"+a[this.rank-1]+" < "+e[this.rank-1],c="getChannel(getA("+i.join()+"), "+s+")";this.userCode=`
    void main() {
      `+o+` rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = `+c+`;
      if(`+u+`) {
        result[1] = `+c+`;
      }
      --`+a[this.rank-1]+`;
      if(++`+a[this.rank-2]+" < "+e[this.rank-2]+`) {
        result[2] = `+c+`;
        if(`+u+`) {
          result[3] = `+c+`;
        }
      }
      setOutput(result);
    }
    `},O2=1.7580993408473768,B2=1.0507009873554805,a0=function(r,n){this.variableNames=["A"],this.outputShape=r,this.userCode=`
      float unaryOperation(float x) {
        `+n+`
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `},b1="if (isnan(x)) return x;",_9="return x;",Q3="return abs(x);",vr=b1+`
  return (x < 0.0) ? 0.0 : x;
`,mr=b1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,gr="return (x >= 0.0) ? x : (exp(x) - 1.0);",E9=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = `+O2+`;
  float scale = `+B2+`;
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Z3="return -x;",e4="return ceil(x);",t4="return floor(x);",n4="return exp(x);",r4="return exp(x) - 1.0;",I9=b1+`
  return sin(x);
`,R9=b1+`
  return cos(x);
`,k9=b1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,S9=b1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,A9=b1+`
  return atan(x);
`,D9=b1+"return log(x + sqrt(x * x + 1.0));",M9=b1+`
  if (x < 1.0) return NAN;
  return log(x + sqrt(x * x - 1.0));`,T9=b1+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
  return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Rt="return x;",N9="return x;",yr=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xr=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,br=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Je=function(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        `+n+`
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `},F9=function(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=r;var n=r.length,e=Z0("rc",n),t=b0(n),o=function(s,u){if(s===1)return"rc";for(var c="",l=0;l<s;l++)c+=u[l],l<s-1&&(c+=",");return c}(n,e),a=e.slice(-2),i=n<=1?"rc":"vec2("+a.join(",")+")";this.userCode=`
      void main() {
        `+t+` rc = getOutputCoords();
        vec4 packedInput = getA(`+o+`);

        setOutput(getChannel(packedInput, `+i+`));
      }
    `},kt={};function St(r,n){if(n===void 0&&(n=!1),r==="linear")return n?N9:_9;if(r==="relu")return n?yr:vr;if(r==="elu")return n?br:gr;if(r==="relu6")return n?xr:mr;if(r==="prelu")return n?dr:pr;throw new Error("Activation "+r+" has not been implemented for the WebGL backend.")}var P9=600,O9=function(r){function n(e){var t,o=r.call(this)||this;if(o.pendingRead=new WeakMap,o.pendingDisposal=new WeakSet,o.dataRefCount=new WeakMap,o.numBytesInGPU=0,o.uploadWaitMs=0,o.downloadWaitMs=0,o.warnedAboutMemory=!1,o.pendingDeletes=0,o.disposed=!1,!P().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){var a=P1(P().getNumber("WEBGL_VERSION"));o.binaryCache=((t=P().getNumber("WEBGL_VERSION"))in kt||(kt[t]={}),kt[t]),o.gpgpu=new K8(a),o.canvas=a.canvas,o.gpgpuCreatedLocally=!0}else o.gpgpu=e,o.binaryCache={},o.gpgpuCreatedLocally=!1,o.canvas=e.gl.canvas;return o.textureManager=new x9(o.gpgpu),o.numMBBeforeWarning=P().global.screen==null?1024:P().global.screen.height*P().global.screen.width*window.devicePixelRatio*P9/1024/1024,o.texData=new tr(o,M),o}return x1(n,r),n.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},n.prototype.write=function(e,t,o){if(P().getBool("DEBUG")&&this.checkNumericalProblems(e),o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var a={};return this.texData.set(a,{shape:t,dtype:o,values:e,usage:i1.UPLOAD}),a},n.prototype.move=function(e,t,o,a){if(P().getBool("DEBUG")&&this.checkNumericalProblems(t),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:o,dtype:a,values:t,usage:i1.UPLOAD})},n.prototype.readSync=function(e){var t=this.texData.get(e),o=t.values,a=t.dtype,i=t.complexTensors,s=t.slice,u=t.shape,c=t.isPacked;if(s!=null){var l=void 0;l=c?new Je(u,Rt):new a0(u,Rt);var h=this.runWebGLProgram(l,[{dataId:e,shape:u,dtype:a}],a),f=this.readSync(h.dataId);return this.disposeData(h.dataId),f}if(o!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return o;var p,d,m=this.activeTimers!=null;return m&&(p=R1()),a==="complex64"?d=p2(i.real.dataSync(),i.imag.dataSync()):d=this.getValuesFromTexture(e),m&&(this.downloadWaitMs+=R1()-p),this.convertAndCacheOnCPU(e,d)},n.prototype.read=function(e){return X(this,void 0,void 0,function(){var t,o,a,i,s,u,c,l,h,f,p,d,m,v,g,x,b,y,w,C,S,k;return Y(this,function(I){switch(I.label){case 0:if(this.pendingRead.has(e))return t=this.pendingRead.get(e),[2,new Promise(function(R){return t.push(R)})];if(o=this.texData.get(e),a=o.values,i=o.shape,s=o.slice,u=o.dtype,c=o.complexTensors,l=o.isPacked,s!=null)return h=void 0,h=l?new Je(i,Rt):new a0(i,Rt),f=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:u}],u),p=this.read(f.dataId),this.disposeData(f.dataId),[2,p];if(a!=null)return[2,this.convertAndCacheOnCPU(e)];if(!P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&P().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return d=null,u!=="complex64"&&P().get("WEBGL_BUFFER_SUPPORTED")&&(m=this.decode(e),v=this.texData.get(m.dataId),d=(k=this.gpgpu).createBufferFromTexture.apply(k,[v.texture].concat(Ze(i)))),this.pendingRead.set(e,[]),u==="complex64"?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:I.sent(),I.label=2;case 2:return u!=="complex64"?[3,4]:[4,Promise.all([c.real.data(),c.imag.data()])];case 3:return x=I.sent(),b=x[0],y=x[1],g=p2(b,y),[3,5];case 4:d==null?g=this.getValuesFromTexture(e):(w=$(i),g=this.gpgpu.downloadFloat32MatrixFromBuffer(d,w)),I.label=5;case 5:return m!=null&&this.disposeData(m.dataId),C=this.convertAndCacheOnCPU(e,g),S=this.pendingRead.get(e),this.pendingRead.delete(e),S.forEach(function(R){return R(C)}),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),[2,C]}})})},n.prototype.checkNumericalProblems=function(e){if(e!=null)for(var t=0;t<e.length;t++){var o=e[t];if(!E6(o))throw P().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error("The value "+o+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'"):Error("The value "+o+" cannot be represented on this device.")}},n.prototype.getValuesFromTexture=function(e){var t,o=this.texData.get(e),a=o.shape,i=o.dtype,s=o.isPacked,u=$(a);if(P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var c=this.decode(e),l=this.texData.get(c.dataId),h=(t=this.gpgpu).downloadMatrixFromPackedTexture.apply(t,[l.texture].concat(Ze(a))).subarray(0,u);return this.disposeData(c.dataId),h}var f=P().getBool("WEBGL_PACK")&&s===!0,p=f?Pn(a):a,d=f?new _8(p):new C8(p),m=this.runWebGLProgram(d,[{shape:p,dtype:i,dataId:e}],"float32"),v=this.texData.get(m.dataId),g=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(v.texture,v.texShape[0],v.texShape[1]).subarray(0,u);return this.disposeData(m.dataId),g},n.prototype.time=function(e){return X(this,void 0,void 0,function(){var t,o,a,i,s,u,c;return Y(this,function(l){switch(l.label){case 0:return t=this.activeTimers,o=[],a=!1,this.programTimersStack==null?(this.programTimersStack=o,a=!0):this.activeTimers.push(o),this.activeTimers=o,e(),i=Ge(this.activeTimers.map(function(h){return h.query})).filter(function(h){return h!=null}),s=Ge(this.activeTimers.map(function(h){return h.name})).filter(function(h){return h!=null}),this.activeTimers=t,a&&(this.programTimersStack=null),u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(i)]:[3,2];case 1:return c=l.sent(),u.kernelMs=o6(c),u.getExtraProfileInfo=function(){return c.map(function(h,f){return{name:s[f],ms:h}}).map(function(h){return h.name+": "+h.ms}).join(", ")},[3,3];case 2:u.kernelMs={error:"WebGL query timers are not supported in this environment."},l.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,u]}})})},n.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},n.prototype.startTimer=function(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:R1(),endMs:null}},n.prototype.endTimer=function(e){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=R1(),e)},n.prototype.getQueryTime=function(e){return X(this,void 0,void 0,function(){var t;return Y(this,function(o){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(e)]:[2,(t=e).endMs-t.startMs]})})},n.prototype.disposeData=function(e){if(!this.pendingDisposal.has(e)){if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(this.texData.has(e)){this.releaseGPUData(e);var t=this.texData.get(e).complexTensors;t!=null&&(t.real.dispose(),t.imag.dispose()),this.texData.delete(e)}}},n.prototype.releaseGPUData=function(e){var t=this.texData.get(e),o=t.texture,a=t.dtype,i=t.texShape,s=t.usage,u=t.isPacked,c=t.slice,l=c&&c.origDataId||e,h=this.dataRefCount.get(l);h>1?this.dataRefCount.set(l,h-1):(this.dataRefCount.delete(l),o!=null&&(this.numBytesInGPU-=this.computeBytes(i,a),this.textureManager.releaseTexture(o,i,s,u)));var f=this.texData.get(e);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null},n.prototype.getTexture=function(e){return this.uploadToGPU(e),this.texData.get(e).texture},n.prototype.getDataInfo=function(e){return this.texData.get(e)},n.prototype.getCPUBackend=function(){return P().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=M.findBackend("cpu")),this.cpuBackend):null},n.prototype.shouldExecuteOnCPU=function(e,t){var o=this;return t===void 0&&(t=128),this.getCPUBackend()!=null&&e.every(function(a){return o.texData.get(a.dataId).texture==null&&a.size<t})},n.prototype.getGPGPUContext=function(){return this.gpgpu},n.prototype.complex=function(e,t){var o=this.makeOutput(e.shape,"complex64");return this.texData.get(o.dataId).complexTensors={real:M.keep(e.clone()),imag:M.keep(t.clone())},o},n.prototype.real=function(e){return this.texData.get(e.dataId).complexTensors.real.clone()},n.prototype.imag=function(e){return this.texData.get(e.dataId).complexTensors.imag.clone()},n.prototype.slice=function(e,t,o){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.slice(e,t,o);if($(o)===0)return H0([],o,e.dtype);var a=this.texData.get(e.dataId).isPacked,i=Z4(e.shape,t,o);if(a||!i){var s=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new g9(o):new m9(o),u=s.getCustomSetupFunc(t);return this.compileAndRun(s,[e],null,u)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,o)},n.prototype.shallowSlice=function(e,t,o){var a=this.texData.get(e.dataId),i=this.makeOutput(o,e.dtype),s=this.texData.get(i.dataId);Object.assign(s,a),s.shape=o,s.dtype=e.dtype;var u=er(t,e.strides);a.slice&&(u+=a.slice.flatOffset),s.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};var c=this.dataRefCount.get(s.slice.origDataId)||1;return this.dataRefCount.set(s.slice.origDataId,c+1),i},n.prototype.stridedSlice=function(e,t,o,a){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.stridedSlice(e,t,o,a);var i=D2(t,o,a);if(i.some(function(u){return u===0}))return H0([],i);var s=new y9(t,a,i);return this.compileAndRun(s,[e])},n.prototype.reverse=function(e,t){var o=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new p9(e.shape,t):new f9(e.shape,t);return this.compileAndRun(o,[e])},n.prototype.concat=function(e,t){if(e[0].dtype==="complex64"){var o=e.map(function(p){return f1(p)}),a=e.map(function(p){return S1(p)});return G0(this.concat(o,t),this.concat(a,t))}if(this.shouldExecuteOnCPU(e))return this.cpuBackend.concat(e,t);if(e.length===1)return e[0];if(e.length>P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var i=Math.floor(e.length/2),s=this.concat(e.slice(0,i),t),u=this.concat(e.slice(i),t);return this.concat([s,u],t)}if(P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].rank>1){var c=new u8(e.map(function(p){return p.shape}),t);return this.compileAndRun(c,e)}var l=He(e.map(function(p){return p.shape}),t),h=e.map(function(p){return p.as2D(-1,$(p.shape.slice(t)))}),f=new s8(h.map(function(p){return p.shape}));return this.compileAndRun(f,h).reshape(l)},n.prototype.neg=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.neg(e);if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Z3,e.dtype);var t=new a0(e.shape,Z3);return this.compileAndRun(t,[e])},n.prototype.batchMatMul=function(e,t,o,a){var i=o?e.shape[2]:e.shape[1],s=a?t.shape[1]:t.shape[2],u=o?e.shape[1]:e.shape[2],c=e.shape[0];if((i===1||s===1)&&u>1e3){o&&(e=e.transpose([0,2,1])),a&&(t=t.transpose([0,2,1]));var l=s===1?e:e.as3D(c,u,1),h=s===1?2:1,f=s===1?t.as3D(c,1,u):t;return this.multiply(l,f).sum(h,!0)}var p=z0(e.dtype,t.dtype),d=new Wn(e.shape,[c,i,s],o,a);return this.compileAndRun(d,[e,t],p)},n.prototype.fusedBatchMatMul=function(e){var t=e.a,o=e.b,a=e.transposeA,i=e.transposeB,s=e.bias,u=e.activation,c=e.preluActivationWeights,l=a?t.shape[2]:t.shape[1],h=i?o.shape[1]:o.shape[2],f=t.shape[0],p=z0(t.dtype,o.dtype),d=s!=null,m=c!=null,v=u?St(u,!0):null,g=new Wn(t.shape,[f,l,h],a,i,d,v,m),x=[t,o];return s&&x.push(s),c&&x.push(c),this.compileAndRun(g,x,p)},n.prototype.multiply=function(e,t){if(e.dtype==="complex64"){var o=this.texData.get(e.dataId),a=this.texData.get(t.dataId),i=new U3(n8,e.shape,t.shape),s=new U3(r8,e.shape,t.shape),u=[this.makeComplexComponentTensorInfo(e,o.complexTensors.real),this.makeComplexComponentTensorInfo(e,o.complexTensors.imag),this.makeComplexComponentTensorInfo(t,a.complexTensors.real),this.makeComplexComponentTensorInfo(t,a.complexTensors.imag)],c=this.compileAndRun(i,u),l=this.compileAndRun(s,u),h=this.complex(c,l);return c.dispose(),l.dispose(),h}if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.multiply(e,t);if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,G3,e.dtype);var f=new S0(G3,e.shape,t.shape);return this.compileAndRun(f,[e,t],e.dtype)},n.prototype.batchNormalization=function(e,t,o,a,i,s){var u=[e,t,o],c=null;s!=null&&(c=s.shape,u.push(s));var l=null;if(i!=null&&(l=i.shape,u.push(i)),P().getBool("WEBGL_PACK_NORMALIZATION")){var h=new t8(e.shape,t.shape,o.shape,c,l,a);return this.compileAndRun(h,u)}var f=new e8(e.shape,t.shape,o.shape,c,l,a);return this.compileAndRun(f,u)},n.prototype.localResponseNormalization4D=function(e,t,o,a,i){var s=P().getBool("WEBGL_PACK_NORMALIZATION")?new J8(e.shape,t,o,a,i):new Y8(e.shape,t,o,a,i);return this.compileAndRun(s,[e])},n.prototype.LRNGrad=function(e,t,o,a,i,s,u){var c=new $8(t.shape,a,i,s,u);return this.compileAndRun(c,[t,o,e])},n.prototype.tile=function(e,t){if(e.dtype==="string"){var o=this.readSync(e.dataId).map(function(i){return Bt(i)});return ur(o0(e.shape,e.dtype,o),t)}var a=new b9(e.shape,t);return this.compileAndRun(a,[e])},n.prototype.pad=function(e,t,o){var a=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o9(e.shape,t,o):new r9(e.shape,t,o);return this.compileAndRun(a,[e])},n.prototype.transpose=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.transpose(e,t);var o=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new C9(e.shape,t):new w9(e.shape,t);return this.compileAndRun(o,[e])},n.prototype.gather=function(e,t,o){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.gather(e,t,o);var a=new A8(e.shape,t.size,o);return this.compileAndRun(a,[e,t])},n.prototype.batchToSpaceND=function(e,t,o){E(e.rank<=4,function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"});var a=t.reduce(function(h,f){return h*f}),i=zt(e.shape,t,a),s=Ht(i.length,t.length),u=jt(e.shape,t,a),c=Y4(o,t.length),l=$4(u,o,t.length);return e.reshape(i).transpose(s).reshape(u).slice(c,l)},n.prototype.spaceToBatchND=function(e,t,o){E(e.rank<=4,function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"});var a=t.reduce(function(f,p){return f*p}),i=[[0,0]];i.push.apply(i,o);for(var s=1+t.length;s<e.shape.length;++s)i.push([0,0]);var u=e.pad(i),c=zt(u.shape,t,a,!1),l=Ht(c.length,t.length,!1),h=jt(u.shape,t,a,!1);return u.reshape(c).transpose(l).reshape(h)},n.prototype.reduce=function(e,t,o){var a=e.shape[0],i=e.shape[1],s=On(i),u=new a9({windowSize:s,inSize:i,batchSize:a},t),c=this.compileAndRun(u,[e],o);return c.shape[1]===1?c:this.reduce(c,t,o)},n.prototype.argReduce=function(e,t,o){o===void 0&&(o=null);var a=e.shape[0],i=e.shape[1];o!=null&&(a=o.shape[0],i=o.shape[1]);var s=On(i),u=new j7({windowSize:s,inSize:i,batchSize:a},t,o==null),c=[e];o!=null&&c.push(o);var l=this.compileAndRun(u,c,"int32");return l.shape[1]===1?l:this.argReduce(e,t,l)},n.prototype.argReducePacked=function(e,t,o){o===void 0&&(o=null);var a=o!=null?o.shape:e.shape,i=On(a[a.length-1]),s=new J7(a,i,t,o==null),u=o==null?[e]:[e,o],c=this.compileAndRun(s,u,"int32");return c.rank===e.rank?this.argReducePacked(e,t,c):c},n.prototype.sum=function(e,t){o1("sum",t,e.rank);var o=q0(e.shape,t),a=o[0],i=$(o[1]),s=e.as2D(-1,i),u=Sn(e.dtype);return this.reduce(s,"sum",u).reshape(a)},n.prototype.prod=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.prod(e,t);var o=q0(e.shape,t),a=o[0],i=$(o[1]),s=e.as2D(-1,i),u=Sn(e.dtype);return this.reduce(s,"prod",u).reshape(a)},n.prototype.unsortedSegmentSum=function(e,t,o){var a=0,i=O1([a],e.rank),s=e;i!=null&&(s=e.transpose(i),a=B1(1,e.rank)[0]);var u=function(p,d,m){for(var v=[],g=p.length,x=0;x<g;x++)x!==d?v.push(p[x]):v.push(m);return v}(s.shape,a,o),c=$([s.shape[a]]),l=s.as2D(-1,c),h=Sn(e.dtype),f=this.segOpCompute(l,"unsortedSegmentSum",t,h,o).reshape(u);return i!=null&&(f=f.transpose(R2(i))),f},n.prototype.segOpCompute=function(e,t,o,a,i){var s=e.shape[0],u=e.shape[1],c=function(f,p){var d,m=!1;for(f<=Q4?(d=f,m=!0):d=o2(f,Math.floor(Math.sqrt(f)));!m;)d>p||d===f?m=!0:d=o2(f,d+1);return d}(u,i),l=new d9({windowSize:c,inSize:u,batchSize:s,numSegments:i}),h=this.compileAndRun(l,[e,o],a);return h.shape[1]===i?h:(o=Gt(0,i).tile([u/c]),this.segOpCompute(h,t,o,a,i))},n.prototype.argMinMaxReduce=function(e,t,o){var a=[t];if(o1("arg"+o.charAt(0).toUpperCase()+o.slice(1),a,e.rank),!P().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){var i=q0(e.shape,a),s=i[0],u=$(i[1]),c=e.as2D(-1,u);return this.argReduce(c,o).reshape(s)}return this.argReducePacked(e,o)},n.prototype.argMin=function(e,t){return this.argMinMaxReduce(e,t,"min")},n.prototype.argMax=function(e,t){return this.argMinMaxReduce(e,t,"max")},n.prototype.cumsum=function(e,t,o,a){if(t!==e.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(e.rank-1)+" but got axis="+t);var i=new g8(e.shape,o,a);return this.compileAndRun(i,[e])},n.prototype.equal=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return vec4(equal(a, b));
`,"bool");var o=new S0("return float(a == b);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.notEqual=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return vec4(notEqual(a, b));
`,"bool");var o=new S0("return float(a != b);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.less=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.less(e,t);if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return vec4(lessThan(a, b));
`,"bool");var o=new S0("return float(a < b);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.lessEqual=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return vec4(lessThanEqual(a, b));
`,"bool");var o=new S0("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.greater=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.greater(e,t);if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return vec4(greaterThan(a, b));
`,"bool");var o=new S0("return float(a > b);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.greaterEqual=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return vec4(greaterThanEqual(a, b));
`,"bool");var o=new S0("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.logicalNot=function(e){var t=new a0(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])},n.prototype.logicalAnd=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,"bool");var o=new S0("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.logicalOr=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,"bool");var o=new S0("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(o,[e,t],"bool")},n.prototype.select=function(e,t,o){var a=new v9(e.rank,t.shape,t.rank);return this.compileAndRun(a,[e,t,o],z0(t.dtype,o.dtype))},n.prototype.where=function(e){Vt("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return F2(e.shape,t)},n.prototype.topk=function(e,t,o){return cr(e.dataSync(),e.shape,e.dtype,t)},n.prototype.min=function(e,t){o1("min",t,e.rank);var o=q0(e.shape,t),a=o[0],i=$(o[1]),s=e.as2D(-1,i);return this.reduce(s,"min",s.dtype).reshape(a)},n.prototype.minimum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.minimum(e,t);var o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1(`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,e.shape,t.shape):new S0(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return min(a, b);
`,e.shape,t.shape);return this.compileAndRun(o,[e,t])},n.prototype.mod=function(e,t){var o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1(`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,e.shape,t.shape):new S0(`if (b == 0.0) return NAN;
  return mod(a, b);`,e.shape,t.shape);return this.compileAndRun(o,[e,t])},n.prototype.max=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.max(e,t);o1("max",t,e.rank);var o=q0(e.shape,t),a=o[0],i=$(o[1]),s=e.as2D(-1,i);return this.reduce(s,"max",s.dtype).reshape(a)},n.prototype.maximum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.maximum(e,t);var o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1(`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,e.shape,t.shape):new S0(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return max(a, b);
`,e.shape,t.shape);return this.compileAndRun(o,[e,t])},n.prototype.all=function(e,t){o1("all",t,e.rank);var o=q0(e.shape,t),a=o[0],i=$(o[1]),s=e.as2D(-1,i);return this.reduce(s,"all",s.dtype).reshape(a)},n.prototype.any=function(e,t){o1("any",t,e.rank);var o=q0(e.shape,t),a=o[0],i=$(o[1]),s=e.as2D(-1,i);return this.reduce(s,"any",s.dtype).reshape(a)},n.prototype.realDivide=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,"float32",!0);var o=new S0(`
if (a == b) {
  return 1.0;
};
return a / b;`,e.shape,t.shape);return this.compileAndRun(o,[e,t],"float32")},n.prototype.floorDiv=function(e,t){if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,"int32");var o=new S0(`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,e.shape,t.shape);return this.compileAndRun(o,[e,t],"int32")},n.prototype.add=function(e,t){if(e.dtype==="complex64"&&t.dtype==="complex64")return this.complexSeparableBinaryOp(e,t,Bn);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.add(e,t);var o=z0(e.dtype,t.dtype);if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,Bn,o);var a=new S0(Bn,e.shape,t.shape);return this.compileAndRun(a,[e,t],o)},n.prototype.packedUnaryOp=function(e,t,o){var a=new Je(e.shape,t);return this.compileAndRun(a,[e],o)},n.prototype.packedBinaryOp=function(e,t,o,a,i){i===void 0&&(i=!1);var s=new G1(o,e.shape,t.shape,i);return this.compileAndRun(s,[e,t],a)},n.prototype.complexSeparableBinaryOp=function(e,t,o){var a=this,i=this.texData.get(e.dataId),s=this.texData.get(t.dataId),u=[[i.complexTensors.real,s.complexTensors.real],[i.complexTensors.imag,s.complexTensors.imag]].map(function(f){var p=f[0],d=f[1],m=a.makeComplexComponentTensorInfo(e,p),v=a.makeComplexComponentTensorInfo(t,d),g=new S0(o,e.shape,t.shape);return a.compileAndRun(g,[m,v],z0(p.dtype,d.dtype))}),c=u[0],l=u[1],h=this.complex(c,l);return c.dispose(),l.dispose(),h},n.prototype.makeComplexComponentTensorInfo=function(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}},n.prototype.addN=function(e){if(e.length===1)return e[0];if(e.length>P().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var t=Math.floor(e.length/2),o=this.addN(e.slice(0,t)),a=this.addN(e.slice(t));return this.addN([o,a])}var i=e.map(function(c){return c.dtype}).reduce(function(c,l){return z0(c,l)}),s=e.map(function(c){return c.shape}),u=P().getBool("WEBGL_PACK")?new H7(e[0].shape,s):new z7(e[0].shape,s);return this.compileAndRun(u,e,i)},n.prototype.subtract=function(e,t){if(e.dtype==="complex64"&&t.dtype==="complex64")return this.complexSeparableBinaryOp(e,t,Ln);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.subtract(e,t);var o=z0(e.dtype,t.dtype);if(P().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,Ln,e.dtype);var a=new S0(Ln,e.shape,t.shape);return this.compileAndRun(a,[e,t],o)},n.prototype.pow=function(e,t){var o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1(`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,e.shape,t.shape):new S0(`
if(a < 0.0 && floor(b) < b){
  return NAN;
}
if (b == 0.0) {
  return 1.0;
}
return (round(mod(b, 2.0)) != 1) ?
    pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,e.shape,t.shape),a=z0(e.dtype,t.dtype);return this.compileAndRun(o,[e,t],a)},n.prototype.ceil=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.ceil(e);if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,e4,e.dtype);var t=new a0(e.shape,e4);return this.compileAndRun(t,[e])},n.prototype.floor=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.floor(e);if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,t4,e.dtype);var t=new a0(e.shape,t4);return this.compileAndRun(t,[e])},n.prototype.sign=function(e){var t=new a0(e.shape,`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`);return this.compileAndRun(t,[e])},n.prototype.isNaN=function(e){var t=new a0(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")},n.prototype.isInf=function(e){var t=new a0(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")},n.prototype.isFinite=function(e){var t=new a0(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")},n.prototype.round=function(e){var t=new a0(e.shape,`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`);return this.compileAndRun(t,[e])},n.prototype.exp=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.exp(e);if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,n4,e.dtype);var t=new a0(e.shape,n4);return this.compileAndRun(t,[e])},n.prototype.expm1=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.expm1(e);if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,r4,e.dtype);var t=new a0(e.shape,r4);return this.compileAndRun(t,[e])},n.prototype.softmax=function(e,t){var o=B0([t],e.shape),a=this.max(e,o),i=t1(a.shape,o),s=this.subtract(e,a.reshape(i)),u=this.exp(s),c=this.sum(u,o).reshape(i);return this.realDivide(u,c)},n.prototype.log=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.log(e);if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,e.dtype);var t=new a0(e.shape,`if (x < 0.0) return NAN;
  return log(x);`);return this.compileAndRun(t,[e])},n.prototype.log1p=function(e){var t=new a0(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])},n.prototype.sqrt=function(e){var t=new a0(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])},n.prototype.rsqrt=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.rsqrt(e);var t=new a0(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])},n.prototype.reciprocal=function(e){var t=new a0(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])},n.prototype.relu=function(e){var t;return t=P().getBool("WEBGL_PACK")?new Je(e.shape,yr):new a0(e.shape,vr),this.compileAndRun(t,[e])},n.prototype.relu6=function(e){var t;return t=P().getBool("WEBGL_PACK")?new Je(e.shape,xr):new a0(e.shape,mr),this.compileAndRun(t,[e])},n.prototype.prelu=function(e,t){var o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1(dr,e.shape,t.shape):new S0(pr,e.shape,t.shape);return this.compileAndRun(o,[e,t])},n.prototype.elu=function(e){if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,br,e.dtype);var t=new a0(e.shape,gr);return this.compileAndRun(t,[e])},n.prototype.eluDer=function(e,t){var o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1(`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,e.shape,t.shape):new S0("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(o,[e,t])},n.prototype.selu=function(e){var t=new a0(e.shape,E9);return this.compileAndRun(t,[e])},n.prototype.int=function(e){var t=new a0(e.shape,"return float(int(x));");return this.compileAndRun(t,[e],"int32")},n.prototype.clip=function(e,t,o){var a,i=(a=P().getBool("WEBGL_PACK_CLIP")?new a8(e.shape):new o8(e.shape)).getCustomSetupFunc(t,o);return this.compileAndRun(a,[e],null,i)},n.prototype.abs=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.abs(e);if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Q3,e.dtype);var t=new a0(e.shape,Q3);return this.compileAndRun(t,[e])},n.prototype.complexAbs=function(e){var t=this.texData.get(e.dataId),o=new i8(e.shape),a=[this.makeComplexComponentTensorInfo(e,t.complexTensors.real),this.makeComplexComponentTensorInfo(e,t.complexTensors.imag)];return this.compileAndRun(o,a)},n.prototype.sigmoid=function(e){var t=new a0(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])},n.prototype.softplus=function(e){var t=new a0(e.shape,`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`);return this.compileAndRun(t,[e])},n.prototype.sin=function(e){var t=new a0(e.shape,I9);return this.compileAndRun(t,[e])},n.prototype.cos=function(e){var t=new a0(e.shape,R9);return this.compileAndRun(t,[e])},n.prototype.tan=function(e){var t=new a0(e.shape,"return tan(x);");return this.compileAndRun(t,[e])},n.prototype.asin=function(e){var t=new a0(e.shape,k9);return this.compileAndRun(t,[e])},n.prototype.acos=function(e){var t=new a0(e.shape,S9);return this.compileAndRun(t,[e])},n.prototype.atan=function(e){var t=new a0(e.shape,A9);return this.compileAndRun(t,[e])},n.prototype.atan2=function(e,t){var o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1(`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,e.shape,t.shape):new S0(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return atan(a, b);
`,e.shape,t.shape);return this.compileAndRun(o,[e,t])},n.prototype.sinh=function(e){var t=new a0(e.shape,`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`);return this.compileAndRun(t,[e])},n.prototype.cosh=function(e){var t=new a0(e.shape,`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`);return this.compileAndRun(t,[e])},n.prototype.tanh=function(e){var t=new a0(e.shape,`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`);return this.compileAndRun(t,[e])},n.prototype.asinh=function(e){var t=new a0(e.shape,D9);return this.compileAndRun(t,[e])},n.prototype.acosh=function(e){var t=new a0(e.shape,M9);return this.compileAndRun(t,[e])},n.prototype.atanh=function(e){var t=new a0(e.shape,T9);return this.compileAndRun(t,[e])},n.prototype.erf=function(e){var t=new a0(e.shape,`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = 0.3275911;
  float a1 = 0.254829592;
  float a2 = -0.284496736;
  float a3 = 1.421413741;
  float a4 = -1.453152027;
  float a5 = 1.061405429;

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`);return this.compileAndRun(t,[e])},n.prototype.step=function(e,t){var o=new a0(e.shape,function(a){return a===void 0&&(a=0),b1+`
    return x > 0.0 ? 1.0 : float(`+a+`);
  `}(t));return this.compileAndRun(o,[e])},n.prototype.conv2dByMatMul=function(e,t,o,a,i,s){var u=e.shape,c=this.texData.get(e.dataId),l=o.inChannels,h=u[0]*u[1]*u[2],f=o.outChannels,p=o.dataFormat==="channelsLast",d=(h===1||f===1)&&l>1e3,m=u[2]%2!=0&&!!c.isPacked;if(d||!P().getBool("WEBGL_LAZILY_UNPACK")||!P().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!m){var v=p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],g=this.reshape(e,[1,v,o.inChannels]),x=this.reshape(t,[1,o.inChannels,o.outChannels]);return this.reshape(this.fusedBatchMatMul({a:g,b:x,transposeA:!1,transposeB:!1,bias:a,activation:i,preluActivationWeights:s}),o.outShape)}var b=p?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),y={dataId:e.dataId,shape:[1,b,o.inChannels],dtype:e.dtype},w=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,E(Et(c.shape,y.shape),function(){return"packed reshape "+c.shape+" to "+y.shape+" isn't free"});var C=this.reshape(t,[1,o.inChannels,o.outChannels]),S=this.fusedBatchMatMul({a:y,b:C,transposeA:!1,transposeB:!1,bias:a,activation:i,preluActivationWeights:s}),k=this.texData.get(S.dataId);return E(k.isPacked,function(){return"batchMatMul result is expected to be packed"}),c.shape=w,k.shape=o.outShape,M.makeTensorFromDataId(S.dataId,o.outShape,S.dtype)},n.prototype.conv2dWithIm2Row=function(e,t,o,a,i,s){var u=o.filterWidth,c=o.filterHeight,l=o.inChannels,h=o.outWidth,f=o.outHeight,p=o.dataFormat==="channelsLast",d=u*c*l,m=f*h,v=[d,m],g=e.squeeze([0]),x=t.reshape([1,d,-1]),b=new X8(v,g.shape,o),y=this.compileAndRun(b,[g]).reshape([1,v[0],v[1]]),w=a!=null,C=s!=null,S=i?St(i,!0):null,k=new Wn(y.shape,[1,m,o.outChannels],!0,!1,w,S,C),I=[y,x];a&&I.push(a),C&&I.push(s);var R=this.compileAndRun(k,I);return p?R.reshape([1,f,h,o.outChannels]):R.reshape([1,o.outChannels,f,h])},n.prototype.fusedConv2d=function(e){var t=e.input,o=e.filter,a=e.convInfo,i=e.bias,s=e.activation,u=e.preluActivationWeights;if(a.filterHeight===1&&a.filterWidth===1&&a.dilationHeight===1&&a.dilationWidth===1&&a.strideHeight===1&&a.strideWidth===1&&(a.padInfo.type==="SAME"||a.padInfo.type==="VALID"))return this.conv2dByMatMul(t,o,a,i,s,u);if(P().getBool("WEBGL_CONV_IM2COL")&&t.shape[0]===1)return this.conv2dWithIm2Row(t,o,a,i,s,u);var c=i!=null,l=u!=null,h=s?St(s,!1):null,f=new z3(a,c,h,l),p=[t,o];return i&&p.push(i),u&&p.push(u),this.compileAndRun(f,p)},n.prototype.conv2d=function(e,t,o){if(o.filterHeight===1&&o.filterWidth===1&&o.dilationHeight===1&&o.dilationWidth===1&&o.strideHeight===1&&o.strideWidth===1&&(o.padInfo.type==="SAME"||o.padInfo.type==="VALID"))return this.conv2dByMatMul(e,t,o);if(P().getBool("WEBGL_CONV_IM2COL")&&e.shape[0]===1)return this.conv2dWithIm2Row(e,t,o);var a=new z3(o);return this.compileAndRun(a,[e,t])},n.prototype.conv2dDerInput=function(e,t,o){var a=new l8(o);return this.compileAndRun(a,[e,t])},n.prototype.conv2dDerFilter=function(e,t,o){var a=new c8(o);return this.compileAndRun(a,[e,t])},n.prototype.fusedDepthwiseConv2D=function(e){var t,o=e.input,a=e.filter,i=e.convInfo,s=e.bias,u=e.activation,c=e.preluActivationWeights,l=P().getBool("WEBGL_PACK_DEPTHWISECONV")&&i.strideWidth<=2&&i.outChannels/i.inChannels==1,h=u?St(u,l):null,f=[o,a],p=s!=null,d=c!=null;return p&&f.push(s),d&&f.push(c),l?(t=new j3(i,p,h,d),this.compileAndRun(t,f)):(t=new H3(i,p,h,d),this.compileAndRun(t,f))},n.prototype.depthwiseConv2D=function(e,t,o){var a;return P().getBool("WEBGL_PACK_DEPTHWISECONV")&&o.strideWidth<=2&&o.outChannels/o.inChannels==1?(a=new j3(o),this.compileAndRun(a,[e,t])):(a=new H3(o),this.compileAndRun(a,[e,t]))},n.prototype.depthwiseConv2DDerInput=function(e,t,o){var a=new d8(o);return this.compileAndRun(a,[e,t])},n.prototype.depthwiseConv2DDerFilter=function(e,t,o){var a=new p8(o);return this.compileAndRun(a,[e,t])},n.prototype.conv3d=function(e,t,o){var a=new v8(o);return this.compileAndRun(a,[e,t])},n.prototype.conv3dDerInput=function(e,t,o){var a=new f8(o);return this.compileAndRun(a,[e,t])},n.prototype.conv3dDerFilter=function(e,t,o){var a=new h8(o);return this.compileAndRun(a,[e,t])},n.prototype.maxPool=function(e,t){var o=new Vn(t,"max",!1);return this.compileAndRun(o,[e])},n.prototype.avgPool=function(e,t){var o=new Vn(t,"avg",!1);return this.compileAndRun(o,[e],"float32")},n.prototype.maxPoolBackprop=function(e,t,o,a){var i=new Vn(a,"max",!0),s=this.compileAndRun(i,[t]),u=new Q8(a),c=this.compileAndRun(u,[e,s],t.dtype);return s.dispose(),c},n.prototype.avgPoolBackprop=function(e,t,o){var a=new Q7(o);return this.compileAndRun(a,[e],t.dtype)},n.prototype.cast=function(e,t){return or(e,t,this)},n.prototype.unstack=function(e,t){for(var o=e.shape[t],a=new Array(e.rank-1),i=0,s=0;s<e.rank;s++)s!==t&&(a[i++]=e.shape[s]);var u=new Array(e.rank).fill(0),c=e.shape.slice();c[t]=1;var l=new Array(o);for(s=0;s<l.length;s++)u[t]=s,l[s]=this.slice(e,u,c).reshape(a);return l},n.prototype.avgPool3d=function(e,t){var o=new Un(t,"avg",!1);return this.compileAndRun(o,[e],"float32")},n.prototype.avgPool3dBackprop=function(e,t,o){var a=new Z7(o);return this.compileAndRun(a,[e],t.dtype)},n.prototype.maxPool3d=function(e,t){var o=new Un(t,"max",!1);return this.compileAndRun(o,[e],"float32")},n.prototype.maxPool3dBackprop=function(e,t,o,a){var i=new Un(a,"max",!0),s=this.compileAndRun(i,[t]),u=new Z8(a),c=this.compileAndRun(u,[e,s],t.dtype);return s.dispose(),c},n.prototype.reshape=function(e,t){var o=this.texData.get(e.dataId);if(o.isPacked&&!Et(e.shape,t)&&(o.texture===null||!Et(o.shape,t))){var a=this.packedReshape(e,t);return M.makeTensorFromDataId(a.dataId,a.shape,a.dtype)}return f2(e,t)},n.prototype.resizeBilinear=function(e,t,o,a){var i=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new c9(e.shape,t,o,a):new u9(e.shape,t,o,a);return this.compileAndRun(i,[e],"float32")},n.prototype.resizeBilinearBackprop=function(e,t,o){var a=new s9(e,t,o);return this.compileAndRun(a,[e])},n.prototype.resizeNearestNeighbor=function(e,t,o,a){var i=new h9(e.shape,t,o,a);return this.compileAndRun(i,[e])},n.prototype.resizeNearestNeighborBackprop=function(e,t,o){var a=new l9(e,t,o);return this.compileAndRun(a,[e])},n.prototype.multinomial=function(e,t,o,a){var i=t?e:q1(e),s=i.shape[0],u=i.shape[1],c=new e9(s,u,o),l=c.getCustomSetupFunc(a);return this.compileAndRun(c,[i],"int32",l)},n.prototype.oneHot=function(e,t,o,a){var i=new t9(e.size,t,o,a);return this.compileAndRun(i,[e])},n.prototype.diag=function(e){var t=new w8(e.size);return this.compileAndRun(t,[e])},n.prototype.nonMaxSuppression=function(e,t,o,a,i){return Vt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),T2(e.dataSync(),t.dataSync(),o,a,i)},n.prototype.cropAndResize=function(e,t,o,a,i,s){var u=new m8(e.shape,t.shape,a,i,s);return this.compileAndRun(u,[e,t,o],"float32")},n.prototype.depthToSpace=function(e,t,o){E(t>1,function(){return"blockSize should be > 1 for depthToSpace, but was: "+t});var a=e.shape[0],i=o==="NHWC"?e.shape[1]:e.shape[2],s=o==="NHWC"?e.shape[2]:e.shape[3],u=o==="NHWC"?e.shape[3]:e.shape[1],c=i*t,l=s*t,h=u/(t*t),f=new b8(o==="NHWC"?[a,c,l,h]:[a,h,c,l],t,o);return this.compileAndRun(f,[e])},n.prototype.split=function(e,t,o){return sr(e,t,o)},n.prototype.scatterND=function(e,t,o){var a=qt(0,e,o),i=a.sliceRank,s=a.numUpdates,u=a.sliceSize,c=a.strides,l=a.outputSize,h=[l/u,u],f=e.reshape([s,i]),p=t.reshape([s,u]);if(l===0)return f2(H0([]),o);var d=j(0),m=new Y3(s,i,f.rank,p.rank,c,h);return this.compileAndRun(m,[p,f,d]).reshape(o)},n.prototype.sparseToDense=function(e,t,o,a){var i=qt(0,e,o),s=i.sliceRank,u=i.numUpdates,c=i.strides,l=i.outputSize,h=new Y3(u,s,e.rank,t.rank,c,[l,1]);return this.compileAndRun(h,[t,e,a]).reshape(o)},n.prototype.fft=function(e){return this.fftImpl(e,!1)},n.prototype.ifft=function(e){return this.fftImpl(e,!0)},n.prototype.fftImpl=function(e,t){var o=this.texData.get(e.dataId),a=new K3(R8,e.shape,t),i=new K3(k8,e.shape,t),s=[this.makeComplexComponentTensorInfo(e,o.complexTensors.real),this.makeComplexComponentTensorInfo(e,o.complexTensors.imag)],u=this.compileAndRun(a,s),c=this.compileAndRun(i,s),l=this.complex(u,c).as2D(e.shape[0],e.shape[1]);return u.dispose(),c.dispose(),l},n.prototype.gatherND=function(e,t){var o=t.shape,a=o[o.length-1],i=J4(e,t),s=i[0],u=i[1],c=i[2],l=i[3],h=t.reshape([u,a]),f=e.reshape([e.size/c,c]),p=new D8(a,l,[u,c]);return this.compileAndRun(p,[f,h]).reshape(s)},n.prototype.fill=function(e,t,o){if((o=o||ht(t))==="string"){var a=Ot(o,$(e));return a.fill(t),M.makeTensor(a,e,o,this)}var i=new S8(e,t),s=i.getCustomSetupFunc(t);return this.compileAndRun(i,[],o,s)},n.prototype.onesLike=function(e){if(e.dtype==="string")throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)},n.prototype.zerosLike=function(e){return this.fill(e.shape,e.dtype==="string"?"":0,e.dtype)},n.prototype.linspace=function(e,t,o){return ar(e,t,o)},n.prototype.makeTensorInfo=function(e,t){var o=this.write(null,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}},n.prototype.makeOutput=function(e,t){var o=this.makeTensorInfo(e,t).dataId;return M.makeTensorFromDataId(o,e,t,this)},n.prototype.unpackTensor=function(e){var t=new F9(e.shape);return this.runWebGLProgram(t,[e],e.dtype)},n.prototype.packTensor=function(e){var t=new n9(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)},n.prototype.packedReshape=function(e,t){var o=[Lt(e.shape)].concat(Wt(e.shape)),a={dtype:e.dtype,shape:o,dataId:e.dataId},i=[Lt(t)].concat(Wt(t)),s=new i9(i,o),u=this.runWebGLProgram(s,[a],e.dtype,null,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}},n.prototype.decode=function(e){var t,o=this.texData.get(e),a=o.isPacked,i=o.shape,s=o.dtype,u=Pn(i);return t=a?new x8(u):new y8(u),{dtype:s,shape:i,dataId:this.runWebGLProgram(t,[{shape:u,dtype:s,dataId:e}],s,null,!0).dataId}},n.prototype.runWebGLProgram=function(e,t,o,a,i){var s=this;i===void 0&&(i=!1);var u=this.makeTensorInfo(e.outputShape,o),c=this.texData.get(u.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===ot.DENSE){var l=Ze(e.outputShape);c.texShape=l.map(function(b){return 2*b})}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),$(u.shape)===0)return c.values=nt(u.dtype,0),u;var h=[],f=t.map(function(b){if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var y=s.texData.get(b.dataId);if(y.texture==null){if(!e.packedInputs&&$(b.shape)<=P().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=b.shape)}else if(!!y.isPacked!=!!e.packedInputs)b=y.isPacked?s.unpackTensor(b):s.packTensor(b),h.push(b),y=s.texData.get(b.dataId);else if(y.isPacked&&!Et(y.shape,b.shape)){var w=b,C=b.shape;b.shape=y.shape,b=s.packedReshape(b,C),h.push(b),y=s.texData.get(b.dataId),w.shape=C}return s.uploadToGPU(b.dataId),{shape:b.shape,texData:y,isUniform:!1}});this.uploadToGPU(u.dataId);var p,d={shape:u.shape,texData:c,isUniform:!1},m=function(b,y,w){var C="";y.concat(w).forEach(function(I){var R=I.texData!=null&&I.texData.slice!=null&&I.texData.slice.flatOffset>0,T=I.isUniform?"uniform":I.texData.texShape;C+=I.shape+"_"+T+"_"+R});var S=b.userCode,k=b.constructor.name;return k+="_"+C+"_"+S}(e,f,d),v=this.getAndSaveBinary(m,function(){return function(b,y,w,C){var S=y.userCode,k=w.map(function(W,z){var H={logicalShape:W.shape,texShape:W.isUniform?null:W.texData.texShape,isUniform:W.isUniform,isPacked:!W.isUniform&&W.texData.isPacked,flatOffset:null};return W.texData!=null&&W.texData.slice!=null&&W.texData.slice.flatOffset>0&&(H.flatOffset=W.texData.slice.flatOffset),{name:y.variableNames[z],shapeInfo:H}}),I=k.map(function(W){return W.shapeInfo}),R={logicalShape:C.shape,texShape:C.texData.texShape,isUniform:!1,isPacked:C.texData.isPacked,flatOffset:null},T=q7(k,R,S,y.packedInputs),D=b.createProgram(T),L=null,O=b.getUniformLocation(D,"NAN",!1);P().getNumber("WEBGL_VERSION")===1&&(L=b.getUniformLocation(D,"INFINITY",!1));for(var B={},U=0;U<y.variableNames.length;U++){var V=y.variableNames[U];B[V]=b.getUniformLocation(D,V,!1),B["offset"+V]=b.getUniformLocation(D,"offset"+V,!1)}return{program:y,source:T,webGLProgram:D,uniformLocations:B,inShapeInfos:I,outShapeInfo:R,infLoc:L,nanLoc:O}}(s.gpgpu,e,f,d)}),g=this.activeTimers!=null;if(g&&(p=this.startTimer()),function(b,y,w,C,S){X3(y.inShapeInfos,w),X3([y.outShapeInfo],[C]);var k=C.texData.texture,I=C.texData.texShape;C.texData.isPacked?b.setOutputPackedMatrixTexture(k,I[0],I[1]):b.setOutputMatrixTexture(k,I[0],I[1]),b.setProgram(y.webGLProgram),P().getNumber("WEBGL_VERSION")===1&&y.infLoc!==null&&b.gl.uniform1f(y.infLoc,1/0),y.nanLoc!==null&&b.gl.uniform1f(y.nanLoc,NaN),w.forEach(function(R,T){var D=y.program.variableNames[T],L=y.uniformLocations[D],O=y.uniformLocations["offset"+D];if(L!=null)if(R.isUniform)if($(R.shape)<2)b.gl.uniform1f(L,R.uniformValues[0]);else{var B=R.uniformValues;B instanceof Float32Array||(B=new Float32Array(B)),b.gl.uniform1fv(L,B)}else R.texData.slice!=null&&O!=null&&b.gl.uniform1i(O,R.texData.slice.flatOffset),b.setInputMatrixTexture(R.texData.texture,L,T)}),S!=null&&S(b,y.webGLProgram),b.executeProgram()}(this.gpgpu,v,f,d,a),h.forEach(function(b){return s.disposeData(b.dataId)}),g&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!P().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&i===!1){var x=this.unpackTensor(u);return this.disposeData(u.dataId),x}return u},n.prototype.compileAndRun=function(e,t,o,a,i){i===void 0&&(i=!1),o=o||t[0].dtype;var s=this.runWebGLProgram(e,t,o,a,i);return M.makeTensorFromDataId(s.dataId,s.shape,s.dtype)},n.prototype.getAndSaveBinary=function(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]},n.prototype.getTextureManager=function(){return this.textureManager},n.prototype.dispose=function(){var e=this;this.disposed||(P().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(function(t){e.gpgpu.deleteProgram(e.binaryCache[t].webGLProgram),delete e.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},n.prototype.floatPrecision=function(){var e=this;return this.floatPrecisionValue==null&&(this.floatPrecisionValue=K(function(){if(!P().get("WEBGL_RENDER_FLOAT32_ENABLED")){var t=P().getBool("DEBUG");P().set("DEBUG",!1);var o=e.abs(j(1e-8)).dataSync()[0];if(P().set("DEBUG",t),o>0)return 32}return 16})),this.floatPrecisionValue},n.prototype.epsilon=function(){return this.floatPrecision()===32?1e-7:1e-4},n.prototype.uploadToGPU=function(e){var t,o=this.texData.get(e),a=o.shape,i=o.dtype,s=o.values,u=o.texture,c=o.usage,l=o.isPacked;if(u==null){var h,f=this.activeTimers!=null;f&&(h=R1());var p=o.texShape;if(p==null&&(p=G6(a,l),o.texShape=p),s!=null){var d=Pn(a),m=void 0,v=p[1],g=p[0],x=s instanceof Uint8Array;l?(v=(t=pt(p[0],p[1]))[0],g=t[1],m=new I8(d,[g,v],x)):m=new E8(d,[g,v],x);var b=this.makeTensorInfo([g,v],i);this.texData.get(b.dataId).usage=x?i1.PIXELS:i1.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),v,g,s);var y=this.runWebGLProgram(m,[b],i,null,!0),w=this.texData.get(y.dataId);o.texture=w.texture,o.texShape=w.texShape,o.isPacked=w.isPacked,o.usage=w.usage,this.disposeData(b.dataId),this.texData.delete(y.dataId),o.values=null,f&&(this.uploadWaitMs+=R1()-h)}else{var C=this.acquireTexture(p,c,i,l);o.texture=C}}},n.prototype.convertAndCacheOnCPU=function(e,t){var o=this.texData.get(e),a=o.dtype;return this.releaseGPUData(e),t!=null&&(o.values=function(i,s){if(s==="float32"||s==="complex64")return i;if(s==="int32"||s==="bool"){for(var u=s==="int32"?new Int32Array(i.length):new Uint8Array(i.length),c=0;c<u.length;++c)u[c]=Math.round(i[c]);return u}throw new Error("Unknown dtype "+s)}(t,a)),o.values},n.prototype.acquireTexture=function(e,t,o,a){if(this.numBytesInGPU+=this.computeBytes(e,o),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+i+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)},n.prototype.computeBytes=function(e,t){return e[0]*e[1]*N4(t)},n}(nr);V4()&&M.registerBackend("webgl",function(){return new O9},2);var B9=A({square_:function(r){var n=_(r,"x","square"),e=[n];return M.runKernelFunc(function(t,o){return o([n]),t.square(n)},{x:n},null,"Square",{},e,[])}}),it="SquaredDifference",wr=A({squaredDifference_:function(r,n){var e,t=_(r,"a","squaredDifference"),o=_(n,"b","squaredDifference");e=R0(t,o),t=e[0],o=e[1],l0(t.shape,o.shape);var a={a:t,b:o},i=[t,o];return M.runKernelFunc(function(s,u){var c=s.squaredDifference(t,o);return u([t,o]),c},a,function(s,u){var c=u[0],l=u[1],h=j(2);return{a:function(){return s.mul(c.sub(l).mul(h))},b:function(){return s.mul(l.sub(c).mul(h))}}},it,{},i,[])}}),L9=A({abs_:function(r){var n=_(r,"x","abs");return n.dtype==="complex64"?M.runKernelFunc(function(e){return e.complexAbs(n)},{$x:n}):M.runKernelFunc(function(e,t){var o=e.abs(n);return t([n]),o},{x:n},function(e,t){var o=t[0];return{x:function(){return e.mul(o.toFloat().step(-1))}}},"Abs")}}),W9=A({acos_:function(r){var n=_(r,"x","acos");return M.runKernelFunc(function(e,t){var o=e.acos(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.divStrict(j(1).sub(o.toFloat().square()).sqrt()).neg()}}})}}),V9=A({acosh_:function(r){var n=_(r,"x","acosh");return M.runKernelFunc(function(e,t){var o=e.acosh(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.divStrict(o.toFloat().square().sub(1).sqrt())}}})}}),U9=A({asin_:function(r){var n=_(r,"x","asin");return M.runKernelFunc(function(e,t){var o=e.asin(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.divStrict(j(1).sub(o.toFloat().square()).sqrt())}}})}}),G9=A({asinh_:function(r){var n=_(r,"x","asinh");return M.runKernelFunc(function(e,t){var o=e.asinh(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.divStrict(j(1).add(o.toFloat().square()).sqrt())}}})}}),z9=A({atan_:function(r){var n=_(r,"x","atan");return M.runKernelFunc(function(e,t){var o=e.atan(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.div(o.toFloat().square().add(1))}}})}}),H9=A({atanh_:function(r){var n=_(r,"x","atanh");return M.runKernelFunc(function(e,t){var o=e.atanh(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.div(j(1).sub(o.toFloat().square()))}}})}}),j9=A({ceil_:function(r){var n=_(r,"x","ceil");return M.runKernelFunc(function(e){return e.ceil(n)},{$x:n},function(e){return{$x:function(){return v0(e)}}})}}),L2=A({clipByValue_:function(r,n,e){var t=_(r,"x","clipByValue");E(n<=e,function(){return"Error in clip: min ("+n+") must be less than or equal to max ("+e+")."});var o=[t],a={min:n,max:e};return M.runKernelFunc(function(i,s){var u=i.clip(t,n,e);return s([t]),u},{x:t},function(i,s){var u=s[0];return{x:function(){return i.where(u.greaterEqual(n).logicalAnd(u.lessEqual(e)),v0(i))}}},"ClipByValue",a,o)}}),q9=A({cos_:function(r){var n=_(r,"x","cos"),e=[n];return M.runKernelFunc(function(t,o){var a=t.cos(n);return o([n]),a},{x:n},function(t,o){var a=o[0];return{x:function(){return a.toFloat().sin().neg().mul(t)}}},"Cos",{},e)}}),K9=A({cosh_:function(r){var n=_(r,"x","cosh");return M.runKernelFunc(function(e,t){var o=e.cosh(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return o.toFloat().sinh().mulStrict(e)}}})}}),X9=A({erf_:function(r){var n=_(r,"x","erf");return E(n.dtype==="int32"||n.dtype==="float32",function(){return"Input dtype must be `int32` or `float32`."}),n.dtype==="int32"&&(n=n.toFloat()),M.runKernelFunc(function(e,t){var o=e.erf(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.mul(o.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}})}}),d2=A({exp_:function(r){var n=_(r,"x","exp");return M.runKernelFunc(function(e,t){var o=e.exp(n);return t([o]),o},{x:n},function(e,t){return{x:function(){return e.mulStrict(t[0])}}},"Exp",{},[],[!0])}}),Y9=A({expm1_:function(r){var n=_(r,"x","expm1");return M.runKernelFunc(function(e,t){var o=e.expm1(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.mul(o.exp())}}})}}),$9=A({floor_:function(r){var n=_(r,"x","floor");return M.runKernelFunc(function(e){return e.floor(n)},{$x:n},function(e){return{$x:function(){return v0(e)}}})}}),J9=A({log_:function(r){var n=_(r,"x","log"),e=[n];return M.runKernelFunc(function(t,o){var a=t.log(n);return o([n]),a},{x:n},function(t,o){var a=o[0];return{x:function(){return t.div(a.toFloat())}}},"Log",{},e)}}),Q9=A({log1p_:function(r){var n=_(r,"x","log1p");return M.runKernelFunc(function(e,t){var o=e.log1p(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.div(o.add(1))}}})}}),Z9=A({logSigmoid_:function(r){var n=_(r,"x","logSigmoid");return M.runKernelFunc(function(e,t){var o=e.softplus(n.neg()).neg();return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.mul(o.neg().sigmoid())}}})}}),$t=A({neg_:function(r){var n=_(r,"x","neg"),e=[n];return M.runKernelFunc(function(t){return t.neg(n)},{x:n},function(t){return{x:function(){return t.neg()}}},"Neg",{},e)}}),eo=A({reciprocal_:function(r){var n=_(r,"x","reciprocal");return M.runKernelFunc(function(e,t){var o=e.reciprocal(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.div(o.square().neg())}}})}}),to=A({round_:function(r){var n=_(r,"x","round");return M.runKernelFunc(function(e){return e.round(n)},{$x:n},function(e){return{$x:function(){return v0(e)}}})}}),Cr=A({rsqrt_:function(r){var n=_(r,"x","rsqrt"),e=[n];return M.runKernelFunc(function(t,o){var a=t.rsqrt(n);return o([n]),a},{x:n},function(t,o){var a=o[0];return{x:function(){return t.div(a.pow(1.5).mul(2)).neg()}}},"Rsqrt",{},e)}}),_r=A({sigmoid_:function(r){var n=_(r,"x","sigmoid");return M.runKernelFunc(function(e,t){var o=e.sigmoid(n);return t([o]),o},{x:n},function(e,t){var o=t[0];return{x:function(){return e.mul(o.mul(j(1).sub(o)))}}},"Sigmoid")}}),no=A({sign_:function(r){var n=_(r,"x","sign");return M.runKernelFunc(function(e){return e.sign(n)},{$x:n},function(e){return{$x:function(){return v0(e)}}})}}),ro=A({isNaN_:function(r){var n=_(r,"x","isNaN");return M.runKernelFunc(function(e){return e.isNaN(n)},{$x:n},function(e){return{$x:function(){return v0(e)}}})}}),oo=A({isInf_:function(r){var n=_(r,"x","isInf");return M.runKernelFunc(function(e){return e.isInf(n)},{$x:n},function(e){return{$x:function(){return v0(e)}}})}}),ao=A({isFinite_:function(r){var n=_(r,"x","isFinite");return M.runKernelFunc(function(e){return e.isFinite(n)},{$x:n},function(e){return{$x:function(){return v0(e)}}})}}),io=A({sin_:function(r){var n=_(r,"x","sin"),e=[n];return M.runKernelFunc(function(t,o){var a=t.sin(n);return o([n]),a},{x:n},function(t,o){var a=o[0];return{x:function(){return a.toFloat().cos().mul(t)}}},"Sin",{},e)}}),so=A({sinh_:function(r){var n=_(r,"x","sinh");return M.runKernelFunc(function(e,t){var o=e.sinh(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return o.toFloat().cosh().mulStrict(e)}}})}}),uo=A({softplus_:function(r){var n=_(r,"x","softplus");return M.runKernelFunc(function(e,t){var o=e.softplus(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.mul(o.sigmoid())}}})}}),co=A({sqrt_:function(r){var n=_(r,"x","sqrt");return M.runKernelFunc(function(e,t){var o=e.sqrt(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.div(o.toFloat().sqrt().mul(2))}}})}}),lo=A({step_:function(r,n){n===void 0&&(n=0);var e=_(r,"x","step");return M.runKernelFunc(function(t){return t.step(e,n)},{$x:e},function(t){return{$x:function(){return v0(t)}}})}}),ho=A({tan_:function(r){var n=_(r,"x","tan");return M.runKernelFunc(function(e,t){var o=e.tan(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return e.div(o.cos().square())}}})}}),fo=A({tanh_:function(r){var n=_(r,"x","tanh");return M.runKernelFunc(function(e,t){var o=e.tanh(n);return t([o]),o},{x:n},function(e,t){var o=t[0];return{x:function(){return j(1).sub(o.square()).mulStrict(e)}}},"Tanh",{},null,[!0])}});function Er(r,n,e,t,o,a){var i,s,u=_(r,"x","batchNorm"),c=_(n,"mean","batchNorm"),l=_(e,"variance","batchNorm");return o!=null&&(i=_(o,"scale","batchNorm")),t!=null&&(s=_(t,"offset","batchNorm")),E(u.rank===2,function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."}),E(c.rank===2||c.rank===1,function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank "+c.rank+"."}),E(l.rank===2||l.rank===1,function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank "+l.rank+"."}),i!=null&&E(i.rank===2||i.rank===1,function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank "+i.rank+"."}),s!=null&&E(s.rank===2||s.rank===1,function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank "+s.rank+"."}),vt(u,c,l,s,i,a)}function Ir(r,n,e,t,o,a){var i,s,u=_(r,"x","batchNorm"),c=_(n,"mean","batchNorm"),l=_(e,"variance","batchNorm");return o!=null&&(i=_(o,"scale","batchNorm")),t!=null&&(s=_(t,"offset","batchNorm")),E(u.rank===3,function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."}),E(c.rank===3||c.rank===1,function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank "+c.rank+"."}),E(l.rank===3||l.rank===1,function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank "+l.rank+"."}),i!=null&&E(i.rank===3||i.rank===1,function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank "+i.rank+"."}),s!=null&&E(s.rank===3||s.rank===1,function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank "+s.rank+"."}),vt(u,c,l,s,i,a)}function Rr(r,n,e,t,o,a){var i,s,u=_(r,"x","batchNorm"),c=_(n,"mean","batchNorm"),l=_(e,"variance","batchNorm");return o!=null&&(i=_(o,"scale","batchNorm")),t!=null&&(s=_(t,"offset","batchNorm")),E(u.rank===4,function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+u.rank+"."}),E(c.rank===4||c.rank===1,function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank "+c.rank+"."}),E(l.rank===4||l.rank===1,function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank "+l.rank+"."}),i!=null&&E(i.rank===4||i.rank===1,function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank "+i.rank+"."}),s!=null&&E(s.rank===4||s.rank===1,function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank "+s.rank+"."}),vt(u,c,l,s,i,a)}function vt(r,n,e,t,o,a){a==null&&(a=.001);var i,s,u,c=_(r,"x","batchNorm"),l=_(n,"mean","batchNorm"),h=_(e,"variance","batchNorm");o!=null&&(i=_(o,"scale","batchNorm")),t!=null&&(s=_(t,"offset","batchNorm")),E(l.rank===h.rank,function(){return"Batch normalization gradient requires mean and variance to have equal ranks."}),E(s==null||l.rank===s.rank,function(){return"Batch normalization gradient requires mean and offset to have equal ranks."}),E(i==null||l.rank===i.rank,function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}),u=c.rank===0||c.rank===1?c.as4D(1,1,1,c.size):c.rank===2?c.as4D(1,1,c.shape[0],c.shape[1]):c.rank===3?c.as4D(1,c.shape[0],c.shape[1],c.shape[2]):c;var f=[c,l,h,i];return M.runKernelFunc(function(p,d){var m=p.batchNormalization(u,At(l),At(h),a,At(i),At(s));return d([c,l,h,i]),m},{x:c,mean:l,variance:h,scale:i,offset:s},function(p,d){var m=d,v=m[0],g=m[1],x=m[2],b=m[3],y=b??j(1),w=P0(g.shape,u.shape),C=[];if(g.rank===1){for(var S=0;S<u.shape.length-1;++S)C.push(u.shape[S]);C.push(1)}var k=v.sub(g),I=p.mul(y),R=Cr(x.add(j(a))),T=R.mul(R).mul(R).mul(j(-.5));return{x:function(){return g.rank===1?p.mul(Oe(R.as4D(1,1,1,g.shape[0]),C)).mul(y).reshape(v.shape):p.mul(R).mul(y).reshape(v.shape)},mean:function(){var D=R.mul(j(-1)).mul(I);return g.rank===1&&(D=D.sum(w)),D.reshape(g.shape)},variance:function(){var D=T.mul(k).mul(I);return g.rank===1&&(D=D.sum(w)),D.reshape(g.shape)},scale:function(){var D=k.mul(R),L=p.mul(D);return g.rank===1&&(L=L.sum(w)),L.reshape(g.shape)},offset:function(){var D=p;return g.rank===1&&(D=D.sum(w)),D.reshape(g.shape)}}},"BatchNormalization",{varianceEpsilon:a},f).reshape(c.shape)}function At(r){return r==null?null:r.rank===0?r.as1D():r.rank===1?r:r.rank===2?r.as4D(1,1,r.shape[0],r.shape[1]):r.rank===3?r.as4D(1,r.shape[0],r.shape[1],r.shape[2]):r}function un(){U4("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon")}var po=A({batchNormalization2d_:function(r,n,e,t,o,a){return t===void 0&&(t=.001),un(),Er(r,n,e,a,o,t)}}),vo=A({batchNormalization3d_:function(r,n,e,t,o,a){return t===void 0&&(t=.001),un(),Ir(r,n,e,a,o,t)}}),mo=A({batchNormalization4d_:function(r,n,e,t,o,a){return t===void 0&&(t=.001),un(),Rr(r,n,e,a,o,t)}}),go=A({batchNormalization_:function(r,n,e,t,o,a){return t===void 0&&(t=.001),un(),vt(r,n,e,a,o,t)}}),kr=A({batchNorm_:vt}),yo=A({batchNorm2d_:Er}),xo=A({batchNorm3d_:Ir}),bo=A({batchNorm4d_:Rr}),cn=A({logicalAnd_:function(r,n){var e=_(r,"a","logicalAnd","bool"),t=_(n,"b","logicalAnd","bool");return l0(e.shape,t.shape),M.runKernelFunc(function(o){return o.logicalAnd(e,t)},{a:e,b:t},null,"LogicalAnd")}}),wo=A({logicalNot_:function(r){var n=_(r,"x","logicalNot","bool");return M.runKernelFunc(function(e){return e.logicalNot(n)},{$x:n})}}),Sr=A({logicalOr_:function(r,n){var e=_(r,"a","logicalOr","bool"),t=_(n,"b","logicalOr","bool");return l0(e.shape,t.shape),M.runKernelFunc(function(o){return o.logicalOr(e,t)},{$a:e,$b:t})}}),Co=A({logicalXor_:function(r,n){var e=_(r,"a","logicalXor","bool"),t=_(n,"b","logicalXor","bool");return l0(e.shape,t.shape),Sr(r,n).logicalAnd(cn(r,n).logicalNot())}}),ye=A({where_:function(r,n,e){var t=_(n,"a","where"),o=_(e,"b","where"),a=_(r,"condition","where","bool");return y0(t.shape,o.shape,"Error in where: "),a.rank===1?E(a.shape[0]===t.shape[0],function(){return"The first dimension of `a` must match the size of `condition`."}):y0(a.shape,o.shape,"Error in where: "),M.runKernelFunc(function(i,s){var u=i.select(a,t,o);return s([a]),u},{$condition:a,$a:t,$b:o},function(i,s){var u=s[0];return{$condition:function(){return v0(u).toFloat()},$a:function(){return i.mul(u.cast(i.dtype))},$b:function(){return i.mul(u.logicalNot().cast(i.dtype))}}})}}),Ar=function(r){return X(this,void 0,void 0,function(){var n,e,t;return Y(this,function(o){switch(o.label){case 0:return[4,(n=_(r,"condition","whereAsync","bool")).data()];case 1:return e=o.sent(),t=F2(n.shape,e),r!==n&&n.dispose(),[2,t]}})})},u0=A({add_:function(r,n){var e,t=_(r,"a","add"),o=_(n,"b","add");e=R0(t,o),t=e[0],o=e[1];var a=l0(t.shape,o.shape);return M.runKernelFunc(function(i){return i.add(t,o)},{a:t,b:o},function(i){return{a:function(){var s=i,u=P0(t.shape,a);return u.length>0&&(s=s.sum(u)),s.reshape(t.shape)},b:function(){var s=i,u=P0(o.shape,a);return u.length>0&&(s=s.sum(u)),s.reshape(o.shape)}}},"Add")}}),_o=A({addN_:function(r){E(Array.isArray(r),function(){return"The argument passed to tf.addN() must be a list of tensors"}),E(r.length>=1,function(){return"Must pass at least one tensor to tf.addN(), but got "+r.length});var n=r.map(function(o,a){return _(o,"tensors"+a,"addN")}),e=n[0];n.forEach(function(o){if(o.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),n.forEach(function(o){if(!W0(o.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});var t=n;return M.runKernelFunc(function(o){return o.addN(n)},t,function(o){var a={};return n.forEach(function(i,s){a[s]=function(){return o.clone()}}),a},"AddN")}}),Eo=A({addStrict_:function(r,n){var e=_(r,"a","addStrict"),t=_(n,"b","addStrict");return y0(e.shape,t.shape,"Error in addStrict: "),e.add(t)}}),Io=A({atan2_:function(r,n){var e,t=_(r,"a","atan2"),o=_(n,"b","atan2");e=R0(t,o),t=e[0],o=e[1];var a=l0(t.shape,o.shape);return M.runKernelFunc(function(i,s){var u=i.atan2(t,o);return s([t,o]),u},{$a:t,$b:o},function(i,s){var u=s[0],c=s[1];return{$a:function(){var l=u0(u.square(),c.square()),h=i.mul(c.div(l)),f=P0(u.shape,a);return f.length>0&&(h=h.sum(f)),h.reshape(u.shape)},$b:function(){var l=u0(u.square(),c.square()),h=$t(i.mul(u.div(l))),f=P0(c.shape,a);return f.length>0&&(h=h.sum(f)),h.reshape(c.shape)}}})}}),m1=A({div_:function(r,n){var e,t=_(r,"a","div"),o=_(n,"b","div");if(e=R0(t,o),t=e[0],o=e[1],t.dtype==="int32"&&o.dtype==="int32")return Dr(t,o);var a=l0(t.shape,o.shape);return M.runKernelFunc(function(i,s){var u=i.realDivide(t,o);return s([t,o]),u},{a:t,b:o},function(i,s){var u=s[0],c=s[1];return{a:function(){var l=i.div(c.toFloat()),h=P0(u.shape,a);return h.length>0?l.sum(h).reshape(u.shape):l},b:function(){var l=i.mul(u.toFloat()),h=P0(c.shape,a);h.length>0&&(l=l.sum(h).reshape(c.shape));var f=c.square();return l.div(f.toFloat()).neg()}}},"Div")}}),Ro=A({divNoNan_:function(r,n){var e,t=_(r,"a","div"),o=_(n,"b","div");t=(e=R0(t,o))[0],o=e[1];var a=m1(t,o),i=v0(a),s=o.equal(i);return ye(s,i,a)}}),ko=A({divStrict_:function(r,n){var e=_(r,"a","div"),t=_(n,"b","div");return y0(e.shape,t.shape,"Error in divideStrict: "),e.div(t)}}),Dr=A({floorDiv_:function(r,n){var e,t=_(r,"a","floorDiv"),o=_(n,"b","floorDiv");e=R0(t,o),t=e[0],o=e[1];var a=l0(t.shape,o.shape);return M.runKernelFunc(function(i,s){var u=i.floorDiv(t,o);return s([t,o]),u},{a:t,b:o},function(i,s){var u=s[0],c=s[1];return{a:function(){var l=i.div(c.toFloat()),h=P0(u.shape,a);return h.length>0?l.sum(h).reshape(u.shape):l},b:function(){var l=i.mul(u.toFloat()),h=P0(c.shape,a);h.length>0&&(l=l.sum(h).reshape(c.shape));var f=c.square();return l.div(f.toFloat()).neg()}}},"FloorDiv")}}),W2=A({maximum_:function(r,n){var e,t=_(r,"a","maximum"),o=_(n,"b","maximum");return e=R0(t,o),t=e[0],o=e[1],t.dtype==="bool"&&(t=t.toInt(),o=o.toInt()),l0(t.shape,o.shape),M.runKernelFunc(function(a,i){var s=a.maximum(t,o);return i([t,o]),s},{a:t,b:o},function(a,i){var s=i[0],u=i[1];return{a:function(){return a.mul(s.greaterEqual(u).toFloat())},b:function(){return a.mul(s.less(u).toFloat())}}},"Maximum")}}),So=A({maximumStrict_:function(r,n){var e=_(r,"a","maximumStrict"),t=_(n,"b","maximumStrict");return y0(e.shape,t.shape,"Error in maximumStrict: "),e.maximum(t)}}),Mr=A({minimum_:function(r,n){var e,t=_(r,"a","minimum"),o=_(n,"b","minimum");return e=R0(t,o),t=e[0],o=e[1],t.dtype==="bool"&&(t=t.toInt(),o=o.toInt()),l0(t.shape,o.shape),M.runKernelFunc(function(a,i){var s=a.minimum(t,o);return i([t,o]),s},{a:t,b:o},function(a,i){var s=i[0],u=i[1];return{a:function(){return a.mul(s.lessEqual(u).toFloat())},b:function(){return a.mul(s.greater(u).toFloat())}}},"Minimum")}}),Ao=A({minimumStrict_:function(r,n){var e=_(r,"a","minimumStrict"),t=_(n,"b","minimumStrict");return y0(e.shape,t.shape,"Error in minimumStrict: "),e.minimum(t)}}),Do=A({mod_:function(r,n){var e,t=_(r,"a","mod"),o=_(n,"b","mod");e=R0(t,o),t=e[0],o=e[1];var a=l0(t.shape,o.shape);return M.runKernelFunc(function(i,s){var u=i.mod(t,o);return s([t,o]),u},{$a:t,$b:o},function(i,s){var u=s[0],c=s[1];return{$a:function(){var l=P0(u.shape,a);return l.length>0?i.sum(l).reshape(u.shape):i},$b:function(){var l=i.mul(u.div(c).floor().neg()),h=P0(c.shape,a);return h.length>0?l.sum(h).reshape(c.shape):l}}})}}),Mo=A({modStrict_:function(r,n){var e=_(r,"a","modStrict"),t=_(n,"b","modStrict");return y0(e.shape,t.shape,"Error in modStrict: "),e.mod(t)}}),$0=A({mul_:function(r,n){var e,t=_(r,"a","mul"),o=_(n,"b","mul");e=R0(t,o),t=e[0],o=e[1];var a=l0(t.shape,o.shape);return M.runKernelFunc(function(i,s){var u=i.multiply(t,o);return s([t,o]),u},{a:t,b:o},function(i,s){var u=s[0],c=s[1];return{a:function(){var l=i.mul(c.toFloat()),h=P0(u.shape,a);return h.length>0?l.sum(h).reshape(u.shape):l},b:function(){var l=i.mul(u.toFloat()),h=P0(c.shape,a);return h.length>0?l.sum(h).reshape(c.shape):l}}},"Mul")}}),To=A({mulStrict_:function(r,n){var e=_(r,"a","mul"),t=_(n,"b","mul");return y0(e.shape,t.shape,"Error in multiplyStrict: "),e.mul(t)}}),Jt=A({pow_:function(r,n){var e,t=_(r,"base","pow"),o=_(n,"exp","pow");e=R0(t,o),t=e[0],o=e[1];var a=l0(t.shape,o.shape),i=[t,o];return M.runKernelFunc(function(s,u){var c=s.pow(t,o);return u([t,o,c]),c},{a:t,b:o},function(s,u){var c=u[0],l=u[1],h=u[2];return{a:function(){var f=l.toFloat(),p=s.mul(f.mul(c.pow(f.sub(j(1))))),d=P0(c.shape,a);return d.length>0&&(p=p.sum(d)),p.reshape(c.shape)},b:function(){var f=c.greater(0),p=c.log().where(f,v0(c)),d=s.mul(h.mul(p)),m=P0(l.shape,a);return m.length>0&&(d=d.sum(m)),d.reshape(l.shape)}}},"Pow",{},i,[!0])}}),No=A({powStrict_:function(r,n){return y0(r.shape,n.shape,"Error in powStrict: "),r.pow(n)}}),Fo=A({squaredDifferenceStrict_:function(r,n){var e=_(r,"a","squaredDifferenceStrict"),t=_(n,"b","squaredDifferenceStrict");return y0(e.shape,t.shape,"Error in squaredDifferenceStrict: "),e.squaredDifference(t)}}),O0=A({sub_:function(r,n){var e,t=_(r,"a","sub"),o=_(n,"b","sub");e=R0(t,o),t=e[0],o=e[1];var a=l0(t.shape,o.shape);return M.runKernelFunc(function(i){return i.subtract(t,o)},{a:t,b:o},function(i){return{a:function(){var s=i,u=P0(t.shape,a);return u.length>0&&(s=s.sum(u)),s.reshape(t.shape)},b:function(){var s=i,u=P0(o.shape,a);return u.length>0&&(s=s.sum(u)),s.neg().reshape(o.shape)}}},"Sub")}}),Po=A({subStrict_:function(r,n){var e=_(r,"a","subStrict"),t=_(n,"b","subStrict");return y0(e.shape,t.shape,"Error in subStrict: "),e.sub(t)}}),Tr=A({equal_:function(r,n){var e,t=_(r,"a","equal"),o=_(n,"b","equal");return e=R0(t,o),t=e[0],o=e[1],l0(t.shape,o.shape),M.runKernelFunc(function(a){return a.equal(t,o)},{$a:t,$b:o})}}),Oo=A({equalStrict_:function(r,n){var e=_(r,"a","equalStrict"),t=_(n,"b","equalStrict");return y0(e.shape,t.shape,"Error in equalStrict: "),e.equal(t)}}),Bo=A({greater_:function(r,n){var e,t=_(r,"a","greater"),o=_(n,"b","greater");return e=R0(t,o),t=e[0],o=e[1],l0(t.shape,o.shape),M.runKernelFunc(function(a){return a.greater(t,o)},{a:t,b:o},null,"Greater")}}),Nr=A({greaterEqual_:function(r,n){var e,t=_(r,"a","greaterEqual"),o=_(n,"b","greaterEqual");return e=R0(t,o),t=e[0],o=e[1],l0(t.shape,o.shape),M.runKernelFunc(function(a,i){var s=a.greaterEqual(t,o);return i([t,o]),s},{a:t,b:o},function(a,i){var s=i[0],u=i[1];return{a:function(){return v0(s)},b:function(){return v0(u)}}},"GreaterEqual")}}),Lo=A({greaterEqualStrict_:function(r,n){var e=_(r,"a","greaterEqualStrict"),t=_(n,"b","greaterEqualStrict");return y0(e.shape,t.shape,"Error in greaterEqualStrict: "),e.greaterEqual(t)}}),Wo=A({greaterStrict_:function(r,n){var e=_(r,"a","greaterStrict"),t=_(n,"b","greaterStrict");return y0(e.shape,t.shape,"Error in greaterStrict: "),e.greater(t)}}),Vo=A({less_:function(r,n){var e,t=_(r,"a","less"),o=_(n,"b","less");return e=R0(t,o),t=e[0],o=e[1],l0(t.shape,o.shape),M.runKernelFunc(function(a){return a.less(t,o)},{a:t,b:o},null,"Less")}}),Uo=A({lessEqual_:function(r,n){var e,t=_(r,"a","lessEqual"),o=_(n,"b","lessEqual");return e=R0(t,o),t=e[0],o=e[1],l0(t.shape,o.shape),M.runKernelFunc(function(a,i){var s=a.lessEqual(t,o);return i([t,o]),s},{a:t,b:o},null,"LessEqual")}}),Go=A({lessEqualStrict_:function(r,n){var e=_(r,"a","lessEqualStrict"),t=_(n,"b","lessEqualStrict");return y0(e.shape,t.shape,"Error in lessEqualStrict: "),e.lessEqual(t)}}),zo=A({lessStrict_:function(r,n){var e=_(r,"a","lessStrict"),t=_(n,"b","lessStrict");return y0(e.shape,t.shape,"Error in lessStrict: "),e.less(t)}}),Ho=A({notEqual_:function(r,n){var e,t=_(r,"a","notEqual"),o=_(n,"b","notEqual");return e=R0(t,o),t=e[0],o=e[1],l0(t.shape,o.shape),M.runKernelFunc(function(a){return a.notEqual(t,o)},{a:t,b:o},null,"NotEqual")}}),jo=A({notEqualStrict_:function(r,n){var e=_(r,"a","notEqualStrict"),t=_(n,"b","notEqualStrict");return y0(e.shape,t.shape,"Error in notEqualStrict: "),e.notEqual(t)}});function o4(r,n){for(var e=[],t=r;t<n;++t)e.push(t);return e}function a4(r){for(var n=[],e=0;e<r.length;++e)for(var t=0;t<r[e].length;++t)n.push(r[e][t]);return n}var V2=A({gather_:function(r,n,e){e===void 0&&(e=0);var t=_(r,"x","gather"),o=_(n,"indices","gather","int32");e=B0(e,t.shape)[0];var a=function(i,s,u){for(var c=i.shape[u],l=[],h=1,f=1,p=0;p<u;p++)l.push(i.shape[p]),h*=i.shape[p];for(p=0;p<s.rank;p++)l.push(s.shape[p]);for(p=u+1;p<i.rank;p++)l.push(i.shape[p]),f*=i.shape[p];return{batchSize:h,sliceSize:f,dimSize:c,outputShape:l}}(t,o,e);return M.runKernelFunc(function(i,s){var u=i.gather(t,o.flatten(),e);return s([o]),u},{x:t,indices:o},function(i,s){var u=s[0];return{x:function(){var c=t.shape,l=u.size,h=c.slice(0,e),f=h.length,p=c.slice(e,c.length).slice(1),d=p.length,m=o4(0,f),v=o4(f+1,f+1+d),g=a4([h,[l],p]),x=i.reshape(g),b=u.reshape([l]),y=a4([[f],m,v]),w=x.transpose(y),C=Fr(w,b,t.shape[e]),S=R2(y);return C=C.transpose(S)},indices:function(){return u}}},"Gather",{axis:e}).reshape(a.outputShape)}}),Fr=A({unsortedSegmentSum_:function(r,n,e){var t=_(r,"x","unsortedSegmentSum"),o=_(n,"segmentIds","unsortedSegmentSum","int32");return E(A0(e),function(){return"numSegments must be of dtype int"}),M.runKernelFunc(function(a,i){var s=a.unsortedSegmentSum(t,o,e);return i([o]),s},{$x:t},function(a,i){var s=i[0];return{$x:function(){return function(u,c){for(var l=W2(c,v0(c)),h=V2(u,l),f=Nr(c,j(0,"int32")),p=h.rank-f.rank,d=0;d<p;++d)f=h1(f,d+1);f=cn(f,Ke(h.shape,"bool"));var m=v0(h);return ye(f,h,m)}(a,s)}}})}}),qo=function(r,n,e){return X(this,void 0,void 0,function(){var t,o,a,i,s,u,c,l,h,f,p,d,m;return Y(this,function(v){switch(v.label){case 0:for(t=_(r,"tensor","boolMask"),o=_(n,"mask","boolMask","bool"),a=e??0,i=o.rank,s=t.shape,E(i>0,function(){return"mask cannot be scalar"}),y0(s.slice(a,a+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,"),u=1,c=a;c<a+i;c++)u*=s[c];return l=s.slice(0,a).concat([u],s.slice(a+i)),h=t.reshape(l),f=o.reshape([-1]),[4,Ar(f)];case 1:return p=v.sent(),d=p.squeeze([1]),m=V2(h,d,a),r!==t&&t.dispose(),n!==o&&o.dispose(),d.dispose(),h.dispose(),f.dispose(),p.dispose(),[2,m]}})})};function Pr(r,n,e,t,o,a,i){a===void 0&&(a="NHWC"),E(r.length===n.rank,function(){return"Length of inShape ("+r.length+") and rank of dy ("+n.rank+") must match"});var s=r,u=n,c=!1;n.rank===3&&(c=!0,u=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]),s=[1,r[0],r[1],r[2]]),E(s.length===4,function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+s.length+"."}),E(u.rank===4,function(){return"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank}),E(e.rank===4,function(){return"Error in conv2dDerInput: filter must be rank 4, but got rank "+e.rank});var l=a==="NHWC"?s[3]:s[1],h=a==="NHWC"?u.shape[3]:u.shape[1];E(l===e.shape[2],function(){return"Error in conv2dDerInput: depth of input ("+l+") must match input depth for filter "+e.shape[2]+"."}),E(h===e.shape[3],function(){return"Error in conv2dDerInput: depth of output ("+h+") must match output depth for filter "+e.shape[3]+"."}),i!=null&&E(A0(o),function(){return"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+o+"."});var f=M2(a),p=we(s,e.shape,t,1,o,i,!1,f),d=M.runKernelFunc(function(m,v){var g=m.conv2dDerInput(u,e,p);return v([e,u]),g},{dy4D:u,filter:e},function(m,v){var g=v[0],x=v[1];return{dy4D:function(){return d1(m,g,t,o,a,1,i)},filter:function(){return U2(m,x,g.shape,t,o,a,i)}}});return c?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}function zn(r){var n=function(a){return typeof a=="number"?[a,a,a]:a.length===2?[a[0],a[1],1]:a}(r),e=n[0],t=n[1],o=n[2];return e===1&&t===1&&o===1}function Or(r,n,e,t,o){E(r.length===n.rank,function(){return"Length of inShape ("+r.length+") and rank of dy ("+n.rank+") must match"});var a=r,i=n,s=!1;n.rank===4&&(s=!0,i=n.as5D(1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]),a=[1,r[0],r[1],r[2],r[3]]);var u=a[4],c=i.shape[4];E(a.length===5,function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."}),E(i.rank===5,function(){return"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank}),E(e.rank===5,function(){return"Error in conv3dDerInput: filter must be rank 5, but got rank "+e.rank}),E(u===e.shape[3],function(){return"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+e.shape[3]+"."}),E(c===e.shape[4],function(){return"Error in conv3dDerInput: depth of output ("+c+") must match output depth for filter "+e.shape[4]+"."});var l=Xt(a,e.shape,t,1,o),h=M.runKernelFunc(function(f){return f.conv3dDerInput(i,e,l)},{dy5D:i});return s?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var Ko=A({conv1d_:function(r,n,e,t,o,a,i){o===void 0&&(o="NWC"),a===void 0&&(a=1);var s=_(r,"x","conv1d"),u=_(n,"filter","conv1d"),c=s,l=!1;s.rank===2&&(l=!0,c=s.as3D(1,s.shape[0],s.shape[1])),E(c.rank===3,function(){return"Error in conv1d: input must be rank 3, but got rank "+c.rank+"."}),E(u.rank===3,function(){return"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."}),i!=null&&E(A0(t),function(){return"Error in conv1d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+t+"."}),E(c.shape[2]===u.shape[1],function(){return"Error in conv1d: depth of input ("+c.shape[2]+") must match input depth for filter "+u.shape[1]+"."}),E(n1(e,a),function(){return"Error in conv1D: Either stride or dilation must be 1. Got stride "+e+" and dilation '"+a+"'"}),E(o==="NWC",function(){return"Error in conv1d: got dataFormat of "+o+" but only NWC is currently supported."});var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),f=c.as4D(c.shape[0],1,c.shape[1],c.shape[2]),p=d1(f,h,[1,e],t,"NHWC",[1,a],i);return l?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])}}),d1=A({conv2d_:function(r,n,e,t,o,a,i){o===void 0&&(o="NHWC"),a===void 0&&(a=[1,1]);var s=_(r,"x","conv2d"),u=_(n,"filter","conv2d"),c=s,l=!1;s.rank===3&&(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),E(c.rank===4,function(){return"Error in conv2d: input must be rank 4, but got rank "+c.rank+"."}),E(u.rank===4,function(){return"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."}),i!=null&&E(A0(t),function(){return"Error in conv2d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+t+"."});var h=o==="NHWC"?c.shape[3]:c.shape[1];E(h===u.shape[2],function(){return"Error in conv2d: depth of input ("+h+") must match input depth for filter "+u.shape[2]+"."}),E(n1(e,a),function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+e+" and dilations '"+a+"'"});var f=M2(o),p=we(c.shape,u.shape,e,a,t,i,!1,f),d=[u,c],m=M.runKernelFunc(function(v,g){var x=v.conv2d(c,u,p);return g([u,c]),x},{x:c,filter:u},function(v,g){var x=g,b=x[0],y=x[1];return E(je(a),function(){return"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+a+"'"}),{x:function(){return Br(y.shape,v,b,e,t,o)},filter:function(){return U2(y,v,b.shape,e,t,o)}}},"Conv2D",p,d);return l?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),Xo=A({conv3d_:function(r,n,e,t,o,a){o===void 0&&(o="NDHWC"),a===void 0&&(a=[1,1,1]);var i=_(r,"x","conv3d"),s=_(n,"filter","conv3d"),u=i,c=!1;i.rank===4&&(c=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),E(u.rank===5,function(){return"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."}),E(s.rank===5,function(){return"Error in conv3d: filter must be rank 5, but got rank "+s.rank+"."}),E(u.shape[4]===s.shape[3],function(){return"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+s.shape[3]+"."}),E(function(f,p){return zn(f)||zn(p)}(e,a),function(){return"Error in conv3D: Either strides or dilations must be 1. Got strides "+e+" and dilations '"+a+"'"}),E(o==="NDHWC",function(){return"Error in conv3d: got dataFormat of "+o+" but only NDHWC is currently supported."});var l=Xt(u.shape,s.shape,e,a,t),h=M.runKernelFunc(function(f,p){var d=f.conv3d(u,s,l);return p([u,s]),d},{x:u,$filter:s},function(f,p){E(zn(a),function(){return"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+a+"'"});var d=p[0],m=p[1];return{x:function(){return Or(d.shape,f,m,e,t)},$filter:function(){return function(v,g,x,b,y){var w=v;v.rank===4&&(w=v.as5D(1,v.shape[0],v.shape[1],v.shape[2],v.shape[3]));var C=g;C.rank===4&&(C=g.as5D(1,g.shape[0],g.shape[1],g.shape[2],g.shape[3])),E(w.rank===5,function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+w.shape+"."}),E(C.rank===5,function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+C.shape+"."}),E(x.length===5,function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+x+"."}),E(w.shape[4]===x[3],function(){return"Error in conv3dDerFilter: depth of input "+w.shape[4]+") must match input depth in filter ("+x[3]+"."}),E(C.shape[4]===x[4],function(){return"Error in conv3dDerFilter: depth of dy ("+C.shape[4]+") must match output depth for filter ("+x[4]+")."});var S=Xt(w.shape,x,b,1,y);return M.runKernelFunc(function(k){return k.conv3dDerFilter(w,C,S)},{x5D:w,dy5D:C})}(d,f,m.shape,e,t)}}});return c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),U2=A({conv2dDerFilter_:function(r,n,e,t,o,a,i){a===void 0&&(a="NHWC");var s=r;r.rank===3&&(s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var u=n;u.rank===3&&(u=n.as4D(1,n.shape[0],n.shape[1],n.shape[2])),E(s.rank===4,function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+s.shape+"."}),E(u.rank===4,function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."}),E(e.length===4,function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+e+"."});var c=a==="NHWC"?s.shape[3]:s.shape[1],l=a==="NHWC"?u.shape[3]:u.shape[1];E(c===e[2],function(){return"Error in conv2dDerFilter: depth of input "+c+") must match input depth in filter ("+e[2]+"."}),E(l===e[3],function(){return"Error in conv2dDerFilter: depth of dy ("+l+") must match output depth for filter ("+e[3]+")."}),i!=null&&E(A0(o),function(){return"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+o+"."});var h=M2(a),f=we(s.shape,e,t,1,o,i,!1,h);return M.runKernelFunc(function(p){return p.conv2dDerFilter(s,u,f)},{x4D:s,dy4D:u})}}),Br=A({conv2dDerInput_:Pr}),ln=A({depthwiseConv2d_:function(r,n,e,t,o,a,i){a===void 0&&(a=[1,1]);var s=_(r,"x","depthwiseConv2d"),u=_(n,"filter","depthwiseConv2d"),c=s,l=!1;s.rank===3&&(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),E(c.rank===4,function(){return"Error in depthwiseConv2d: input must be rank 4, but got rank "+c.rank+"."}),E(u.rank===4,function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."}),E(c.shape[3]===u.shape[2],function(){return"Error in depthwiseConv2d: number of input channels ("+c.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."}),a==null&&(a=[1,1]),E(n1(e,a),function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+e+" and dilations '"+a+"'"}),i!=null&&E(A0(t),function(){return"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+t+"."});var h=we(c.shape,u.shape,e,a,t,i,!0),f=[c,u],p=M.runKernelFunc(function(d,m){var v=d.depthwiseConv2D(c,u,h);return m([c,u]),v},{x:c,filter:u},function(d,m){E(je(a),function(){return"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+a+"'"});var v=m[0],g=m[1];return{x:function(){return Lr(v.shape,d,g,h)},filter:function(){return Wr(v,d,g.shape,h)}}},"DepthwiseConv2dNative",h,f);return l?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}}),Lr=A({depthwiseConv2dDerInput_:function(r,n,e,t){var o=n,a=!1;n.rank===3&&(a=!0,o=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]));var i=M.runKernelFunc(function(s){return s.depthwiseConv2DDerInput(o,e,t)},{dy4D:o});return a?i.as3D(i.shape[1],i.shape[2],i.shape[3]):i}}),Wr=A({depthwiseConv2dDerFilter_:function(r,n,e,t){var o=r;r.rank===3&&(o=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var a=n;return a.rank===3&&(a=n.as4D(1,n.shape[0],n.shape[1],n.shape[2])),M.runKernelFunc(function(i){return i.depthwiseConv2DDerFilter(o,a,t)},{x4D:o,dy4D:a})}}),G2=A({separableConv2d_:function(r,n,e,t,o,a,i){a===void 0&&(a=[1,1]),i===void 0&&(i="NHWC");var s=_(r,"x","separableConv2d"),u=_(n,"depthwiseFilter","separableConv2d"),c=_(e,"pointwiseFilter","separableConv2d"),l=s,h=!1;if(s.rank===3&&(h=!0,l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(l.rank===4,function(){return"Error in separableConv2d: input must be rank 4, but got rank "+l.rank+"."}),E(u.rank===4,function(){return"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."}),E(c.rank===4,function(){return"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."}),E(c.shape[0]===1,function(){return"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+c.shape[0]+"."}),E(c.shape[1]===1,function(){return"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got "+c.shape[1]+"."});var f=u.shape[2],p=u.shape[3];E(c.shape[2]===f*p,function(){return"Error in separableConv2d: the third dimension of pointwise filter must be "+f*p+", but got "+c.shape[2]+"."});var d=ln(l,u,t,o,i,a),m=d1(d,c,1,"valid",i);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),Yo=A({conv2dTranspose_:function(r,n,e,t,o,a){return Pr(e,_(r,"x","conv2dTranspose"),_(n,"filter","conv2dTranspose"),t,o,"NHWC",a)}}),$o=A({conv3dTranspose_:function(r,n,e,t,o){return Or(e,_(r,"x","conv3dTranspose"),_(n,"filter","conv3dTranspose"),t,o)}}),hn=A({matMul_:function(r,n,e,t){var o;e===void 0&&(e=!1),t===void 0&&(t=!1);var a=_(r,"a","matMul"),i=_(n,"b","matMul");o=R0(a,i),a=o[0],i=o[1];var s=e?a.shape[a.rank-2]:a.shape[a.rank-1],u=t?i.shape[i.rank-1]:i.shape[i.rank-2],c=e?a.shape[a.rank-1]:a.shape[a.rank-2],l=t?i.shape[i.rank-2]:i.shape[i.rank-1],h=a.shape.slice(0,-2),f=i.shape.slice(0,-2),p=$(h),d=$(f);E(a.rank>=2&&i.rank>=2&&a.rank===i.rank,function(){return"Error in matMul: inputs must have the same rank of at least 2, got ranks "+a.rank+" and "+i.rank+"."}),E(W0(h,f),function(){return"Error in matMul: outer dimensions ("+h+") and ("+f+") of Tensors with shapes "+a.shape+" and "+i.shape+" must match."}),E(s===u,function(){return"Error in matMul: inner shapes ("+s+") and ("+u+") of Tensors with shapes "+a.shape+" and "+i.shape+" and transposeA="+e+" and transposeB="+t+" must match."});var m=a.shape.slice(0,-2).concat([c,l]),v=e?a.as3D(p,s,c):a.as3D(p,c,s),g=t?i.as3D(d,l,u):i.as3D(d,u,l),x={transposeA:e,transposeB:t};return M.runKernelFunc(function(b,y){var w=b.batchMatMul(v,g,e,t);return y([v,g]),w},{a:v,b:g},function(b,y){var w=y,C=w[0],S=w[1];return e||t?!e&&t?{a:function(){return b.matMul(S,!1,!1)},b:function(){return b.matMul(C,!0,!1)}}:e&&!t?{a:function(){return S.matMul(b,!1,!0)},b:function(){return C.matMul(b,!1,!1)}}:{a:function(){return S.matMul(b,!0,!0)},b:function(){return b.matMul(C,!0,!0)}}:{a:function(){return b.matMul(S,!1,!0)},b:function(){return C.matMul(b,!0,!1)}}},"BatchMatMul",x).reshape(m)}}),Jo=A({dot_:function(r,n){var e=_(r,"t1","dot"),t=_(n,"t2","dot");E(!(e.rank!==1&&e.rank!==2||t.rank!==1&&t.rank!==2),function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+e.rank+" and "+t.rank+"."});var o=e.rank===1?e.size:e.shape[1],a=t.rank===1?t.size:t.shape[0];return E(o===a,function(){return"Error in dot: inner dimensions of inputs must match, but got "+o+" and "+a+"."}),e.rank===1&&t.rank===1?e.as2D(1,-1).matMul(t.as2D(-1,1)).asScalar():e.rank===1&&t.rank===2?e.as2D(1,-1).matMul(t.as2D(t.shape[0],t.shape[1])).as1D():e.rank===2&&t.rank===1?e.matMul(t.as2D(-1,1)).as1D():e.matMul(t.as2D(t.shape[0],t.shape[1]))}}),Qo=A({outerProduct_:function(r,n){var e=_(r,"v1","outerProduct"),t=_(n,"v2","outerProduct");return E(e.rank===1&&t.rank===1,function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+e.rank+" and "+t.rank+"."}),e.as2D(-1,1).matMul(t.as2D(1,-1))}}),mt=A({reverse_:function(r,n){var e=_(r,"x","reverse");if(e.rank===0)return e.clone();var t=B0(n,e.shape);return M.runKernelFunc(function(o){return o.reverse(e,t)},{$x:e},function(o){return{$x:function(){return o.reverse(t)}}}).reshapeAs(e)}}),Zo=A({reverse1d_:function(r){var n=_(r,"x","reverse");return E(n.rank===1,function(){return"Error in reverse1D: x must be rank 1 but got rank "+n.rank+"."}),mt(n,0)}}),ea=A({reverse2d_:function(r,n){var e=_(r,"x","reverse");return E(e.rank===2,function(){return"Error in reverse2D: x must be rank 2 but got rank "+e.rank+"."}),mt(e,n)}}),ta=A({reverse3d_:function(r,n){var e=_(r,"x","reverse");return E(e.rank===3,function(){return"Error in reverse3D: x must be rank 3 but got rank "+e.rank+"."}),mt(e,n)}}),na=A({reverse4d_:function(r,n){var e=_(r,"x","reverse");return E(e.rank===4,function(){return"Error in reverse4D: x must be rank 4 but got rank "+e.rank+"."}),mt(e,n)}});function Vr(r,n,e,t,o,a){var i=_(r,"x","maxPool"),s=i,u=!1;i.rank===3&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),t==null&&(t=[1,1]),E(s.rank===4,function(){return"Error in maxPool: input must be rank 4 but got rank "+s.rank+"."}),E(n1(e,t),function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+e+" and dilations '"+t+"'"}),a!=null&&E(A0(o),function(){return"Error in maxPool: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+o+"."});var c=at(s.shape,n,e,t,o,a);if(c.filterWidth===1&&c.filterHeight===1&&W0(c.inShape,c.outShape))return i.clone();var l=[s],h=M.runKernelFunc(function(f,p){var d=f.maxPool(s,c);return p([s,d]),d},{x:s},function(f,p){var d=p[0],m=p[1];return{x:function(){return function(v,g,x,b,y,w,C,S){var k=_(v,"dy","maxPoolBackprop"),I=_(g,"input","maxPoolBackprop"),R=_(x,"output","maxPoolBackprop");E(I.rank===k.rank,function(){return"Rank of input ("+I.rank+") does not match rank of dy ("+k.rank+")"}),w==null&&(w=[1,1]),E(n1(y,w),function(){return"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+y+" and dilations '"+w+"'"}),E(k.rank===4,function(){return"Error in maxPoolBackprop: dy must be rank 4 but got rank "+k.rank+"."}),E(I.rank===4,function(){return"Error in maxPoolBackprop: input must be rank 4 but got rank "+I.rank+"."}),S!=null&&E(A0(C),function(){return"Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode "+S+" but got pad "+C+"."});var T=at(I.shape,b,y,w,C,S);return M.runKernelFunc(function(D){return D.maxPoolBackprop(k,I,R,T)},{$dy:k,$input:I})}(f,d,m,n,e,t,o)}}},"MaxPool",c,l);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function Ur(r,n,e,t,o,a){var i=_(r,"x","avgPool","float32");t==null&&(t=[1,1]),E(n1(e,t),function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+e+" and dilations '"+t+"'"});var s=i,u=!1;i.rank===3&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),E(s.rank===4,function(){return"Error in avgPool: x must be rank 4 but got rank "+s.rank+"."}),a!=null&&E(A0(o),function(){return"Error in avgPool: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+o+"."});var c=at(s.shape,n,e,t,o,a);if(c.filterWidth===1&&c.filterHeight===1&&W0(c.inShape,c.outShape))return i.clone();var l=M.runKernelFunc(function(h){return h.avgPool(s,c)},{x:s},function(h){return{x:function(){return function(f,p,d,m,v,g){var x=_(f,"dy","avgPoolBackprop"),b=_(p,"input","avgPoolBackprop");E(b.rank===x.rank,function(){return"Rank of input ("+b.rank+") does not match rank of dy ("+x.rank+")"}),v==null&&(v=[1,1]),E(n1(m,v),function(){return"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+m+" and dilations '"+v+"'"});var y=b,w=x,C=!1;b.rank===3&&(C=!0,y=b.as4D(1,b.shape[0],b.shape[1],b.shape[2]),w=x.as4D(1,x.shape[0],x.shape[1],x.shape[2])),E(w.rank===4,function(){return"Error in avgPoolBackprop: dy must be rank 4 but got rank "+w.rank+"."}),E(y.rank===4,function(){return"Error in avgPoolBackprop: input must be rank 4 but got rank "+y.rank+"."});var S=at(y.shape,d,m,v,g),k=M.runKernelFunc(function(I){return I.avgPoolBackprop(w,y,S)},{dy4D:w,input4D:y});return C?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}(h,s,n,e,t,o)}}},"AvgPool",c);return l=l.cast(i.dtype),u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}var L0=A({maxPool_:function(r,n,e,t,o){return Vr(r,n,e,1,t,o)}}),gt=A({avgPool_:function(r,n,e,t,o){return Ur(r,n,e,1,t,o)}}),ra=A({pool_:function(r,n,e,t,o,a){o==null&&(o=[1,1]),a==null&&(a=1),t===0&&(t="valid");var i=_(r,"x","maxPool"),s=i,u=!1;i.rank===3&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),E(n1(a,o),function(){return"Error in pool: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+o+"'"});var c,l=at(s.shape,n,a,o,t),h=[l.dilationHeight,l.dilationWidth];c=t==="same"?function(y,w){var C=y.map(function(I,R){return I+(I-1)*(w[R]-1)}).map(function(I){return I-1}),S=C.map(function(I){return Math.floor(I/2)}),k=C.map(function(I,R){return I-S[R]});return C.map(function(I,R){return[S[R],k[R]]})}([l.filterHeight,l.filterWidth],h):[[0,0],[0,0]];var f=h[0]===1&&h[1]===1,p=function(y,w,C){var S=C.map(function(O){return O[0]}),k=C.map(function(O){return O[1]}),I=y.concat(S,k),R=w.map(function(O,B){return(O-I[B]%O)%O}),T=k.map(function(O,B){return O+R[B]}),D=w.map(function(O,B){return[S[B],T[B]]}),L=w.map(function(O,B){return[0,R[B]]});return[D,L]}([l.inHeight,l.inWidth],h,c),d=p[0],m=p[1],v=f?t:"valid",g=f?s:K4(s,h,d),x=(e==="avg"?function(){return Ur(g,n,a,1,v)}:function(){return Vr(g,n,a,1,v)})(),b=f?x:H4(x,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),oa=A({maxPool3d_:function(r,n,e,t,o,a,i){a===void 0&&(a="NDHWC");var s=_(r,"x","maxPool3d"),u=s,c=!1;s.rank===4&&(c=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),i==null&&(i=[1,1,1]),E(u.rank===5,function(){return"Error in maxPool3d: x must be rank 5 but got rank "+u.rank+"."}),E(a==="NDHWC",function(){return"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a}),E(n1(e,i),function(){return"Error in maxPool3d: Either strides or dilations must be 1. Got strides "+e+" and dilations '"+i+"'"}),o!=null&&E(A0(t),function(){return"Error in maxPool3d: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+t+"."});var l=Kt(u.shape,n,e,i,t,o,a),h=M.runKernelFunc(function(f,p){var d=f.maxPool3d(u,l);return p([u,d]),d},{x:u},function(f,p){var d=p[0],m=p[1];return{x:function(){return function(v,g,x,b,y,w,C,S){var k=_(v,"dy","maxPool3dBackprop"),I=_(g,"input","maxPool3dBackprop"),R=_(x,"output","maxPool3dBackprop"),T=k,D=I,L=R,O=!1;I.rank===4&&(O=!0,T=k.as5D(1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]),D=I.as5D(1,I.shape[0],I.shape[1],I.shape[2],I.shape[3]),L=R.as5D(1,R.shape[0],R.shape[1],R.shape[2],R.shape[3])),E(T.rank===5,function(){return"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+T.rank+"."}),E(D.rank===5,function(){return"Error in maxPool3dBackprop: input must be rank 5 but got rank "+D.rank+"."}),E(L.rank===5,function(){return"Error in maxPool3dBackprop: output must be rank 5 but got rank "+L.rank+"."}),w==null&&(w=[1,1,1]),E(n1(y,w),function(){return"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides "+y+" and dilations '"+w+"'"}),S!=null&&E(A0(C),function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+S+" but got pad "+C+"."});var B=Kt(D.shape,b,y,w,C,S),U=M.runKernelFunc(function(V){return V.maxPool3dBackprop(T,D,L,B)},{dy5D:T,input5D:D});return O?U.as4D(U.shape[1],U.shape[2],U.shape[3],U.shape[4]):U}(f,d,m,n,e,i,t,o)}}});return c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),aa=A({avgPool3d_:function(r,n,e,t,o,a,i){a===void 0&&(a="NDHWC");var s=_(r,"x","avgPool3d","float32"),u=s,c=!1;s.rank===4&&(c=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),i==null&&(i=[1,1,1]),E(u.rank===5,function(){return"Error in avgPool3d: x must be rank 5 but got rank "+u.rank+"."}),E(a==="NDHWC",function(){return"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a}),E(n1(e,i),function(){return"Error in avgPool3d: Either strides or dilations must be 1. Got strides "+e+" and dilations '"+i+"'"}),o!=null&&E(A0(t),function(){return"Error in avgPool3d: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+t+"."});var l=Kt(u.shape,n,e,i,t,o,a),h=M.runKernelFunc(function(f){return f.avgPool3d(u,l)},{x:u},function(f){return{x:function(){return function(p,d,m,v,g,x,b){var y=_(p,"dy","avgPool3dBackprop"),w=_(d,"input","avgPool3dBackprop"),C=y,S=w,k=!1;w.rank===4&&(k=!0,C=y.as5D(1,y.shape[0],y.shape[1],y.shape[2],y.shape[3]),S=w.as5D(1,w.shape[0],w.shape[1],w.shape[2],w.shape[3])),E(C.rank===5,function(){return"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+C.rank+"."}),E(S.rank===5,function(){return"Error in avgPool3dBackprop: input must be rank 5 but got rank "+S.rank+"."}),g==null&&(g=[1,1,1]),E(n1(v,g),function(){return"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides "+v+" and dilations '"+g+"'"}),b!=null&&E(A0(x),function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+b+" but got pad "+x+"."});var I=Kt(S.shape,m,v,g,x,b),R=M.runKernelFunc(function(T){return T.avgPool3dBackprop(C,S,I)},{dy5D:C,input5D:S});return k?R.as4D(R.shape[1],R.shape[2],R.shape[3],R.shape[4]):R}(f,u,n,e,i,t,o)}}});return h=h.cast(u.dtype),c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),N1=A({slice_:function(r,n,e){var t,o,a=_(r,"x","slice");if(a.rank===0)throw new Error("Slicing scalar is not possible");(t=typeof n=="number"?[n].concat(new Array(a.rank-1).fill(0)):n.length<a.rank?n.concat(new Array(a.rank-n.length).fill(0)):n.slice()).forEach(function(u){E(u!==-1,function(){return"slice() does not support negative begin indexing."})}),o=(o=e==null?new Array(a.rank).fill(-1):typeof e=="number"?[e].concat(new Array(a.rank-1).fill(-1)):e.length<a.rank?e.concat(new Array(a.rank-e.length).fill(-1)):e).map(function(u,c){return u>=0?u:(E(u===-1,function(){return"Negative size values should be exactly -1 but got "+u+" for the slice() size at index "+c+"."}),a.shape[c]-t[c])}),T7(a,t,o);var i=a.shape,s={begin:t,size:o};return M.runKernelFunc(function(u){return u.slice(a,t,o)},{x:a},function(u){for(var c=[],l=0;l<u.rank;l++)c.push([t[l],i[l]-t[l]-o[l]]);return{x:function(){return u.pad(c)}}},"Slice",s)}}),ia=A({slice1d_:function(r,n,e){var t=_(r,"x","slice1d");return E(t.rank===1,function(){return"slice1d expects a rank-1 tensor, but got a rank-"+t.rank+" tensor"}),N1(t,[n],[e])}}),sa=A({slice2d_:function(r,n,e){var t=_(r,"x","slice2d");return E(t.rank===2,function(){return"slice2d expects a rank-2 tensor, but got a rank-"+t.rank+" tensor"}),N1(t,n,e)}}),Gr=A({slice3d_:function(r,n,e){var t=_(r,"x","slice3d");return E(t.rank===3,function(){return"slice3d expects a rank-3 tensor, but got a rank-"+t.rank+" tensor"}),N1(t,n,e)}}),ua=A({slice4d_:function(r,n,e){var t=_(r,"x","slice4d");return E(t.rank===4,function(){return"slice4d expects a rank-4 tensor, but got a rank-"+t.rank+" tensor"}),N1(t,n,e)}});function zr(r,n,e,t,o){return n.rank<e.rank&&(n=n.reshape(t1(n.shape,t))),r.rank<e.rank&&(r=r.reshape(t1(r.shape,t))),{x:function(){var a=r.mul(e.equal(n).cast(r.dtype));return o==null?a:a.transpose(o)}}}var ca=A({all_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","all","bool"),o=B0(n,t.shape),a=o,i=O1(a,t.rank);i!=null&&(t=t.transpose(i),a=B1(a.length,t.rank));var s=M.runKernelFunc(function(c){return c.all(t,a)},{$x:t});if(e){var u=t1(s.shape,o);return s.reshape(u)}return s}}),la=A({any_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","any","bool"),o=B0(n,t.shape),a=o,i=O1(a,t.rank);i!=null&&(t=t.transpose(i),a=B1(a.length,t.rank));var s=M.runKernelFunc(function(c){return c.any(t,a)},{$x:t});if(e){var u=t1(s.shape,o);return s.reshape(u)}return s}}),ha=A({argMax_:function(r,n){n===void 0&&(n=0);var e=_(r,"x","argMax");n==null&&(n=0);var t=B0(n,e.shape),o=O1(t,e.rank);o!=null&&(e=e.transpose(o),t=B1(t.length,e.rank));var a={axis:t[0]},i=[e];return M.runKernelFunc(function(s,u){var c=s.argMax(e,t[0]);return u([e]),c},{x:e},function(s,u){var c=u[0];return{x:function(){return v0(c)}}},"ArgMax",a,i)}}),fa=A({argMin_:function(r,n){n===void 0&&(n=0);var e=_(r,"x","argMin");n==null&&(n=0);var t=B0(n,e.shape),o=O1(t,e.rank);return o!=null&&(e=e.transpose(o),t=B1(t.length,e.rank)),M.runKernelFunc(function(a,i){var s=a.argMin(e,t[0]);return i([e]),s},{$x:e},function(a,i){var s=i[0];return{$x:function(){return v0(s)}}})}}),pa=A({logSumExp_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","logSumExp"),o=B0(n,t.shape),a=t.max(o,!0),i=t.sub(a).exp().sum(o).log(),s=a.reshape(i.shape).add(i);if(e){var u=t1(s.shape,o);return s.reshape(u)}return s}}),fn=A({max_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","max"),o=t,a=B0(n,t.shape),i=a,s=O1(i,t.rank);s!=null&&(t=t.transpose(s),i=B1(i.length,t.rank));var u=[t],c=M.runKernelFunc(function(h,f){var p=h.max(t,i);return f([o,p]),p},{x:t},function(h,f){return zr(h,f[1],f[0],a,s)},"Max",{axes:i},u,[!0]);if(e){var l=t1(c.shape,a);c=c.reshape(l)}return c}}),da=A({mean_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","mean"),o=B0(n,t.shape),a=$(q0(t.shape,o)[1]);return sn(function(i){var s=j(a);return{value:(s.dtype===i.dtype?i:i.cast(s.dtype)).div(s).sum(n,e),gradFunc:function(u){var c=i.shape.slice();return o.forEach(function(l){c[l]=1}),u.reshape(c).mul(Ke(i.shape,"float32")).div(a)}}})(t)}}),va=A({min_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","min"),o=t,a=B0(n,t.shape),i=a,s=O1(i,t.rank);s!=null&&(t=t.transpose(s),i=B1(i.length,t.rank));var u=[t],c=M.runKernelFunc(function(h,f){var p=h.min(t,i);return f([o,p]),p},{x:t},function(h,f){return zr(h,f[1],f[0],a,s)},"Min",{axes:i},u,[!0]);if(e){var l=t1(c.shape,a);c=c.reshape(l)}return c}}),ma=A({moments_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=B0(n,(r=_(r,"x","moments")).shape),o=r.mean(t,e),a=o.shape;e||(a=t1(o.shape,t));var i=r.toFloat().sub(o.reshape(a)).square();return{mean:o,variance:i.mean(t,e)}}}),Hr=A({sum_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","sum");t.dtype==="bool"&&(t=t.toInt());var o=B0(n,t.shape);return sn(function(a){var i=O1(o,a.rank),s=o,u=a;i!=null&&(u=a.transpose(i),s=B1(s.length,a.rank));var c=function(p){var d=a.shape.slice();return o.forEach(function(m){d[m]=1}),p.reshape(d).mul(Ke(a.shape,"float32"))},l={axes:s},h=M.runKernelFunc(function(p){return p.sum(u,s)},{x:u},function(p){return{x:function(){return c(p)}}},"Sum",l);if(e){var f=t1(h.shape,o);h=h.reshape(f)}return{value:h,gradFunc:c}})(t)}}),ga=A({prod_:function(r,n,e){n===void 0&&(n=null),e===void 0&&(e=!1);var t=_(r,"x","prod");t.dtype==="bool"&&(t=t.toInt());var o=B0(n,t.shape),a=O1(o,t.rank),i=o,s=t;a!=null&&(s=t.transpose(a),i=B1(i.length,t.rank));var u=M.runKernelFunc(function(l){return l.prod(s,i)},{permutedX:s});if(e){var c=t1(u.shape,o);u=u.reshape(c)}return u}}),jr=A({elu_:function(r){var n=_(r,"x","elu");return M.runKernelFunc(function(e,t){var o=e.elu(n);return t([o]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){return M.runKernelFunc(function(a){return a.eluDer(e,o)},{dy:e,y:o})}}})}}),ya=A({leakyRelu_:function(r,n){n===void 0&&(n=.2);var e=_(r,"x","leakyRelu");return W2(j(n).mul(e),e)}}),qr=A({prelu_:function(r,n){var e=_(r,"x","prelu"),t=_(n,"alpha","prelu");return M.runKernelFunc(function(o,a){var i=o.prelu(e,t);return a([e,t]),i},{x:e,alpha:t},function(o,a){var i=a[0],s=a[1],u=i.greater(0);return{x:function(){return ye(u,o,o.mul(s))},alpha:function(){var c=ye(u,v0(o),o.mul(i)),l=P0(s.shape,o.shape);return l.length>0&&(c=c.sum(l)),c.reshape(s.shape)}}},"Prelu")}}),I0=A({relu_:function(r){var n=_(r,"x","relu");return n.dtype==="bool"?n.toInt():M.runKernelFunc(function(e,t){var o=e.relu(n);return t([n]),o},{x:n},function(e,t){var o=t[0];return{x:function(){return e.mulStrict(o.step().toFloat())}}},"Relu")}}),Kr=A({relu6_:function(r){var n=_(r,"x","relu6");return n.dtype==="bool"?n.toInt():M.runKernelFunc(function(e,t){var o=e.relu6(n);return t([n]),o},{x:n},function(e,t){var o=t[0],a=o.lessEqual(6).mul(o.step());return{x:function(){return e.mulStrict(a.toFloat())}}},"Relu6")}}),xa=A({selu_:function(r){var n=_(r,"x","selu");return M.runKernelFunc(function(e,t){var o=e.selu(n);return t([n]),o},{$x:n},function(e,t){var o=t[0];return{$x:function(){var a=o.greater(j(0)),i=j(O2),s=j(B2),u=e.mul(s),c=e.mul(i).mul(o.toFloat().exp());return ye(a,u,c)}}})}}),ie=A({transpose_:function(r,n){var e=_(r,"x","transpose");if(n==null&&(n=e.shape.map(function(o,a){return a}).reverse()),E(e.rank===n.length,function(){return"Error in transpose: rank of input "+e.rank+" must match length of perm "+n+"."}),n.forEach(function(o){E(o>=0&&o<e.rank,function(){return"All entries in 'perm' must be between 0 and "+(e.rank-1)+" but got "+n})}),e.rank<=1)return e.clone();var t={perm:n};return M.runKernelFunc(function(o){return o.transpose(e,n)},{x:e},function(o){var a=R2(n);return{x:function(){return o.transpose(a)}}},"Transpose",t)}}),ba=A({localResponseNormalization_:function(r,n,e,t,o){n===void 0&&(n=5),e===void 0&&(e=1),t===void 0&&(t=1),o===void 0&&(o=.5);var a=_(r,"x","localResponseNormalization");E(a.rank===4||a.rank===3,function(){return`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank `+a.rank+"."}),E(A0(n),function(){return"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius "+n+"."});var i=a,s=!1;a.rank===3&&(s=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2]));var u=M.runKernelFunc(function(c,l){var h=c.localResponseNormalization4D(i,n,e,t,o);return l([i,h]),h},{x4D:i},function(c,l){var h=l[0],f=l[1];return{x4D:function(){return M.runKernelFunc(function(p){return p.LRNGrad(c,h,f,n,e,t,o)},{})}}});return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Xr=A({norm_:function(r,n,e,t){n===void 0&&(n="euclidean"),e===void 0&&(e=null),t===void 0&&(t=!1);var o=function s(u,c,l){if(l===void 0&&(l=null),u.rank===0)return u.abs();if(u.rank!==1&&l===null)return s(u.reshape([-1]),c,l);if(u.rank===1||typeof l=="number"||Array.isArray(l)&&l.length===1){if(c===1)return u.abs().sum(l);if(c===1/0)return u.abs().max(l);if(c===-1/0)return u.abs().min(l);if(c==="euclidean"||c===2)return u.abs().pow(j(2,"int32")).sum(l).sqrt();throw new Error("Error in norm: invalid ord value: "+c)}if(Array.isArray(l)&&l.length===2){if(c===1)return u.abs().sum(l[0]).max(l[1]-1);if(c===1/0)return u.abs().sum(l[1]).max(l[0]);if(c===-1/0)return u.abs().sum(l[1]).min(l[0]);if(c==="fro"||c==="euclidean")return u.square().sum(l).sqrt();throw new Error("Error in norm: invalid ord value: "+c)}throw new Error("Error in norm: invalid axis: "+l)}(r=_(r,"x","norm"),n,e),a=o.shape;if(t){var i=B0(e,r.shape);a=t1(o.shape,i)}return o.reshape(a)}}),wa=A({basicLSTMCell_:function(r,n,e,t,o,a){var i=_(r,"forgetBias","basicLSTMCell"),s=_(n,"lstmKernel","basicLSTMCell"),u=_(e,"lstmBias","basicLSTMCell"),c=_(t,"data","basicLSTMCell"),l=_(o,"c","basicLSTMCell"),h=_(a,"h","basicLSTMCell"),f=c.concat(h,1).matMul(s).add(u),p=f.shape[0],d=f.shape[1]/4,m=[p,d],v=f.slice([0,0],m),g=f.slice([0,d],m),x=f.slice([0,2*d],m),b=f.slice([0,3*d],m),y=v.sigmoid().mulStrict(g.tanh()).addStrict(l.mulStrict(i.add(x).sigmoid())),w=y.tanh().mulStrict(b.sigmoid());return[y,w]}}),Ca=A({multiRNNCell_:function(r,n,e,t){for(var o=_(n,"data","multiRNNCell"),a=Ut(e,"c","multiRNNCell"),i=Ut(t,"h","multiRNNCell"),s=o,u=[],c=0;c<r.length;c++){var l=r[c](s,a[c],i[c]);u.push(l[0]),u.push(l[1]),s=l[1]}var h=[],f=[];for(c=0;c<u.length;c+=2)h.push(u[c]),f.push(u[c+1]);return[h,f]}}),_a=A({movingAverage_:function(r,n,e,t,o){o===void 0&&(o=!0);var a=_(r,"v","movingAverage"),i=_(n,"x","movingAverage"),s=_(e,"decay","movingAverage");x6(a,i),E(W0(a.shape,i.shape),function(){return"Shape mismatch in v and x"});var u=j(1),c=u.sub(s),l=i.sub(a).mul(c);if(o){E(t!=null,function(){return"When using zeroDebias: true, step is required."});var h=_(t,"step","movingAverage");l=l.div(u.sub(Jt(s,h)))}return a.add(l)}}),Ea=A({stridedSlice_:function(r,n,e,t,o,a,i,s,u){if(o===void 0&&(o=0),a===void 0&&(a=0),i===void 0&&(i=0),s===void 0&&(s=0),u===void 0&&(u=0),t==null&&(t=new Array(n.length)),i!==0)throw new Error("ellipsis mask is not yet supported");var c=_(r,"x","stridedSlice"),l=L3(s),h=c.shape.slice();l.forEach(function(v){n[v]=0,e[v]=1,h.splice(v,0,1)}),c=c.reshape(h);for(var f=0;f<c.rank;f++)n[f]=N7(o,n,t,c.shape,f),e[f]=F7(a,e,t,c.shape,f),t[f]=t[f]||1;var p=L3(u);p.forEach(function(v){e[v]=n[v]+1,t[v]=1});var d=D2(n,e,t),m=d.filter(function(v,g){return p.indexOf(g)===-1});return t.every(function(v){return v===1})?N1(c,n,d).reshape(m):M.runKernelFunc(function(v){return v.stridedSlice(c,n,e,t)},{$x:c}).reshape(m)}}),Ia=A({topk_:function(r,n,e){n===void 0&&(n=1),e===void 0&&(e=!0);var t=_(r,"x","topk");if(t.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");var o=t.shape[t.shape.length-1];if(n>o)throw new Error("'k' passed to topk() must be <= the last dimension ("+o+") but got "+n);var a=M.runKernelFunc(function(i){return i.topk(t,n,e)},{$x:t});return{values:a[0],indices:a[1]}}}),Ra=A({scatterND_:function(r,n,e){var t=_(r,"indices","scatterND","int32"),o=_(n,"updates","scatterND");return M7(o,t,e),M.runKernelFunc(function(a){return a.scatterND(t,o,e)},{indices:t,updates:o},null,"ScatterNd",{shape:e})}}),z2=A({fft_:function(r){E(r.dtype==="complex64",function(){return"The dtype for tf.spectral.fft() must be complex64 but got "+r.dtype+"."});var n=r.shape[r.shape.length-1],e=r.size/n,t=r.as2D(e,n);return M.runKernelFunc(function(o){return o.fft(t)},{input:r}).reshape(r.shape)}}),Qt=A({ifft_:function(r){E(r.dtype==="complex64",function(){return"The dtype for tf.spectral.ifft() must be complex64 but got "+r.dtype+"."});var n=r.shape[r.shape.length-1],e=r.size/n,t=r.as2D(e,n);return M.runKernelFunc(function(o){return o.ifft(t)},{input:r}).reshape(r.shape)}}),H2=A({rfft_:function(r,n){E(r.dtype==="float32",function(){return"The dtype for rfft() must be real value but got "+r.dtype});var e,t=r.shape[r.shape.length-1],o=r.size/t;if(n!=null&&n<t){var a=r.shape.map(function(g){return 0}),i=r.shape.map(function(g){return g});i[r.shape.length-1]=n,e=r.slice(a,i),t=n}else if(n!=null&&n>t){var s=r.shape.map(function(g){return g});s[r.shape.length-1]=n-t,e=r.concat(w0(s),r.shape.length-1),t=n}else e=r;var u=e.zerosLike(),c=G0(e,u).as2D(o,t),l=z2(c),h=Math.floor(t/2)+1,f=f1(l),p=S1(l),d=f.split([h,t-h],f.shape.length-1),m=p.split([h,t-h],p.shape.length-1),v=e.shape.slice();return v[e.shape.length-1]=h,G0(d[0],m[0]).reshape(v)}}),Yr=A({irfft_:function(r){var n=r.shape[r.shape.length-1],e=r.size/n;if(n<=2){var t=r.as2D(e,n),o=Qt(t);return f1(o)}var a=[e,2*(n-1)],i=f1(r).as2D(e,n),s=S1(r).as2D(e,n),u=i.slice([0,1],[e,n-2]).reverse(1),c=s.slice([0,1],[e,n-2]).reverse(1).mul(j(-1)),l=i.concat(u,1),h=s.concat(c,1);return t=G0(l,h).as2D(a[0],a[1]),o=Qt(t),f1(o)}}),ka=Object.freeze({fft:z2,ifft:Qt,rfft:H2,irfft:Yr}),Sa=A({sparseToDense_:function(r,n,e,t){t===void 0&&(t=0);var o=_(r,"sparseIndices","sparseToDense","int32"),a=_(n,"sparseValues","sparseToDense"),i=_(t,"defaultValue","sparseToDense",a.dtype);return function(s,u,c,l){if(s.dtype!=="int32")throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+s.dtype+".");if(s.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+s.shape+".");var h=s.rank>0?s.shape[0]:1,f=s.rank>1?s.shape[1]:1;if(c.length!==f)throw new Error("outputShape has incorrect number of elements:, "+c.length+", should be: "+f+".");var p=u.size;if(u.rank!==0&&(u.rank!==1||p!==h))throw new Error("sparseValues has incorrect shape "+u.shape+", should be [] or ["+h+"]");if(u.dtype!==l.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,a,e,i),M.runKernelFunc(function(s){return s.sparseToDense(o,a,e,i)},{$sparseIndices:o,$sparseValues:a,$defaultValue:i})}}),Aa=A({gatherND_:function(r,n){var e=_(n,"indices","gatherND","int32"),t=_(r,"x","gatherND");return M.runKernelFunc(function(o){return o.gatherND(t,e)},{x:t,indices:e},null,"GatherNd")}}),Da=A({diag_:function(r){var n=_(r,"x","diag").flatten(),e=r.shape.concat(r.shape);return M.runKernelFunc(function(t){return t.diag(n)},{$x:n}).reshape(e)}}),Ma=A({dropout_:function(r,n,e,t){var o=_(r,"x","dropout");if(E(o.dtype==="float32",function(){return"x has to be a floating point tensor since it's going to be scaled, but got a "+o.dtype+" tensor instead."}),E(n>=0&&n<1,function(){return"rate must be a float in the range [0, 1), but got "+n+"."}),n===0)return r instanceof E0?o.clone():o;var a=function(u,c){if(c==null)return u.shape.slice();if(W0(u.shape,c))return c;if(u.shape.length===c.length){for(var l=[],h=0;h<u.shape.length;h++)c[h]==null&&u.shape[h]!=null?l.push(u.shape[h]):l.push(c[h]);return l}return c}(o,e),i=1-n,s=q4(a,0,1,"float32",t).add(i).floor().div(i);return o.mul(s)}});function $r(r,n,e){for(var t=1-r%2,o=new Float32Array(r),a=0;a<r;++a){var i=2*Math.PI*a/(r+t-1);o[a]=n-e*Math.cos(i)}return M0(o,"float32")}var j2=A({hannWindow_:function(r){return $r(r,.5,.5)}}),Jr=A({hammingWindow_:function(r){return $r(r,.54,.46)}}),q2=A({frame_:function(r,n,e,t,o){t===void 0&&(t=!1),o===void 0&&(o=0);for(var a=0,i=[];a+n<=r.size;)i.push(N1(r,a,n)),a+=e;if(t)for(;a<r.size;){var s=a+n-r.size,u=N0([N1(r,a,n-s),T1([s],o)]);i.push(u),a+=e}return i.length===0?re([],[0,n]):N0(i).as2D(i.length,n)}}),Qr=A({stft_:function(r,n,e,t,o){var a;o===void 0&&(o=j2),t==null&&(a=n,t=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));for(var i=q2(r,n,e),s=$0(i,o(n)),u=[],c=0;c<i.shape[0];c++)u.push(H2(s.slice([c,0],[1,n]),t));return N0(u)}}),Ta=Object.freeze({hannWindow:j2,hammingWindow:Jr,frame:q2,stft:Qr}),Y0,Na=function(r,n,e){return e===void 0&&(e=1),X(this,void 0,void 0,function(){var t,o,a,i,s,u,c,l,h,f,p,d,m,v;return Y(this,function(g){switch(g.label){case 0:return t=_(r,"predictions","inTopK"),o=_(n,"targets","inTopK"),E(t.rank>1,function(){return"inTopK() expects the predictions to be of rank 2 or higher, but got "+t.rank}),E(t.rank-1===o.rank,function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+t.rank+" and targets rank "+o.rank}),y0(t.shape.slice(0,t.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),a=t.shape[t.shape.length-1],E(e>0&&e<=a,function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last dimension ("+a+"), but got "+e}),[4,t.data()];case 1:return i=g.sent(),[4,o.data()];case 2:for(s=g.sent(),u=[i.length/a,a],l=u[1],h=nt("bool",c=u[0]),f=0;f<c;f++){for(p=f*l,d=i.subarray(p,p+l),m=[],v=0;v<d.length;v++)m.push({value:d[v],index:v});for(m.sort(function(x,b){return b.value-x.value}),h[f]=0,v=0;v<e;v++)if(m[v].index===s[f]){h[f]=1;break}}return r!==t&&t.dispose(),n!==o&&o.dispose(),[2,H0(h,o.shape,"bool")]}})})};(function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Y0||(Y0={}));var Fa=A({absoluteDifference_:function(r,n,e,t){t===void 0&&(t=Y0.SUM_BY_NONZERO_WEIGHTS);var o=_(r,"labels","absoluteDifference"),a=_(n,"predictions","absoluteDifference"),i=null;e!=null&&(i=_(e,"weights","absoluteDifference")),y0(o.shape,a.shape,"Error in absoluteDifference: ");var s=o.sub(a).abs();return K1(s,i,t)}}),K1=A({computeWeightedLoss_:function(r,n,e){e===void 0&&(e=Y0.SUM_BY_NONZERO_WEIGHTS);var t=_(r,"losses","computeWeightedLoss"),o=null;n!=null&&(o=_(n,"weights","computeWeightedLoss"));var a=o==null?t:t.mul(o);if(e===Y0.NONE)return a;if(e===Y0.SUM)return a.sum();if(e===Y0.MEAN){if(o==null)return a.mean();var i=t.size/o.size,s=a.sum().div(o.sum());return i>1?s.div(j(i)):s}if(e===Y0.SUM_BY_NONZERO_WEIGHTS){if(o==null)return a.sum().div(j(t.size));var u=o.mul(Ke(t.shape)).notEqual(j(0)).sum().toFloat();return a.sum().div(u)}throw Error("Unknown reduction: "+e)}}),Pa=A({cosineDistance_:function(r,n,e,t,o){o===void 0&&(o=Y0.SUM_BY_NONZERO_WEIGHTS);var a=_(r,"labels","cosineDistance"),i=_(n,"predictions","cosineDistance"),s=null;t!=null&&(s=_(t,"weights","cosineDistance")),y0(a.shape,i.shape,"Error in cosineDistance: ");var u=j(1).sub(a.mul(i).sum(e,!0));return K1(u,s,o)}}),Oa=A({hingeLoss_:function(r,n,e,t){t===void 0&&(t=Y0.SUM_BY_NONZERO_WEIGHTS);var o=_(r,"labels","hingeLoss"),a=_(n,"predictions","hingeLoss"),i=null;e!=null&&(i=_(e,"weights","hingeLoss")),y0(o.shape,a.shape,"Error in hingeLoss: ");var s=j(1);o=j(2).mul(o).sub(s);var u=s.sub(o.mul(a)).relu();return K1(u,i,t)}}),Ba=A({huberLoss_:function(r,n,e,t,o){t===void 0&&(t=1),o===void 0&&(o=Y0.SUM_BY_NONZERO_WEIGHTS);var a=_(r,"labels","huberLoss"),i=_(n,"predictions","huberLoss"),s=null;e!=null&&(s=_(e,"weights","huberLoss")),y0(a.shape,i.shape,"Error in huberLoss: ");var u=j(t),c=i.sub(a).abs(),l=Mr(c,u),h=c.sub(l),f=j(.5).mul(l.square()).add(u.mul(h));return K1(f,s,o)}}),La=A({logLoss_:function(r,n,e,t,o){t===void 0&&(t=1e-7),o===void 0&&(o=Y0.SUM_BY_NONZERO_WEIGHTS);var a=_(r,"labels","logLoss"),i=_(n,"predictions","logLoss"),s=null;e!=null&&(s=_(e,"weights","logLoss")),y0(a.shape,i.shape,"Error in logLoss: ");var u=j(1),c=j(t),l=a.mul(i.add(c).log()).neg().sub(u.sub(a).mul(u.sub(i).add(c).log()));return K1(l,s,o)}}),Wa=A({meanSquaredError_:function(r,n,e,t){t===void 0&&(t=Y0.SUM_BY_NONZERO_WEIGHTS);var o=_(r,"labels","meanSquaredError"),a=_(n,"predictions","meanSquaredError"),i=null;e!=null&&(i=_(e,"weights","meanSquaredError")),y0(o.shape,a.shape,"Error in meanSquaredError: ");var s=o.squaredDifference(a);return K1(s,i,t)}}),Va=A({sigmoidCrossEntropy_:function(r,n,e,t,o){t===void 0&&(t=0),o===void 0&&(o=Y0.SUM_BY_NONZERO_WEIGHTS);var a=_(r,"multiClassLabels","sigmoidCrossEntropy"),i=_(n,"logits","sigmoidCrossEntropy"),s=null;if(e!=null&&(s=_(e,"weights","sigmoidCrossEntropy")),y0(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),t>0){var u=j(t),c=j(1),l=j(.5);a=a.mul(c.sub(u)).add(l.mul(u))}var h=function(f,p){var d=_(f,"labels","sigmoidCrossEntropyWithLogits"),m=_(p,"logits","sigmoidCrossEntropyWithLogits");y0(d.shape,m.shape,"Error in sigmoidCrossEntropyWithLogits: ");var v=m.relu(),g=m.mul(d),x=m.abs().neg().exp().log1p();return v.sub(g).add(x)}(a,i);return K1(h,s,o)}}),Ua=A({softmaxCrossEntropy_:function(r,n,e,t,o){t===void 0&&(t=0),o===void 0&&(o=Y0.SUM_BY_NONZERO_WEIGHTS);var a=_(r,"onehotLabels","softmaxCrossEntropy"),i=_(n,"logits","softmaxCrossEntropy"),s=null;if(e!=null&&(s=_(e,"weights","softmaxCrossEntropy")),y0(a.shape,i.shape,"Error in softmaxCrossEntropy: "),t>0){var u=j(t),c=j(1),l=j(a.shape[1]);a=a.mul(c.sub(u)).add(u.div(l))}var h=function(f,p,d){if(d===void 0&&(d=-1),d===-1&&(d=p.rank-1),d!==p.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+p.rank+" and dim was "+d);return sn(function(m,v,g){var x=v.logSumExp([d],!0),b=v.toFloat().sub(x);return g([m,b]),{value:b.mul(m).neg().sum([d]),gradFunc:function(y,w){var C=w[0],S=w[1],k=t1(y.shape,[d]);return[y.reshape(k).mul(C.toFloat().sub(S.exp())),y.reshape(k).mul(S.exp().sub(C.toFloat()))]}}})(f,p)}(a,i);return K1(h,s,o)}}),Ga=Object.freeze({get Reduction(){return Y0},absoluteDifference:Fa,computeWeightedLoss:K1,cosineDistance:Pa,hingeLoss:Oa,huberLoss:Ba,logLoss:La,meanSquaredError:Wa,sigmoidCrossEntropy:Va,softmaxCrossEntropy:Ua});function i4(r,n){return n===void 0&&(n=!1),M.tidy(function(){if(r.shape.length!==2)throw new Error("qr2d() requires a 2D Tensor, but got a "+r.shape.length+"D Tensor.");for(var e=r.shape[0],t=r.shape[1],o=j4(e),a=r.clone(),i=re([[1]],[1,1]),s=i.clone(),u=e>=t?t:e,c=function(h){var f,p=a,d=s,m=o;f=M.tidy(function(){var v=a.slice([h,h],[e-h,1]),g=v.norm(),x=a.slice([h,h],[1,1]),b=re([[-1]]).where(x.greater(0),re([[1]])),y=x.sub(b.mul(g)),w=v.div(y);s=w.shape[0]===1?i.clone():i.concat(w.slice([1,0],[w.shape[0]-1,w.shape[1]]),0);var C=b.matMul(y).div(g).neg(),S=a.slice([h,0],[e-h,t]),k=C.mul(s);if(h===0)a=S.sub(k.matMul(s.transpose().matMul(S)));else{var I=S.sub(k.matMul(s.transpose().matMul(S)));a=a.slice([0,0],[h,t]).concat(I,0)}var R=o.slice([0,h],[e,o.shape[1]-h]);if(h===0)o=R.sub(R.matMul(s).matMul(k.transpose()));else{var T=R.sub(R.matMul(s).matMul(k.transpose()));o=o.slice([0,0],[e,h]).concat(T,1)}return[s,a,o]}),s=f[0],a=f[1],o=f[2],e1([p,d,m])},l=0;l<u;++l)c(l);return!n&&e>t&&(o=o.slice([0,0],[e,t]),a=a.slice([0,0],[t,t])),[o,a]})}var za=A({bandPart_:function(r,n,e){if(n%1!=0)throw new Error("bandPart(): numLower must be an integer, got "+n+".");if(e%1!=0)throw new Error("bandPart(): numUpper must be an integer, got "+e+".");var t=_(r,"a","bandPart");if(t.rank<2)throw new Error("bandPart(): Rank must be at least 2, got "+t.rank+".");var o=t.shape,a=t.shape.slice(-2),i=a[0],s=a[1];if(!(n<=i))throw new Error("bandPart(): numLower ("+n+") must not be greater than the number of rows ("+i+").");if(!(e<=s))throw new Error("bandPart(): numUpper ("+e+") must not be greater than the number of columns ("+s+").");n<0&&(n=i),e<0&&(e=s);var u=Gt(0,i,1,"int32").reshape([-1,1]),c=Gt(0,s,1,"int32"),l=O0(u,c),h=cn(l.lessEqual(j(+n,"int32")),l.greaterEqual(j(-e,"int32"))),f=w0([i,s],t.dtype);return c1(F0(t.reshape([-1,i,s])).map(function(p){return ye(h,p,f)})).reshape(o)}}),Ha=A({gramSchmidt_:function(r){var n;if(Array.isArray(r)){n=!1,E(r!=null&&r.length>0,function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"});for(var e=r[0].shape[0],t=function(u){E(r[u].shape[0]===e,function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+r[u].shape[0]+" vs. "+e+")"})},o=1;o<r.length;++o)t(o)}else n=!0,r=S2(r,r.shape[0],0).map(function(u){return X4(u,[0])});E(r.length<=r[0].shape[0],function(){return"Gram-Schmidt: Number of vectors ("+r.length+") exceeds number of dimensions ("+r[0].shape[0]+")."});var a=[],i=r,s=function(u){a.push(M.tidy(function(){var c=i[u];if(u>0)for(var l=0;l<u;++l){var h=Hr(a[l].mulStrict(c)).mul(a[l]);c=c.sub(h)}return c.div(Xr(c,"euclidean"))}))};for(o=0;o<r.length;++o)s(o);return n?c1(a,0):a}}),ja=A({qr_:function(r,n){if(n===void 0&&(n=!1),r.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+r.rank);if(r.rank===2)return i4(r,n);var e=r.shape.slice(0,r.shape.length-2).reduce(function(i,s){return i*s}),t=F0(r.reshape([e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],a=[];return t.forEach(function(i){var s=i4(i,n),u=s[0],c=s[1];o.push(u),a.push(c)}),[c1(o,0).reshape(r.shape),c1(a,0).reshape(r.shape)]}}),qa=Object.freeze({bandPart:za,gramSchmidt:Ha,qr:ja});function pn(r,n,e,t,o,a){t==null&&(t=.5),o==null&&(o=Number.NEGATIVE_INFINITY),a==null&&(a=0);var i=r.shape[0];return e=Math.min(e,i),E(0<=t&&t<=1,function(){return"iouThreshold must be in [0, 1], but was '"+t+"'"}),E(r.rank===2,function(){return"boxes must be a 2D tensor, but was of rank '"+r.rank+"'"}),E(r.shape[1]===4,function(){return"boxes must have 4 columns, but 2nd dimension was "+r.shape[1]}),E(n.rank===1,function(){return"scores must be a 1D tensor"}),E(n.shape[0]===i,function(){return"scores has incompatible shape with boxes. Expected "+i+", but was "+n.shape[0]}),E(0<=a&&a<=1,function(){return"softNmsSigma must be in [0, 1], but was '"+a+"'"}),{maxOutputSize:e,iouThreshold:t,scoreThreshold:o,softNmsSigma:a}}var Ka=A({resizeBilinear_:function(r,n,e){e===void 0&&(e=!1);var t=_(r,"images","resizeBilinear");E(t.rank===3||t.rank===4,function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+t.rank+"."}),E(n.length===2,function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+n+"."});var o=t,a=!1;t.rank===3&&(a=!0,o=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var i=n[0],s=n[1],u=M.runKernelFunc(function(c,l){return l([o]),c.resizeBilinear(o,i,s,e)},{x:o},function(c,l){return{x:function(){return M.runKernelFunc(function(h){return h.resizeBilinearBackprop(c,l[0],e)},{})}}},"ResizeBilinear",{alignCorners:e,newHeight:i,newWidth:s});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Xa=A({resizeNearestNeighbor_:function(r,n,e){e===void 0&&(e=!1);var t=_(r,"images","resizeNearestNeighbor");E(t.rank===3||t.rank===4,function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+t.rank+"."}),E(n.length===2,function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+n+"."}),E(t.dtype==="float32"||t.dtype==="int32",function(){return"`images` must have `int32` or `float32` as dtype"});var o=t,a=!1;t.rank===3&&(a=!0,o=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var i=n[0],s=n[1],u=M.runKernelFunc(function(c,l){return l([o]),c.resizeNearestNeighbor(o,i,s,e)},{batchImages:o},function(c,l){return{batchImages:function(){return M.runKernelFunc(function(h){return h.resizeNearestNeighborBackprop(c,l[0],e)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Ya=A({nonMaxSuppression_:function(r,n,e,t,o){t===void 0&&(t=.5),o===void 0&&(o=Number.NEGATIVE_INFINITY);var a=_(r,"boxes","nonMaxSuppression"),i=_(n,"scores","nonMaxSuppression"),s=pn(a,i,e,t,o);e=s.maxOutputSize,t=s.iouThreshold,o=s.scoreThreshold;var u={maxOutputSize:e,iouThreshold:t,scoreThreshold:o};return M.runKernelFunc(function(c){return c.nonMaxSuppression(a,i,e,t,o)},{boxes:a,scores:i},null,"NonMaxSuppressionV3",u)}}),$a=function(r,n,e,t,o){return t===void 0&&(t=.5),o===void 0&&(o=Number.NEGATIVE_INFINITY),X(this,void 0,void 0,function(){var a,i,s,u,c,l,h;return Y(this,function(f){switch(f.label){case 0:return a=_(r,"boxes","nonMaxSuppressionAsync"),i=_(n,"scores","nonMaxSuppressionAsync"),s=pn(a,i,e,t,o),e=s.maxOutputSize,t=s.iouThreshold,o=s.scoreThreshold,[4,Promise.all([a.data(),i.data()])];case 1:return u=f.sent(),c=u[0],l=u[1],h=T2(c,l,e,t,o),a!==r&&a.dispose(),i!==n&&i.dispose(),[2,h]}})})},Ja=A({nonMaxSuppressionWithScore_:function(r,n,e,t,o,a){t===void 0&&(t=.5),o===void 0&&(o=Number.NEGATIVE_INFINITY),a===void 0&&(a=0);var i=_(r,"boxes","nonMaxSuppression"),s=_(n,"scores","nonMaxSuppression"),u=pn(i,s,e,t,o,a),c={maxOutputSize:e=u.maxOutputSize,iouThreshold:t=u.iouThreshold,scoreThreshold:o=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},l=M.runKernel("NonMaxSuppressionV5",{boxes:i,scores:s},c);return{selectedIndices:l[0],selectedScores:l[1]}}}),Qa=function(r,n,e,t,o,a){return t===void 0&&(t=.5),o===void 0&&(o=Number.NEGATIVE_INFINITY),a===void 0&&(a=0),X(this,void 0,void 0,function(){var i,s,u,c,l,h,f;return Y(this,function(p){switch(p.label){case 0:return i=_(r,"boxes","nonMaxSuppressionAsync"),s=_(n,"scores","nonMaxSuppressionAsync"),u=pn(i,s,e,t,o,a),e=u.maxOutputSize,t=u.iouThreshold,o=u.scoreThreshold,a=u.softNmsSigma,[4,Promise.all([i.data(),s.data()])];case 1:return c=p.sent(),l=c[0],h=c[1],f=N2(l,h,e,t,o,a),i!==r&&i.dispose(),s!==n&&s.dispose(),[2,f]}})})},Za=A({cropAndResize_:function(r,n,e,t,o,a){var i=_(r,"image","cropAndResize"),s=_(n,"boxes","cropAndResize","float32"),u=_(e,"boxInd","cropAndResize","int32");o=o||"bilinear",a=a||0;var c=s.shape[0];return E(i.rank===4,function(){return"Error in cropAndResize: image must be rank 4,but got rank "+i.rank+"."}),E(s.rank===2&&s.shape[1]===4,function(){return"Error in cropAndResize: boxes must be have size ["+c+",4] but had shape "+s.shape+"."}),E(u.rank===1&&u.shape[0]===c,function(){return"Error in cropAndResize: boxInd must be have size ["+c+"] but had shape "+s.shape+"."}),E(t.length===2,function(){return"Error in cropAndResize: cropSize must be of length 2, but got length "+t.length+"."}),E(t[0]>=1&&t[1]>=1,function(){return"cropSize must be atleast [1,1], but was "+t}),E(o==="bilinear"||o==="nearest",function(){return"method must be bilinear or nearest, but was "+o}),M.runKernelFunc(function(l,h){return l.cropAndResize(i,s,u,t,o,a)},{images:i,boxes:s,boxInd:u},null,"CropAndResize",{method:o,extrapolationValue:a,cropSize:t})}}),K2=Object.freeze({resizeBilinear:Ka,resizeNearestNeighbor:Xa,nonMaxSuppression:Ya,nonMaxSuppressionAsync:$a,nonMaxSuppressionWithScore:Ja,nonMaxSuppressionWithScoreAsync:Qa,cropAndResize:Za}),X2=function(r,n){return!(r>0)||n==="linear"},Y2=function(r,n,e){if(e==null||e==="linear")return r;if(e==="relu")return r.mul(n.step());throw new Error("Gradient for activation "+e+" has not been implemented yet.")},$2=function(r,n){var e=n,t=P0(r.shape,n.shape);return t.length>0&&(e=e.sum(t)),e.reshape(r.shape)},J2=function(r,n,e){if(n==="linear")return r;if(n==="relu")return I0(r);if(n==="elu")return jr(r);if(n==="relu6")return Kr(r);if(n==="prelu")return qr(r,e);throw new Error("Unknown fused activation "+n+".")},ei=A({fusedMatMul_:function(r){var n,e=r.a,t=r.b,o=r.transposeA,a=o!==void 0&&o,i=r.transposeB,s=i!==void 0&&i,u=r.bias,c=r.activation,l=c===void 0?"linear":c,h=r.preluActivationWeights;if(X2(M.state.gradientDepth,l)===!1){var f=hn(e,t,a,s);return u!=null&&(f=u0(f,u)),J2(f,l,h)}var p=_(e,"a","fused matMul"),d=_(t,"b","fused matMul");n=R0(p,d),p=n[0],d=n[1];var m=a?p.shape[p.rank-2]:p.shape[p.rank-1],v=s?d.shape[d.rank-1]:d.shape[d.rank-2],g=a?p.shape[p.rank-1]:p.shape[p.rank-2],x=s?d.shape[d.rank-2]:d.shape[d.rank-1],b=p.shape.slice(0,-2),y=d.shape.slice(0,-2),w=$(b),C=$(y);E(p.rank>=2&&d.rank>=2&&p.rank===d.rank,function(){return"Error in fused matMul: inputs must have the same rank of at least 2, got ranks "+p.rank+" and "+d.rank+"."}),E(W0(b,y),function(){return"Error in fused matMul: outer dimensions ("+b+") and ("+y+") of Tensors with shapes "+p.shape+" and "+d.shape+" must match."}),E(m===v,function(){return"Error in fused matMul: inner shapes ("+m+") and ("+v+") of Tensors with shapes "+p.shape+" and "+d.shape+" and transposeA="+a+" and transposeB="+s+" must match."});var S,k,I=p.shape.slice(0,-2).concat([g,x]),R=a?p.as3D(w,m,g):p.as3D(w,g,m),T=s?d.as3D(C,x,v):d.as3D(C,v,x);u!=null&&l0(I,(S=R0(S=_(u,"bias","fused matMul"),p)[0]).shape),h!=null&&(k=_(h,"prelu weights","fused matMul"));var D={a:R,b:T};u!=null&&(D.bias=S),h!=null&&(D.preluActivationWeights=k);var L=[R,T];return M.runKernelFunc(function(O,B){var U=O.fusedBatchMatMul({a:R,b:T,transposeA:a,transposeB:s,bias:S,activation:l,preluActivationWeights:k});return B([R,T,U]),U},D,function(O,B){var U=B[0],V=B[1],W=B[2],z=Y2(O,W,l),H={};return u!=null&&(H={bias:function(){return $2(S,z)}}),Object.assign(a||s?!a&&s?{a:function(){return z.matMul(V,!1,!1)},b:function(){return z.matMul(U,!0,!1)}}:a&&!s?{a:function(){return V.matMul(z,!1,!0)},b:function(){return U.matMul(z,!1,!1)}}:{a:function(){return V.matMul(z,!0,!0)},b:function(){return z.matMul(U,!0,!0)}}:{a:function(){return z.matMul(V,!1,!0)},b:function(){return U.matMul(z,!0,!1)}},H)},"_FusedMatMul",{transposeA:a,transposeB:s,activation:l},L,[!0]).reshape(I)}}),ti=A({fusedConv2d_:function(r){var n=r.x,e=r.filter,t=r.strides,o=r.pad,a=r.dataFormat,i=a===void 0?"NHWC":a,s=r.dilations,u=s===void 0?[1,1]:s,c=r.dimRoundingMode,l=r.bias,h=r.activation,f=h===void 0?"linear":h,p=r.preluActivationWeights;if(f=f||"linear",X2(M.state.gradientDepth,f)===!1){var d=d1(n,e,t,o,i,u,c);return l!=null&&(d=u0(d,l)),J2(d,f,p)}var m=_(n,"x","conv2d"),v=_(e,"filter","conv2d"),g=m,x=!1;m.rank===3&&(x=!0,g=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),E(g.rank===4,function(){return"Error in fused conv2d: input must be rank 4, but got rank "+g.rank+"."}),E(v.rank===4,function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+v.rank+"."}),c!=null&&E(A0(o),function(){return"Error in fused conv2d: pad must be an integer when using, dimRoundingMode "+c+" but got pad "+o+"."}),E(g.shape[3]===v.shape[2],function(){return"Error in conv2d: depth of input ("+g.shape[3]+") must match input depth for filter "+v.shape[2]+"."}),E(n1(t,u),function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+u+"'"}),E(i==="NHWC",function(){return"Error in conv2d: got dataFormat of "+i+" but only NHWC is currently supported."});var b,y,w=we(g.shape,v.shape,t,u,o,c);l!=null&&(b=R0(b=_(l,"bias","fused conv2d"),m)[0],l0(w.outShape,b.shape)),p!=null&&(y=_(p,"prelu weights","fused conv2d"));var C={x:g,filter:v};l!=null&&(C.bias=b),p!=null&&(C.preluActivationWeights=y);var S=[v,g],k=M.runKernelFunc(function(I,R){var T=I.fusedConv2d({input:g,filter:v,convInfo:w,bias:b,activation:f,preluActivationWeights:y});return R([v,g,T]),T},C,function(I,R){var T=R,D=T[0],L=T[1],O=T[2],B=Y2(I,O,f);E(je(u),function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+u+"'"});var U={};return l!=null&&(U={bias:function(){return $2(b,B)}}),Object.assign({x:function(){return Br(L.shape,B,D,t,o)},filter:function(){return U2(L,B,D.shape,t,o)}},U)},"FusedConv2D",{convInfo:w,activation:f},S,[!0]);return x?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}}),ni=A({fusedDepthwiseConv2d_:function(r){var n=r.x,e=r.filter,t=r.strides,o=r.pad,a=r.dataFormat,i=a===void 0?"NHWC":a,s=r.dilations,u=s===void 0?[1,1]:s,c=r.dimRoundingMode,l=r.bias,h=r.activation,f=h===void 0?"linear":h,p=r.preluActivationWeights;if(X2(M.state.gradientDepth,f)===!1){var d=ln(n,e,t,o,i,u,c);return l!=null&&(d=u0(d,l)),J2(d,f,p)}var m=_(n,"x","depthwiseConv2d"),v=_(e,"filter","depthwiseConv2d"),g=m,x=!1;m.rank===3&&(x=!0,g=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),E(g.rank===4,function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got rank "+g.rank+"."}),E(v.rank===4,function(){return"Error in fused depthwiseConv2d: filter must be rank 4, but got rank "+v.rank+"."}),E(g.shape[3]===v.shape[2],function(){return"Error in fused depthwiseConv2d: number of input channels ("+g.shape[3]+") must match the inChannels dimension in filter "+v.shape[2]+"."}),u==null&&(u=[1,1]),E(n1(t,u),function(){return"Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+u+"'"}),c!=null&&E(A0(o),function(){return"Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode "+c+" but got pad "+o+"."});var b,y,w=we(g.shape,v.shape,t,u,o,c,!0);l!=null&&(b=R0(b=_(l,"bias","fused conv2d"),m)[0],l0(w.outShape,b.shape)),p!=null&&(y=_(p,"prelu weights","fused depthwiseConv2d"));var C={x:g,filter:v};l!=null&&(C.bias=b),p!=null&&(C.preluActivationWeights=y);var S=[v,g],k=M.runKernelFunc(function(I,R){var T=I.fusedDepthwiseConv2D({input:g,filter:v,convInfo:w,bias:b,activation:f,preluActivationWeights:y});return R([v,g,T]),T},C,function(I,R){E(je(u),function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+u+"'"});var T=R[0],D=R[1],L=R[2],O=Y2(I,L,f),B={};return l!=null&&(B={bias:function(){return $2(b,O)}}),Object.assign({x:function(){return Lr(D.shape,O,T,w)},filter:function(){return Wr(D,O,T.shape,w)}},B)},"FusedDepthwiseConv2D",{convInfo:w,activation:f},S,[!0]);return x?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}}),ri=Object.freeze({matMul:ei,conv2d:ti,depthwiseConv2d:ni}),oi=Object.freeze({image:K2,linalg:qa,losses:Ga,spectral:ka,fused:ri,signal:Ta,square:B9,squaredDifference:wr,conv1d:Ko,conv2d:d1,conv3d:Xo,depthwiseConv2d:ln,separableConv2d:G2,conv2dTranspose:Yo,conv3dTranspose:$o,op:A,batchNormalization2d:po,batchNormalization3d:vo,batchNormalization4d:mo,batchNormalization:go,batchNorm:kr,batchNorm2d:yo,batchNorm3d:xo,batchNorm4d:bo,booleanMaskAsync:qo,complex:G0,real:f1,imag:S1,concat:N0,concat1d:n7,concat2d:r7,concat3d:o7,concat4d:a7,split:S2,matMul:hn,dot:Jo,outerProduct:Qo,reverse:mt,reverse1d:Zo,reverse2d:ea,reverse3d:ta,reverse4d:na,maxPool:L0,avgPool:gt,pool:ra,maxPool3d:oa,avgPool3d:aa,slice:N1,slice1d:ia,slice2d:sa,slice3d:Gr,slice4d:ua,abs:L9,acos:W9,acosh:V9,asin:U9,asinh:G9,atan:z9,atanh:H9,ceil:j9,clipByValue:L2,cos:q9,cosh:K9,erf:X9,exp:d2,expm1:Y9,floor:$9,log:J9,log1p:Q9,logSigmoid:Z9,neg:$t,reciprocal:eo,round:to,rsqrt:Cr,sigmoid:_r,sign:no,isNaN:ro,isInf:oo,isFinite:ao,sin:io,sinh:so,softplus:uo,sqrt:co,step:lo,tan:ho,tanh:fo,all:ca,any:la,argMax:ha,argMin:fa,logSumExp:pa,max:fn,mean:da,min:va,moments:ma,sum:Hr,prod:ga,equal:Tr,equalStrict:Oo,greater:Bo,greaterEqual:Nr,greaterEqualStrict:Lo,greaterStrict:Wo,less:Vo,lessEqual:Uo,lessEqualStrict:Go,lessStrict:zo,notEqual:Ho,notEqualStrict:jo,add:u0,addN:_o,addStrict:Eo,atan2:Io,div:m1,divNoNan:Ro,divStrict:ko,floorDiv:Dr,maximum:W2,maximumStrict:So,minimum:Mr,minimumStrict:Ao,mod:Do,modStrict:Mo,mul:$0,mulStrict:To,pow:Jt,powStrict:No,squaredDifferenceStrict:Fo,sub:O0,subStrict:Po,elu:jr,leakyRelu:ya,prelu:qr,relu:I0,relu6:Kr,selu:xa,logicalAnd:cn,logicalNot:wo,logicalOr:Sr,logicalXor:Co,where:ye,whereAsync:Ar,buffer:o0,print:d7,batchToSpaceND:H4,broadcastTo:v7,cast:m7,clone:g7,cumsum:y7,depthToSpace:x7,expandDims:h1,eye:j4,multinomial:b7,oneHot:l2,pad:be,pad1d:w7,pad2d:C7,pad3d:_7,pad4d:E7,rand:I7,randomNormal:R7,randomGamma:k7,randomUniform:q4,reshape:g1,spaceToBatchND:K4,squeeze:X4,stack:c1,tile:Oe,truncatedNormal:S7,unstack:F0,setdiff1dAsync:A7,fill:T1,linspace:t7,ones:Ke,range:Gt,scalar:j,tensor:H0,tensor1d:M0,tensor2d:re,tensor3d:k2,tensor4d:Q0,tensor5d:Q6,tensor6d:Z6,variable:e7,zeros:w0,onesLike:z4,zerosLike:v0,transpose:ie,softmax:q1,logSoftmax:O7,localResponseNormalization:ba,norm:Xr,gather:V2,unsortedSegmentSum:Fr,basicLSTMCell:wa,multiRNNCell:Ca,movingAverage:_a,stridedSlice:Ea,topk:Ia,scatterND:Ra,fft:z2,ifft:Qt,rfft:H2,irfft:Yr,sparseToDense:Sa,gatherND:Aa,diag:Da,dropout:Ma,hannWindow:j2,hammingWindow:Jr,frame:q2,stft:Qr,inTopKAsync:Na});function G(r,n){Array.isArray(r)||(r=[r]),r.forEach(function(e){e!=null&&E(e.dtype!=="complex64",function(){return n+" does not support complex64 tensors."})})}function Hn(r,n,e,t){if(e==="linear")return r.linear(n);if(e==="relu")return r.relu(n);if(e==="elu")return r.elu(n);if(e==="relu6")return r.relu6(n);if(e==="prelu")return r.prelu(n,t);throw new Error("Activation "+e+" has not been implemented for the CPU backend.")}var ai=function(r){function n(){var e=r.call(this)||this;return e.blockSize=48,e.firstUse=!0,e.data=new tr(e,M),e}return x1(n,r),n.prototype.write=function(e,t,o){this.firstUse&&(this.firstUse=!1,P().get("IS_NODE")&&Vt(`
============================
Hi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));var a={};return this.data.set(a,{values:e,dtype:o}),a},n.prototype.move=function(e,t,o,a){this.data.set(e,{values:t,dtype:a})},n.prototype.numDataIds=function(){return this.data.numDataIds()},n.prototype.read=function(e){return X(this,void 0,void 0,function(){return Y(this,function(t){return[2,this.readSync(e)]})})},n.prototype.readSync=function(e){var t=this.data.get(e),o=t.dtype,a=t.complexTensors;return o==="complex64"?p2(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.data.get(e).values},n.prototype.bufferSync=function(e){var t=this.readSync(e.dataId),o=t;if(e.dtype==="string")try{o=t.map(function(a){return Bt(a)})}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return o0(e.shape,e.dtype,o)},n.prototype.makeOutput=function(e,t,o){var a=this.write(e,t,o);return M.makeTensorFromDataId(a,t,o,this)},n.prototype.disposeData=function(e){if(this.data.has(e)){var t=this.data.get(e).complexTensors;t!=null&&(t.real.dispose(),t.imag.dispose()),this.data.delete(e)}},n.prototype.time=function(e){return X(this,void 0,void 0,function(){var t;return Y(this,function(o){return t=R1(),e(),[2,{kernelMs:R1()-t}]})})},n.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},n.prototype.complex=function(e,t){var o=this.makeOutput(null,e.shape,"complex64");return this.data.get(o.dataId).complexTensors={real:M.keep(e.clone()),imag:M.keep(t.clone())},o},n.prototype.real=function(e){return this.data.get(e.dataId).complexTensors.real.clone()},n.prototype.imag=function(e){return this.data.get(e.dataId).complexTensors.imag.clone()},n.prototype.slice=function(e,t,o){if(G(e,"slice"),Z4(e.shape,t,o)){var a=er(t,e.strides),i=$(o);return H0(this.readSync(e.dataId).subarray(a,a+i),o,e.dtype)}for(var s=o0(o,e.dtype),u=this.bufferSync(e),c=0;c<s.size;++c){var l=s.indexToLoc(c).map(function(h,f){return h+t[f]});s.values[c]=u.get.apply(u,l)}return s.toTensor()},n.prototype.stridedSlice=function(e,t,o,a){G(e,"stridedSlice");var i=D2(t,o,a);if(i.some(function(p){return p===0}))return H0([],i);for(var s=o0(i,e.dtype),u=this.bufferSync(e),c=0;c<s.size;c++){for(var l=s.indexToLoc(c),h=new Array(l.length),f=0;f<h.length;f++)h[f]=l[f]*a[f]+t[f];s.set.apply(s,[u.get.apply(u,h)].concat(l))}return s.toTensor()},n.prototype.diag=function(e){for(var t=this.readSync(e.dataId),o=o0([e.size,e.size],e.dtype),a=o.values,i=0;i<t.length;i++)a[i*e.size+i]=t[i];return o.toTensor()},n.prototype.unstack=function(e,t){for(var o=e.shape[t],a=new Array(e.rank-1),i=0,s=0;s<e.rank;s++)s!==t&&(a[i++]=e.shape[s]);var u=new Array(e.rank).fill(0),c=e.shape.slice();c[t]=1;var l=new Array(o);for(s=0;s<l.length;s++)u[t]=s,l[s]=this.slice(e,u,c).reshape(a);return l},n.prototype.reverse=function(e,t){G(e,"reverse");for(var o=o0(e.shape,e.dtype),a=this.bufferSync(e),i=function(u){var c=o.indexToLoc(u),l=c.slice();t.forEach(function(h){return l[h]=e.shape[h]-1-l[h]}),o.set.apply(o,[a.get.apply(a,l)].concat(c))},s=0;s<o.size;s++)i(s);return o.toTensor()},n.prototype.concat=function(e,t){var o=this;if(e[0].dtype==="complex64"){var a=e.map(function(p){return f1(p)}),i=e.map(function(p){return S1(p)});return G0(this.concat(a,t),this.concat(i,t))}var s=e.map(function(p){var d=$(p.shape.slice(t));return p.as2D(-1,d)}),u=He(s.map(function(p){return p.shape}),1),c=o0(u,e[0].dtype).values;if(s[0].shape[0]===1){var l=0;s.forEach(function(p){c.set(o.readSync(p.dataId),l),l+=p.size})}else{var h=0;s.forEach(function(p){for(var d=o.readSync(p.dataId),m=0,v=0;v<p.shape[0];++v)for(var g=v*u[1]+h,x=0;x<p.shape[1];++x)c[g+x]=d[m++];h+=p.shape[1]})}var f=He(e.map(function(p){return p.shape}),t);return H0(c,f,e[0].dtype)},n.prototype.neg=function(e){return G(e,"neg"),this.multiply(j(-1),e)},n.prototype.add=function(e,t){return e.dtype==="complex64"||t.dtype==="complex64"?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),function(o,a,i,s){return{real:o+i,imag:a+s}}):this.broadcastedBinaryOp(e,t,z0(e.dtype,t.dtype),function(o,a){return o+a})},n.prototype.addN=function(e){var t=this;G(e,"addN");for(var o=e.map(function(l){return t.readSync(l.dataId)}),a=o0(e[0].shape,e[0].dtype),i=a.values,s=0;s<e.length;s++)for(var u=o[s],c=0;c<i.length;c++)i[c]+=u[c];return a.toTensor()},n.prototype.softmax=function(e,t){var o=B0([t],e.shape),a=this.max(e,o),i=t1(a.shape,o),s=this.subtract(e,a.reshape(i)),u=this.exp(s),c=this.sum(u,o).reshape(i);return this.realDivide(u,c)},n.prototype.subtract=function(e,t){return e.dtype==="complex64"||t.dtype==="complex64"?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),function(o,a,i,s){return{real:o-i,imag:a-s}}):this.broadcastedBinaryOp(e,t,z0(e.dtype,t.dtype),function(o,a){return o-a})},n.prototype.pow=function(e,t){return G([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,function(o,a){return Math.pow(o,a)})},n.prototype.batchMatMul=function(e,t,o,a){G([e,t],"matMul");for(var i=o?e.shape[1]:e.shape[2],s=o?e.shape[2]:e.shape[1],u=a?t.shape[1]:t.shape[2],c=e.shape[0],l=this.readSync(e.dataId),h=this.readSync(t.dataId),f=o?[e.strides[0],1,e.strides[1]]:[e.strides[0],e.strides[1],1],p=f[0],d=f[1],m=f[2],v=a?[1,t.strides[1],t.strides[0]]:[t.strides[1],1,t.strides[0]],g=v[0],x=v[1],b=v[2],y=s*u,w=o0([c,s,u],e.dtype),C=w.values,S=this.blockSize,k=0;k<c;k++)for(var I=0;I<s;I+=S)for(var R=0;R<u;R+=S)for(var T=0;T<i;T+=S)for(var D=Math.min(I+S,s),L=Math.min(R+S,u),O=Math.min(T+S,i),B=I;B<D;B++)for(var U=R;U<L;U++){for(var V=0,W=T;W<O;W++)V+=l[k*p+B*d+W*m]*h[W*g+U*x+k*b];C[k*y+(B*u+U)]+=V}return w.toTensor()},n.prototype.fusedBatchMatMul=function(e){var t=e.a,o=e.b,a=e.transposeA,i=e.transposeB,s=e.bias,u=e.activation,c=e.preluActivationWeights,l=this.batchMatMul(t,o,a,i);return s&&(l=this.add(l,s)),u&&(l=Hn(this,l,u,c)),l},n.prototype.multiply=function(e,t){return e.dtype==="complex64"||t.dtype==="complex64"?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),function(o,a,i,s){return{real:o*i-a*s,imag:o*s+a*i}}):this.broadcastedBinaryOp(e,t,z0(e.dtype,t.dtype),function(o,a){return o*a})},n.prototype.realDivide=function(e,t){return G([e,t],"realDivide"),this.broadcastedBinaryOp(e,t,"float32",function(o,a){return o/a})},n.prototype.floorDiv=function(e,t){return G([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",function(o,a){return Math.floor(o/a)})},n.prototype.sum=function(e,t){G(e,"sum"),o1("sum",t,e.rank);for(var o=q0(e.shape,t),a=o[0],i=o[1],s=w0(a,z0(e.dtype,"int32")),u=$(i),c=this.readSync(s.dataId),l=this.readSync(e.dataId),h=0;h<c.length;++h){for(var f=h*u,p=0,d=0;d<u;++d)p+=l[f+d];c[h]=p}return s},n.prototype.prod=function(e,t){G(e,"sum");for(var o=q0(e.shape,t),a=o[0],i=o[1],s=w0(a,z0(e.dtype,"int32")),u=$(i),c=this.readSync(s.dataId),l=this.readSync(e.dataId),h=0;h<c.length;++h){for(var f=h*u,p=1,d=0;d<u;++d)p*=l[f+d];c[h]=p}return s},n.prototype.unsortedSegmentSum=function(e,t,o){G(e,"unsortedSegmentSum");for(var a=[],i=e.rank-t.rank,s=0;s<i;++s)t=t.expandDims(s+1);for(s=0;s<o;++s){var u=j(s,"int32"),c=Tr(u,t).asType("float32").mul(e).sum(0);a.push(c)}return c1(a)},n.prototype.argMin=function(e,t){G(e,"argMin");var o=[t];o1("argMin",o,e.rank);for(var a=q0(e.shape,o),i=a[0],s=a[1],u=w0(i,"int32"),c=$(s),l=this.readSync(u.dataId),h=this.readSync(e.dataId),f=0;f<l.length;++f){for(var p=f*c,d=h[p],m=0,v=0;v<c;++v){var g=h[p+v];g<d&&(d=g,m=v)}l[f]=m}return u},n.prototype.argMax=function(e,t){G(e,"argMax");var o=[t];o1("argMax",o,e.rank);for(var a=q0(e.shape,o),i=a[0],s=a[1],u=w0(i,"int32"),c=$(s),l=this.readSync(u.dataId),h=this.readSync(e.dataId),f=0;f<l.length;++f){for(var p=f*c,d=h[p],m=0,v=0;v<c;++v){var g=h[p+v];g>d&&(d=g,m=v)}l[f]=m}return u},n.prototype.cumsum=function(e,t,o,a){if(G(e,"cumsum"),t!==e.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(e.rank-1)+" but got axis="+t);for(var i=z0(e.dtype,"int32"),s=w0(e.shape,i),u=this.readSync(s.dataId),c=this.readSync(e.dataId),l=e.shape[e.rank-1],h=a?function(v,g){return v+l-g-1}:function(v,g){return v+g},f=0;f<c.length;f+=l)for(var p=0;p<l;p++){var d=h(f,p);if(p===0)u[d]=o?0:c[d];else{var m=h(f,p-1);u[d]=o?c[m]+u[m]:c[d]+u[m]}}return s},n.prototype.equal=function(e,t){return G([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o===a?1:0})},n.prototype.notEqual=function(e,t){return G([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o!==a?1:0})},n.prototype.less=function(e,t){return G([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o<a?1:0})},n.prototype.lessEqual=function(e,t){return G([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o<=a?1:0})},n.prototype.greater=function(e,t){return G([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o>a?1:0})},n.prototype.greaterEqual=function(e,t){return G([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o>=a?1:0})},n.prototype.logicalNot=function(e){G(e,"logicalNot");for(var t=this.readSync(e.dataId),o=new Uint8Array(t.length),a=0;a<t.length;++a)o[a]=t[a]?0:1;return this.makeOutput(o,e.shape,"bool")},n.prototype.logicalAnd=function(e,t){return G([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o&&a})},n.prototype.logicalOr=function(e,t){return G([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",function(o,a){return o||a})},n.prototype.select=function(e,t,o){G([e,t,o],"select");for(var a=this.readSync(e.dataId),i=this.readSync(t.dataId),s=this.readSync(o.dataId),u=w0(t.shape,z0(t.dtype,o.dtype)),c=this.readSync(u.dataId),l=0,h=e.rank===0||e.rank>1||t.rank===1?1:$(t.shape.slice(1)),f=0;f<a.length;f++)for(var p=0;p<h;p++)a[f]===1?c[l++]=i[f]:c[l++]=s[f];return u},n.prototype.where=function(e){G([e],"where");var t=this.readSync(e.dataId);return F2(e.shape,t)},n.prototype.topk=function(e,t,o){return G(e,"topk"),cr(this.readSync(e.dataId),e.shape,e.dtype,t)},n.prototype.min=function(e,t){G(e,"min"),o1("min",t,e.rank);for(var o=q0(e.shape,t),a=o[0],i=o[1],s=w0(a,e.dtype),u=$(i),c=this.readSync(s.dataId),l=this.readSync(e.dataId),h=0;h<c.length;++h){for(var f=h*u,p=l[f],d=0;d<u;++d){var m=l[f+d];m<p&&(p=m)}c[h]=p}return s},n.prototype.minimum=function(e,t){return G([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,function(o,a){return Math.min(o,a)})},n.prototype.mod=function(e,t){return G([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,function(o,a){var i=o%a;return o<0&&a<0||o>=0&&a>=0?i:(i+a)%a})},n.prototype.max=function(e,t){G(e,"max"),o1("max",t,e.rank);for(var o=q0(e.shape,t),a=o[0],i=o[1],s=w0(a,e.dtype),u=$(i),c=this.readSync(s.dataId),l=this.readSync(e.dataId),h=0;h<c.length;++h){for(var f=h*u,p=l[f],d=0;d<u;++d){var m=l[f+d];m>p&&(p=m)}c[h]=p}return s},n.prototype.maximum=function(e,t){return G([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,function(o,a){return Math.max(o,a)})},n.prototype.all=function(e,t){G(e,"all"),o1("all",t,e.rank);for(var o=q0(e.shape,t),a=o[0],i=o[1],s=w0(a,e.dtype),u=$(i),c=this.readSync(s.dataId),l=this.readSync(e.dataId),h=0;h<c.length;++h){for(var f=h*u,p=l[f],d=0;d<u;++d){var m=l[f+d];p=p&&m}c[h]=p}return s},n.prototype.any=function(e,t){G(e,"any"),o1("any",t,e.rank);for(var o=q0(e.shape,t),a=o[0],i=o[1],s=w0(a,e.dtype),u=$(i),c=this.readSync(s.dataId),l=this.readSync(e.dataId),h=0;h<c.length;++h){for(var f=h*u,p=l[f],d=0;d<u;++d){var m=l[f+d];p=p||m}c[h]=p}return s},n.prototype.squaredDifference=function(e,t){return G([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,function(o,a){var i=o-a;return i*i})},n.prototype.ceil=function(e){G(e,"ceil");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a)o[a]=Math.ceil(t[a]);return this.makeOutput(o,e.shape,"float32")},n.prototype.floor=function(e){G(e,"floor");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a)o[a]=Math.floor(t[a]);return this.makeOutput(o,e.shape,"float32")},n.prototype.sign=function(e){G(e,"x");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a)t[a]<0?o[a]=-1:t[a]>0?o[a]=1:o[a]=0;return this.makeOutput(o,e.shape,"float32")},n.prototype.isNaN=function(e){G(e,"x");for(var t=this.readSync(e.dataId),o=new Uint8Array(t.length),a=0;a<t.length;++a)Number.isNaN(t[a])&&(o[a]=1);return this.makeOutput(o,e.shape,"bool")},n.prototype.isInf=function(e){G(e,"x");for(var t=this.readSync(e.dataId),o=new Uint8Array(t.length),a=0;a<t.length;++a)Math.abs(t[a])===1/0&&(o[a]=1);return this.makeOutput(o,e.shape,"bool")},n.prototype.isFinite=function(e){G(e,"x");for(var t=this.readSync(e.dataId),o=new Uint8Array(t.length),a=0;a<t.length;++a)Number.isFinite(t[a])&&(o[a]=1);return this.makeOutput(o,e.shape,"bool")},n.prototype.round=function(e){G(e,"round");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a){var i=Math.floor(t[a]);t[a]-i<.5?o[a]=Math.floor(t[a]):t[a]-i>.5?o[a]=Math.ceil(t[a]):o[a]=i%2==0?i:i+1}return this.makeOutput(o,e.shape,"float32")},n.prototype.exp=function(e){G(e,"exp");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a)o[a]=Math.exp(t[a]);return this.makeOutput(o,e.shape,"float32")},n.prototype.expm1=function(e){G(e,"expm1");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a)o[a]=Math.expm1(t[a]);return this.makeOutput(o,e.shape,"float32")},n.prototype.log=function(e){G(e,"log");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a){var i=t[a];o[a]=Math.log(i)}return this.makeOutput(o,e.shape,"float32")},n.prototype.log1p=function(e){G(e,"log1p");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a){var i=t[a];o[a]=Math.log1p(i)}return this.makeOutput(o,e.shape,"float32")},n.prototype.sqrt=function(e){G(e,"sqrt");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a){var i=t[a];o[a]=Math.sqrt(i)}return this.makeOutput(o,e.shape,"float32")},n.prototype.rsqrt=function(e){G(e,"rsqrt");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a){var i=t[a];o[a]=1/Math.sqrt(i)}return this.makeOutput(o,e.shape,"float32")},n.prototype.reciprocal=function(e){G(e,"reciprocal");for(var t=this.readSync(e.dataId),o=new Float32Array(t.length),a=0;a<t.length;++a)o[a]=1/t[a];return this.makeOutput(o,e.shape,"float32")},n.prototype.linear=function(e){return e},n.prototype.relu=function(e){G(e,"relu");for(var t=w0(e.shape,e.dtype),o=this.readSync(t.dataId),a=this.readSync(e.dataId),i=0;i<a.length;++i)o[i]=Math.max(0,a[i]);return t},n.prototype.relu6=function(e){G(e,"relu");for(var t=w0(e.shape,e.dtype),o=this.readSync(t.dataId),a=this.readSync(e.dataId),i=0;i<a.length;++i)o[i]=Math.min(Math.max(0,a[i]),6);return t},n.prototype.prelu=function(e,t){return G([e,t],"prelu"),this.broadcastedBinaryOp(e,t,e.dtype,function(o,a){return o<0?a*o:o})},n.prototype.elu=function(e){G(e,"elu");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a){var i=o[a];t[a]=i>=0?i:Math.exp(i)-1}return this.makeOutput(t,e.shape,"float32")},n.prototype.eluDer=function(e,t){G([e,t],"eluDer");for(var o=new Float32Array(t.size),a=this.readSync(t.dataId),i=this.readSync(e.dataId),s=0;s<a.length;++s){var u=a[s];o[s]=u>=1?i[s]:i[s]*(u+1)}return this.makeOutput(o,t.shape,"float32")},n.prototype.selu=function(e){G(e,"selu");for(var t=O2,o=B2,a=new Float32Array(e.size),i=this.readSync(e.dataId),s=0;s<i.length;++s){var u=i[s];a[s]=u>=0?o*u:t*(Math.exp(u)-1)}return this.makeOutput(a,e.shape,"float32")},n.prototype.clip=function(e,t,o){G(e,"clip");for(var a=new Float32Array(e.size),i=this.readSync(e.dataId),s=0;s<i.length;++s){var u=i[s];a[s]=u>o?o:u<t?t:u}return this.makeOutput(a,e.shape,"float32")},n.prototype.abs=function(e){for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.abs(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.complexAbs=function(e){for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<e.size;++a){var i=o[2*a],s=o[2*a+1];t[a]=Math.hypot(i,s)}return this.makeOutput(t,e.shape,"float32")},n.prototype.int=function(e){G(e,"int");for(var t=new Int32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=o[a];return this.makeOutput(t,e.shape,"int32")},n.prototype.sigmoid=function(e){G(e,"sigmoid");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=1/(1+Math.exp(-o[a]));return this.makeOutput(t,e.shape,"float32")},n.prototype.softplus=function(e){G(e,"softplus");for(var t=Math.log(11920928955078125e-23)+2,o=new Float32Array(e.size),a=this.readSync(e.dataId),i=0;i<a.length;++i){var s=a[i]>-t,u=a[i]<t,c=Math.exp(a[i]),l=void 0;l=u?c:s?a[i]:Math.log(1+c),o[i]=l}return this.makeOutput(o,e.shape,"float32")},n.prototype.sin=function(e){G(e,"sin");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.sin(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.cos=function(e){G(e,"cos");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.cos(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.tan=function(e){G(e,"tan");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.tan(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.asin=function(e){G(e,"asin");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.asin(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.acos=function(e){G(e,"acos");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.acos(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.atan=function(e){G(e,"atan");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.atan(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.atan2=function(e,t){return G([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,function(o,a){return Math.atan2(o,a)})},n.prototype.sinh=function(e){G(e,"sinh");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.sinh(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.cosh=function(e){G(e,"cosh");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.cosh(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.tanh=function(e){G(e,"tanh");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=a6(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.asinh=function(e){G(e,"asinh");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.asinh(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.acosh=function(e){G(e,"acosh");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.acosh(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.atanh=function(e){G(e,"atanh");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a)t[a]=Math.atanh(o[a]);return this.makeOutput(t,e.shape,"float32")},n.prototype.erf=function(e){G(e,"erf");for(var t=new Float32Array(e.size),o=this.readSync(e.dataId),a=0;a<o.length;++a){var i=Math.sign(o[a]),s=Math.abs(o[a]),u=1/(1+.3275911*s);t[a]=i*(1-((((1.061405429*u-1.453152027)*u+1.421413741)*u-.284496736)*u+.254829592)*u*Math.exp(-s*s))}return this.makeOutput(t,e.shape,"float32")},n.prototype.step=function(e,t){t===void 0&&(t=0),G(e,"step");for(var o=new Float32Array(e.size),a=this.readSync(e.dataId),i=0;i<a.length;++i){var s=a[i];isNaN(s)?o[i]=NaN:o[i]=s>0?1:t}return this.makeOutput(o,e.shape,"float32")},n.prototype.fusedConv2d=function(e){var t=e.input,o=e.filter,a=e.convInfo,i=e.bias,s=e.activation,u=e.preluActivationWeights,c=this.conv2d(t,o,a);return i&&(c=this.add(c,i)),s&&(c=Hn(this,c,s,u)),c},n.prototype.conv2d=function(e,t,o){G([e,t],"conv2d");for(var a=o.filterHeight,i=o.filterWidth,s=o.dilationHeight,u=o.dilationWidth,c=o.padInfo.left,l=o.padInfo.top,h=o.dataFormat==="channelsLast",f=o0(o.outShape,e.dtype),p=e.strides[0],d=h?e.strides[1]:e.strides[2],m=h?e.strides[2]:1,v=h?1:e.strides[1],g=f.strides[0],x=h?f.strides[1]:f.strides[2],b=h?f.strides[2]:1,y=h?1:f.strides[1],w=this.readSync(e.dataId),C=this.readSync(t.dataId),S=f.values,k=0;k<o.batchSize;++k)for(var I=k*p,R=k*g,T=0;T<o.outHeight;++T)for(var D=R+T*x,L=T*o.strideHeight-l,O=0;O<a;O++){var B=L+O*s;if(!(B<0||B>=o.inHeight))for(var U=O*t.strides[0],V=I+B*d,W=0;W<o.outWidth;++W)for(var z=D+W*b,H=W*o.strideWidth-c,q=0;q<i;q++){var e0=H+q*u;if(!(e0<0||e0>=o.inWidth))for(var t0=V+e0*m,i0=U+q*t.strides[1],s0=0;s0<o.inChannels;++s0){for(var c0=w[t0+s0*v],p0=0;p0<o.outChannels;++p0)S[z+p0*y]+=c0*C[i0+p0];i0+=o.outChannels}}}return f.toTensor()},n.prototype.conv3d=function(e,t,o){for(var a=o.filterDepth,i=o.filterHeight,s=o.filterWidth,u=o.dilationDepth,c=o.dilationHeight,l=o.dilationWidth,h=o.padInfo.front,f=o.padInfo.left,p=o.padInfo.top,d=o0(o.outShape,e.dtype),m=this.readSync(e.dataId),v=this.readSync(t.dataId),g=d.values,x=0;x<o.batchSize;++x)for(var b=x*e.strides[0],y=x*d.strides[0],w=0;w<o.outDepth;++w)for(var C=y+w*d.strides[1],S=w*o.strideDepth-h,k=0;k<a;k++){var I=S+k*u;if(!(I<0||I>=o.inDepth))for(var R=k*t.strides[0],T=b+I*e.strides[1],D=0;D<o.outHeight;++D)for(var L=C+D*d.strides[2],O=D*o.strideHeight-p,B=0;B<i;B++){var U=O+B*c;if(!(U<0||U>=o.inHeight))for(var V=R+B*t.strides[1],W=T+U*e.strides[2],z=0;z<o.outWidth;++z)for(var H=L+z*o.outChannels,q=z*o.strideWidth-f,e0=0;e0<s;e0++){var t0=q+e0*l;if(!(t0<0||t0>=o.inWidth))for(var i0=V+e0*t.strides[2],s0=W+t0*o.inChannels,c0=i0,p0=0;p0<o.inChannels;++p0){for(var h0=m[s0+p0],d0=0;d0<o.outChannels;++d0)g[H+d0]+=h0*v[c0+d0];c0+=o.outChannels}}}}return d.toTensor()},n.prototype.conv2dDerInput=function(e,t,o){G([e,t],"conv2dDerInput");for(var a=o0(o.inShape,"float32"),i=a.values,s=this.readSync(e.dataId),u=this.readSync(t.dataId),c=t.strides,l=c[0],h=c[1],f=c[2],p=o.batchSize,d=o.filterHeight,m=o.filterWidth,v=o.inChannels,g=o.inHeight,x=o.inWidth,b=o.outChannels,y=o.outHeight,w=o.outWidth,C=o.strideHeight,S=o.strideWidth,k=o.dataFormat,I=d-1-o.padInfo.top,R=m-1-o.padInfo.left,T=k==="channelsLast",D=a.strides[0],L=T?a.strides[1]:a.strides[2],O=T?a.strides[2]:1,B=T?1:a.strides[1],U=e.strides[0],V=T?e.strides[1]:e.strides[2],W=T?e.strides[2]:1,z=T?1:e.strides[1],H=0;H<p;++H)for(var q=0;q<v;++q)for(var e0=0;e0<g;++e0)for(var t0=e0-I,i0=Math.max(0,Math.ceil(t0/C)),s0=Math.min(y,(d+t0)/C),c0=0;c0<x;++c0){for(var p0=c0-R,h0=Math.max(0,Math.ceil(p0/S)),d0=Math.min(w,(m+p0)/S),D0=0,f0=i0;f0<s0;++f0)for(var x0=f0*C-t0,m0=h0;m0<d0;++m0)for(var k0=U*H+V*f0+W*m0,C0=l*(d-1-x0)+h*(m-1-(m0*S-p0))+f*q,_0=0;_0<b;++_0)D0+=s[k0+z*_0]*u[C0+_0];i[D*H+L*e0+O*c0+B*q]=D0}return a.toTensor()},n.prototype.conv3dDerInput=function(e,t,o){for(var a=o0(o.inShape,"float32"),i=a.values,s=a.strides,u=s[0],c=s[1],l=s[2],h=s[3],f=this.readSync(e.dataId),p=e.strides,d=p[0],m=p[1],v=p[2],g=p[3],x=this.readSync(t.dataId),b=t.strides,y=b[0],w=b[1],C=b[2],S=b[3],k=o.batchSize,I=o.filterDepth,R=o.filterHeight,T=o.filterWidth,D=o.inChannels,L=o.inDepth,O=o.inHeight,B=o.inWidth,U=o.outChannels,V=o.outDepth,W=o.outHeight,z=o.outWidth,H=o.strideDepth,q=o.strideHeight,e0=o.strideWidth,t0=I-1-o.padInfo.front,i0=R-1-o.padInfo.top,s0=T-1-o.padInfo.left,c0=0;c0<k;++c0)for(var p0=0;p0<D;++p0)for(var h0=0;h0<L;++h0)for(var d0=h0-t0,D0=Math.max(0,Math.ceil(d0/H)),f0=Math.min(V,(I+d0)/H),x0=0;x0<O;++x0)for(var m0=x0-i0,k0=Math.max(0,Math.ceil(m0/q)),C0=Math.min(W,(R+m0)/q),_0=0;_0<B;++_0){for(var w1=_0-s0,C1=Math.max(0,Math.ceil(w1/e0)),r1=Math.min(z,(T+w1)/e0),Ee=0,L1=D0;L1<f0;++L1)for(var J1=L1*H-d0,W1=k0;W1<C0;++W1)for(var Ie=W1*q-m0,V1=C1;V1<r1;++V1)for(var Cn=d*c0+m*L1+v*W1+g*V1,Re=y*(I-1-J1)+w*(R-1-Ie)+C*(T-1-(V1*e0-w1))+S*p0,_1=0;_1<U;++_1)Ee+=f[Cn+_1]*x[Re+_1];i[u*c0+c*h0+l*x0+h*_0+p0]=Ee}return a.toTensor()},n.prototype.conv2dDerFilter=function(e,t,o){G([e,t],"conv2dDerFilter");for(var a=o.strideHeight,i=o.strideWidth,s=o.filterHeight,u=o.filterWidth,c=o.dataFormat==="channelsLast",l=o0(o.filterShape,"float32"),h=o.padInfo.left,f=o.padInfo.top,p=this.bufferSync(e),d=this.bufferSync(t),m=0;m<s;++m)for(var v=Math.max(0,Math.ceil((f-m)/a)),g=Math.min(o.outHeight,(o.inHeight+f-m)/a),x=0;x<u;++x)for(var b=Math.max(0,Math.ceil((h-x)/i)),y=Math.min(o.outWidth,(o.inWidth+h-x)/i),w=0;w<o.inChannels;++w)for(var C=0;C<o.outChannels;++C){for(var S=0,k=0;k<o.batchSize;++k)for(var I=v;I<g;++I)for(var R=m+I*a-f,T=b;T<y;++T){var D=x+T*i-h;S+=c?p.get(k,R,D,w)*d.get(k,I,T,C):p.get(k,w,R,D)*d.get(k,C,I,T)}l.set(S,m,x,w,C)}return l.toTensor()},n.prototype.conv3dDerFilter=function(e,t,o){for(var a=o.strideDepth,i=o.strideHeight,s=o.strideWidth,u=o.filterDepth,c=o.filterHeight,l=o.filterWidth,h=o0(o.filterShape,"float32"),f=h.values,p=h.strides,d=p[0],m=p[1],v=p[2],g=p[3],x=this.readSync(t.dataId),b=t.strides,y=b[0],w=b[1],C=b[2],S=b[3],k=this.readSync(e.dataId),I=e.strides,R=I[0],T=I[1],D=I[2],L=I[3],O=o.padInfo.front,B=o.padInfo.left,U=o.padInfo.top,V=0;V<u;++V)for(var W=Math.max(0,Math.ceil((O-V)/a)),z=Math.min(o.outDepth,(o.inDepth+O-V)/a),H=V*d,q=0;q<c;++q)for(var e0=Math.max(0,Math.ceil((U-q)/i)),t0=Math.min(o.outHeight,(o.inHeight+U-q)/i),i0=q*m+H,s0=0;s0<l;++s0)for(var c0=Math.max(0,Math.ceil((B-s0)/s)),p0=Math.min(o.outWidth,(o.inWidth+B-s0)/s),h0=s0*v+i0,d0=0;d0<o.inChannels;++d0)for(var D0=d0*g+h0,f0=0;f0<o.outChannels;++f0){for(var x0=0,m0=0;m0<o.batchSize;++m0)for(var k0=m0*R,C0=m0*y,_0=W;_0<z;++_0)for(var w1=(V+_0*a-O)*T+k0,C1=_0*w+C0,r1=e0;r1<t0;++r1)for(var Ee=(q+r1*i-U)*D+w1,L1=r1*C+C1,J1=c0;J1<p0;++J1){var W1=J1*S+L1;x0+=k[(s0+J1*s-B)*L+Ee+d0]*x[W1+f0]}f[D0+f0]=x0}return h.toTensor()},n.prototype.fusedDepthwiseConv2D=function(e){var t=e.input,o=e.filter,a=e.convInfo,i=e.bias,s=e.activation,u=e.preluActivationWeights,c=this.depthwiseConv2D(t,o,a);return i&&(c=this.add(c,i)),s&&(c=Hn(this,c,s,u)),c},n.prototype.depthwiseConv2D=function(e,t,o){G([e,t],"depthwiseConv2D");for(var a=o.filterHeight,i=o.filterWidth,s=o.dilationHeight,u=o.dilationWidth,c=o.padInfo.left,l=o.padInfo.top,h=o.outChannels/o.inChannels,f=o0(o.outShape,e.dtype),p=this.readSync(e.dataId),d=this.readSync(t.dataId),m=f.values,v=0;v<o.batchSize;++v)for(var g=v*e.strides[0],x=v*f.strides[0],b=0;b<o.outHeight;++b)for(var y=x+b*f.strides[1],w=b*o.strideHeight-c,C=0;C<a;++C){var S=w+C*s;if(!(S<0||S>=o.inHeight))for(var k=C*t.strides[0],I=g+S*e.strides[1],R=0;R<o.outWidth;++R)for(var T=y+R*f.strides[2],D=R*o.strideWidth-l,L=0;L<i;++L){var O=D+L*u;if(!(O<0||O>=o.inWidth))for(var B=k+L*t.strides[1],U=I+O*o.inChannels,V=T,W=B,z=0;z<o.inChannels;++z){for(var H=p[U+z],q=0;q<h;++q)m[V+q]+=H*d[W+q];V+=h,W+=h}}}return f.toTensor()},n.prototype.depthwiseConv2DDerInput=function(e,t,o){G([e,t],"depthwiseConv2DDerInput");for(var a=o0(o.inShape,"float32"),i=a.values,s=a.strides,u=s[0],c=s[1],l=s[2],h=this.readSync(e.dataId),f=e.strides,p=f[0],d=f[1],m=f[2],v=this.readSync(t.dataId),g=t.strides,x=g[0],b=g[1],y=g[2],w=o.batchSize,C=o.filterHeight,S=o.filterWidth,k=o.inChannels,I=o.inHeight,R=o.inWidth,T=o.outChannels,D=o.outHeight,L=o.outWidth,O=o.strideHeight,B=o.strideWidth,U=C-1-o.padInfo.top,V=S-1-o.padInfo.left,W=T/k,z=0;z<w;++z)for(var H=0;H<k;++H)for(var q=0;q<I;++q)for(var e0=q-U,t0=Math.max(0,Math.ceil(e0/O)),i0=Math.min(D,(C+e0)/O),s0=0;s0<R;++s0){for(var c0=s0-V,p0=Math.max(0,Math.ceil(c0/B)),h0=Math.min(L,(S+c0)/B),d0=0,D0=t0;D0<i0;++D0)for(var f0=D0*O-e0,x0=p0;x0<h0;++x0)for(var m0=p*z+d*D0+m*x0,k0=x*(C-1-f0)+b*(S-1-(x0*B-c0))+y*H,C0=0;C0<W;++C0)d0+=h[m0+(H*W+C0)]*v[k0+C0];i[u*z+c*q+l*s0+H]=d0}return a.toTensor()},n.prototype.depthwiseConv2DDerFilter=function(e,t,o){G([e,t],"depthwiseConv2DDerFilter");for(var a=o.strideHeight,i=o.strideWidth,s=o.filterHeight,u=o.filterWidth,c=o0(o.filterShape,"float32"),l=o.padInfo.left,h=o.padInfo.top,f=o.outChannels/o.inChannels,p=this.bufferSync(e),d=this.bufferSync(t),m=0;m<s;++m)for(var v=Math.max(0,Math.ceil((h-m)/a)),g=Math.min(o.outHeight,(o.inHeight+h-m)/a),x=0;x<u;++x)for(var b=Math.max(0,Math.ceil((l-x)/i)),y=Math.min(o.outWidth,(o.inWidth+l-x)/i),w=0;w<o.outChannels;++w){for(var C=Math.trunc(w/f),S=w%f,k=0,I=0;I<o.batchSize;++I)for(var R=v;R<g;++R)for(var T=m+R*a-h,D=b;D<y;++D){var L=x+D*i-l;k+=p.get(I,T,L,C)*d.get(I,R,D,w)}c.set(k,m,x,C,S)}return c.toTensor()},n.prototype.tile=function(e,t){return G(e,"tile"),ur(this.bufferSync(e),t)},n.prototype.pad=function(e,t,o){G(e,"pad");var a=t.map(function(f,p){return f[0]+e.shape[p]+f[1]}),i=t.map(function(f){return f[0]}),s=this.bufferSync(e),u=o0(a,e.dtype);o!==0&&u.values.fill(o);for(var c=0;c<e.size;c++){var l=s.indexToLoc(c),h=l.map(function(f,p){return f+i[p]});u.set.apply(u,[s.get.apply(s,l)].concat(h))}return u.toTensor()},n.prototype.transpose=function(e,t){G(e,"transpose");for(var o=new Array(e.rank),a=0;a<o.length;a++)o[a]=e.shape[t[a]];var i=this.readSync(e.dataId),s=o0(o,e.dtype),u=this.bufferSync(e);for(a=0;a<e.size;++a){for(var c=u.indexToLoc(a),l=new Array(c.length),h=0;h<l.length;h++)l[h]=c[t[h]];var f=s.locToIndex(l);s.values[f]=i[a]}return s.toTensor()},n.prototype.gather=function(e,t,o){G([e,t],"gather");var a=e.shape.slice(),i=this.readSync(t.dataId);a[o]=i.length;for(var s=o0(a,e.dtype),u=this.bufferSync(e),c=0;c<s.size;++c){var l=s.indexToLoc(c),h=l.slice();h[o]=i[l[o]];var f=u.locToIndex(h);s.values[c]=u.values[f]}return s.toTensor()},n.prototype.batchToSpaceND=function(e,t,o){G([e],"batchToSpaceND");var a=t.reduce(function(h,f){return h*f}),i=zt(e.shape,t,a),s=Ht(i.length,t.length),u=jt(e.shape,t,a),c=Y4(o,t.length),l=$4(u,o,t.length);return e.reshape(i).transpose(s).reshape(u).slice(c,l)},n.prototype.spaceToBatchND=function(e,t,o){G([e],"spaceToBatchND");var a=t.reduce(function(f,p){return f*p}),i=[[0,0]];i.push.apply(i,o);for(var s=1+t.length;s<e.shape.length;++s)i.push([0,0]);var u=e.pad(i),c=zt(u.shape,t,a,!1),l=Ht(c.length,t.length,!1),h=jt(u.shape,t,a,!1);return u.reshape(c).transpose(l).reshape(h)},n.prototype.pool=function(e,t,o){G(e,"pool");for(var a=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,h=t.padInfo.top,f=t.padInfo.left,p=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,d=this.readSync(e.dataId),m=o0(t.outShape,e.dtype),v=m.values,g=t.outShape[1]*t.outShape[2]*t.outShape[3],x=t.outShape[2]*t.outShape[3],b=t.outShape[3],y=0;y<t.batchSize;++y)for(var w=y*g,C=y*e.strides[0],S=0;S<t.inChannels;++S)for(var k=0;k<t.outHeight;++k)for(var I=k*a-h,R=Math.max(0,I),T=Math.min(t.inHeight,c+I),D=w+k*x,L=0;L<t.outWidth;++L){for(var O=L*i-f,B=Math.max(0,O),U=Math.min(t.inWidth,l+O),V=p,W=0,z=0,H=R;H<T;H+=s){for(var q=C+H*e.strides[1],e0=B;e0<U;e0+=u){var t0=d[q+e0*e.strides[2]+S];o==="max"&&t0>V?V=t0:o==="avg"&&(W+=t0,z++)}if(isNaN(V))break}v[D+L*b+S]=o==="avg"?W/z:V}return m.toTensor()},n.prototype.maxPool=function(e,t){return this.pool(e,t,"max")},n.prototype.maxPoolPositions=function(e,t){for(var o=o0(t.outShape,"int32"),a=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,h=t.padInfo.top,f=t.padInfo.left,p=this.bufferSync(e),d=0;d<t.batchSize;++d)for(var m=0;m<t.inChannels;++m)for(var v=0;v<t.outHeight;++v){for(var g=v*a-h,x=g;x<0;)x+=s;for(var b=Math.min(t.inHeight,c+g),y=0;y<t.outWidth;++y){for(var w=y*i-f,C=w;C<0;)C+=u;for(var S=Math.min(t.inWidth,l+w),k=Number.NEGATIVE_INFINITY,I=-1,R=x;R<b;R+=s)for(var T=R-g,D=C;D<S;D+=u){var L=D-w,O=p.get(d,R,D,m);O>k&&(k=O,I=T*l+L)}o.set(I,d,v,y,m)}}return o.toTensor()},n.prototype.maxPoolBackprop=function(e,t,o,a){G([t,o],"maxPoolBackprop");for(var i=this.maxPoolPositions(t,a),s=a.strideHeight,u=a.strideWidth,c=a.dilationHeight,l=a.dilationWidth,h=a.effectiveFilterHeight,f=a.effectiveFilterWidth,p=f-1-a.padInfo.left,d=h-1-a.padInfo.top,m=o0(t.shape,"float32"),v=this.bufferSync(i),g=this.bufferSync(e),x=0;x<a.batchSize;++x)for(var b=0;b<a.inChannels;++b)for(var y=0;y<a.inHeight;++y)for(var w=0;w<a.inWidth;++w){for(var C=y-d,S=w-p,k=0,I=0;I<h;I+=c){var R=(C+I)/s;if(!(R<0||R>=a.outHeight||Math.floor(R)!==R))for(var T=0;T<f;T+=l){var D=(S+T)/u;if(!(D<0||D>=a.outWidth||Math.floor(D)!==D)){var L=h*f-1-v.get(x,R,D,b)===I*f+T?1:0;L!==0&&(k+=g.get(x,R,D,b)*L)}}}m.set(k,x,y,w,b)}return m.toTensor()},n.prototype.avgPoolBackprop=function(e,t,o){G([e,t],"avgPoolBackprop");for(var a=o.strideHeight,i=o.strideWidth,s=o.filterHeight,u=o.filterWidth,c=o.dilationHeight,l=o.dilationWidth,h=o.effectiveFilterHeight,f=o.effectiveFilterWidth,p=f-1-o.padInfo.left,d=h-1-o.padInfo.top,m=o0(t.shape,"float32"),v=1/(s*u),g=this.bufferSync(e),x=0;x<o.batchSize;++x)for(var b=0;b<o.inChannels;++b)for(var y=0;y<o.inHeight;++y)for(var w=0;w<o.inWidth;++w){for(var C=y-d,S=w-p,k=0,I=0;I<h;I+=c){var R=(C+I)/a;if(!(R<0||R>=o.outHeight||Math.floor(R)!==R))for(var T=0;T<f;T+=l){var D=(S+T)/i;D<0||D>=o.outWidth||Math.floor(D)!==D||(k+=g.get(x,R,D,b))}}m.set(k*v,x,y,w,b)}return m.toTensor()},n.prototype.pool3d=function(e,t,o){G(e,"pool3d");for(var a=t.strideDepth,i=t.strideHeight,s=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,h=t.effectiveFilterDepth,f=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,m=t.padInfo.top,v=t.padInfo.left,g=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=this.readSync(e.dataId),b=o0(t.outShape,e.dtype),y=b.values,w=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],C=t.outShape[2]*t.outShape[3]*t.outShape[4],S=t.outShape[3]*t.outShape[4],k=t.outShape[4],I=0;I<t.batchSize;++I)for(var R=I*w,T=I*e.strides[0],D=0;D<t.inChannels;++D)for(var L=0;L<t.outDepth;++L){for(var O=L*a-d,B=O;B<0;)B+=u;for(var U=Math.min(t.inDepth,h+O),V=R+L*C,W=0;W<t.outHeight;++W){for(var z=W*i-m,H=z;H<0;)H+=c;for(var q=Math.min(t.inHeight,f+z),e0=V+W*S,t0=0;t0<t.outWidth;++t0){for(var i0=t0*s-v,s0=i0;s0<0;)s0+=l;for(var c0=Math.min(t.inWidth,p+i0),p0=e0+t0*k,h0=g,d0=0,D0=0,f0=B;f0<U;f0+=u){for(var x0=T+f0*e.strides[1],m0=H;m0<q;m0+=c){for(var k0=x0+m0*e.strides[2],C0=s0;C0<c0;C0+=l){var _0=x[k0+C0*e.strides[3]+D];if(o==="max"&&_0>h0?h0=_0:o==="avg"&&(d0+=_0,D0++),isNaN(h0))break}if(isNaN(h0))break}if(isNaN(h0))break}y[p0+D]=o==="avg"?d0/D0:h0}}}return b.toTensor()},n.prototype.avgPool3d=function(e,t){return G(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()},n.prototype.avgPool3dBackprop=function(e,t,o){G([e,t],"avgPool3dBackprop");for(var a=o.strideDepth,i=o.strideHeight,s=o.strideWidth,u=o.filterDepth,c=o.filterHeight,l=o.filterWidth,h=o.dilationDepth,f=o.dilationHeight,p=o.dilationWidth,d=o.effectiveFilterDepth,m=o.effectiveFilterHeight,v=o.effectiveFilterWidth,g=d-1-o.padInfo.front,x=v-1-o.padInfo.left,b=m-1-o.padInfo.top,y=o0(t.shape,"float32"),w=1/(u*c*l),C=this.bufferSync(e),S=0;S<o.batchSize;++S)for(var k=0;k<o.inChannels;++k)for(var I=0;I<o.inDepth;++I)for(var R=0;R<o.inHeight;++R)for(var T=0;T<o.inWidth;++T){for(var D=I-g,L=R-b,O=T-x,B=0,U=0;U<d;U+=h){var V=(D+U)/a;if(!(V<0||V>=o.outDepth||Math.floor(V)!==V))for(var W=0;W<m;W+=f){var z=(L+W)/i;if(!(z<0||z>=o.outHeight||Math.floor(z)!==z))for(var H=0;H<v;H+=p){var q=(O+H)/s;q<0||q>=o.outWidth||Math.floor(q)!==q||(B+=C.get(S,V,z,q,k))}}}y.set(B*w,S,I,R,T,k)}return y.toTensor()},n.prototype.maxPool3d=function(e,t){return G(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()},n.prototype.maxPool3dPositions=function(e,t){for(var o=o0(t.outShape,"int32"),a=t.strideDepth,i=t.strideHeight,s=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,h=t.effectiveFilterDepth,f=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,m=t.padInfo.top,v=t.padInfo.left,g=this.bufferSync(e),x=0;x<t.batchSize;++x)for(var b=0;b<t.inChannels;++b)for(var y=0;y<t.outDepth;++y){for(var w=y*a-d,C=w;C<0;)C+=u;for(var S=Math.min(t.inDepth,h+w),k=0;k<t.outHeight;++k){for(var I=k*i-m,R=I;R<0;)R+=c;for(var T=Math.min(t.inHeight,f+I),D=0;D<t.outWidth;++D){for(var L=D*s-v,O=L;O<0;)O+=l;for(var B=Math.min(t.inWidth,p+L),U=Number.NEGATIVE_INFINITY,V=-1,W=C;W<S;W+=u)for(var z=W-w,H=R;H<T;H+=c)for(var q=H-I,e0=O;e0<B;e0+=l){var t0=e0-L,i0=g.get(x,W,H,e0,b);i0>=U&&(U=i0,V=z*f*p+q*f+t0)}o.set(V,x,y,k,D,b)}}}return o.toTensor()},n.prototype.maxPool3dBackprop=function(e,t,o,a){G([t,o],"maxPool3dBackprop");for(var i=this.maxPool3dPositions(t,a),s=a.strideDepth,u=a.strideHeight,c=a.strideWidth,l=a.dilationDepth,h=a.dilationHeight,f=a.dilationWidth,p=a.effectiveFilterDepth,d=a.effectiveFilterHeight,m=a.effectiveFilterWidth,v=p-1-a.padInfo.front,g=m-1-a.padInfo.left,x=d-1-a.padInfo.top,b=o0(t.shape,"float32"),y=this.bufferSync(i),w=this.bufferSync(e),C=0;C<a.batchSize;++C)for(var S=0;S<a.inChannels;++S)for(var k=0;k<a.inDepth;++k)for(var I=0;I<a.inHeight;++I)for(var R=0;R<a.inWidth;++R){for(var T=k-v,D=I-x,L=R-g,O=0,B=0;B<p;B+=l){var U=(T+B)/s;if(!(U<0||U>=a.outDepth||Math.floor(U)!==U))for(var V=0;V<d;V+=h){var W=(D+V)/u;if(!(W<0||W>=a.outHeight||Math.floor(W)!==W))for(var z=0;z<m;z+=f){var H=(L+z)/c;if(!(H<0||H>=a.outWidth||Math.floor(H)!==H)){var q=p*d*m-1-y.get(C,U,W,H,S)===B*d*m+V*m+z?1:0;q!==0&&(O+=w.get(C,U,W,H,S)*q)}}}}b.set(O,C,k,I,R,S)}return b.toTensor()},n.prototype.cast=function(e,t){return or(e,t,this)},n.prototype.reshape=function(e,t){return f2(e,t)},n.prototype.avgPool=function(e,t){return G(e,"avgPool"),this.pool(e,t,"avg").toFloat()},n.prototype.resizeBilinear=function(e,t,o,a){G(e,"resizeBilinear");for(var i=e.shape,s=i[0],u=i[1],c=i[2],l=i[3],h=this.readSync(e.dataId),f=new Float32Array($([s,t,o,l])),p=[a&&t>1?u-1:u,a&&o>1?c-1:c],d=[a&&t>1?t-1:t,a&&o>1?o-1:o],m=0,v=p[0]/d[0],g=p[1]/d[1],x=0;x<s;x++)for(var b=0;b<t;b++)for(var y=v*b,w=Math.floor(y),C=y-w,S=Math.min(u-1,Math.ceil(y)),k=x*e.strides[0]+w*e.strides[1],I=x*e.strides[0]+S*e.strides[1],R=0;R<o;R++)for(var T=g*R,D=Math.floor(T),L=T-D,O=Math.min(c-1,Math.ceil(T)),B=k+D*e.strides[2],U=I+D*e.strides[2],V=k+O*e.strides[2],W=I+O*e.strides[2],z=0;z<l;z++){var H=h[B+z],q=h[U+z],e0=H+(h[V+z]-H)*L,t0=e0+(q+(h[W+z]-q)*L-e0)*C;f[m++]=t0}return H0(f,[s,t,o,l])},n.prototype.resizeBilinearBackprop=function(e,t,o){G([e,t],"resizeBilinearBackprop");for(var a=t.shape,i=a[0],s=a[1],u=a[2],c=a[3],l=e.shape,h=l[1],f=l[2],p=new Float32Array(i*s*u*c),d=[o&&h>1?s-1:s,o&&f>1?u-1:u],m=[o&&h>1?h-1:h,o&&f>1?f-1:f],v=d[0]/m[0],g=d[1]/m[1],x=this.readSync(e.dataId),b=0,y=0;y<i;y++)for(var w=y*t.strides[0],C=0;C<h;C++)for(var S=C*v,k=Math.floor(S),I=Math.min(Math.ceil(S),s-1),R=w+k*t.strides[1],T=w+I*t.strides[1],D=S-k,L=1-D,O=0;O<f;O++)for(var B=O*g,U=Math.floor(B),V=Math.min(Math.ceil(B),u-1),W=B-U,z=1-W,H=R+U*t.strides[2],q=R+V*t.strides[2],e0=T+U*t.strides[2],t0=T+V*t.strides[2],i0=L*z,s0=L*W,c0=D*z,p0=D*W,h0=0;h0<c;h0++){var d0=x[b++];p[H+h0]+=d0*i0,p[q+h0]+=d0*s0,p[e0+h0]+=d0*c0,p[t0+h0]+=d0*p0}return Q0(p,[i,u,s,c],t.dtype)},n.prototype.resizeNearestNeighbor=function(e,t,o,a){G(e,"resizeNearestNeighbor");for(var i=e.shape,s=i[0],u=i[1],c=i[2],l=i[3],h=this.readSync(e.dataId),f=new Float32Array(s*t*o*l),p=[a&&t>1?u-1:u,a&&o>1?c-1:c],d=[a&&t>1?t-1:t,a&&o>1?o-1:o],m=p[0]/d[0],v=p[1]/d[1],g=0,x=0;x<s;x++)for(var b=x*e.strides[0],y=0;y<t;y++)for(var w=m*y,C=b+Math.min(u-1,a?Math.round(w):Math.floor(w))*e.strides[1],S=0;S<o;S++)for(var k=v*S,I=C+Math.min(c-1,a?Math.round(k):Math.floor(k))*e.strides[2],R=0;R<l;R++){var T=h[I+R];f[g++]=T}return H0(f,[s,t,o,l],e.dtype)},n.prototype.resizeNearestNeighborBackprop=function(e,t,o){G([e,t],"resizeNearestNeighborBackprop");for(var a=t.shape,i=a[0],s=a[1],u=a[2],c=a[3],l=e.shape,h=l[1],f=l[2],p=new Float32Array(i*s*u*c),d=this.readSync(e.dataId),m=[o&&h>1?s-1:s,o&&f>1?u-1:u],v=[o&&h>1?h-1:h,o&&f>1?f-1:f],g=m[0]/v[0],x=m[1]/v[1],b=1/g,y=1/x,w=2*Math.ceil(b)+2,C=2*Math.ceil(y)+2,S=0;S<i;S++)for(var k=S*t.strides[0],I=0;I<s;I++)for(var R=k+I*t.strides[1],T=Math.floor(I*b),D=Math.floor(T-w/2),L=0;L<u;L++)for(var O=R+L*t.strides[2],B=Math.floor(L*y),U=Math.floor(B-C/2),V=0;V<c;V++){for(var W=0,z=0;z<w;z++){var H=z+D;if(!(H<0||H>=h)){var q=k+H*e.strides[1],e0=H*g;if(I===Math.min(s-1,o?Math.round(e0):Math.floor(e0)))for(var t0=0;t0<C;t0++){var i0=t0+U;if(!(i0<0||i0>=f)){var s0=q+i0*e.strides[2],c0=i0*x;L===Math.min(u-1,o?Math.round(c0):Math.floor(c0))&&(W+=d[s0+V])}}}}p[O+V]=W}return Q0(p,t.shape,t.dtype)},n.prototype.batchNormalization=function(e,t,o,a,i,s){G([e,t,o,i,s],"batchNorm");for(var u=this.readSync(e.dataId),c=this.readSync(t.dataId),l=this.readSync(o.dataId),h=i?this.readSync(i.dataId):new Float32Array([1]),f=s?this.readSync(s.dataId):new Float32Array([0]),p=new Float32Array(u.length),d=f.length,m=h.length,v=l.length,g=c.length,x=0,b=0,y=0,w=0,C=0;C<u.length;++C)p[C]=f[x++]+(u[C]-c[b++])*h[y++]/Math.sqrt(l[w++]+a),x>=d&&(x=0),b>=g&&(b=0),y>=m&&(y=0),w>=v&&(w=0);return Q0(p,e.shape)},n.prototype.localResponseNormalization4D=function(e,t,o,a,i){G(e,"localResponseNormalization4D");var s=e.shape[3],u=s-1,c=this.readSync(e.dataId),l=e.size,h=new Float32Array(l);function f(v){for(var g=v%s,x=v-g+Math.max(0,g-t),b=v-g+Math.min(g+t,u),y=0;x<=b;x++){var w=c[x];y+=w*w}return y}for(var p=0;p<l;p++){var d=f(p),m=c[p]*Math.pow(o+a*d,-i);h[p]=m}return Q0(h,e.shape)},n.prototype.LRNGrad=function(e,t,o,a,i,s,u){G(e,"LRNGrad");for(var c=e.shape[3],l=this.readSync(e.dataId),h=this.readSync(t.dataId),f=this.readSync(o.dataId),p=new Float32Array(e.size),d=e.size,m=0;m<d;m++){for(var v=m%c,g=m-v+Math.max(0,v-a),x=m-v+Math.min(c,v+a+1),b=0,y=g;y<x;y++)b+=Math.pow(h[y],2);for(b=s*b+i,y=g;y<x;y++){var w=-2*s*u*h[y]*f[m]/b;m===y&&(w+=Math.pow(b,-u)),w*=l[m],p[y]+=w}}return Q0(p,e.shape)},n.prototype.multinomial=function(e,t,o,a){G(e,"multinomial");for(var i=t?e:q1(e),s=i.shape[0],u=i.shape[1],c=w0([s,o],"int32"),l=this.readSync(c.dataId),h=this.readSync(i.dataId),f=0;f<s;++f){var p=f*u,d=new Float32Array(u-1);d[0]=h[p];for(var m=1;m<d.length;++m)d[m]=d[m-1]+h[p+m];for(var v=an(a.toString()),g=f*o,x=0;x<o;++x){var b=v();l[g+x]=d.length;for(var y=0;y<d.length;y++)if(b<d[y]){l[g+x]=y;break}}}return c},n.prototype.oneHot=function(e,t,o,a){G(e,"oneHot");var i=new Float32Array(e.size*t);i.fill(a);for(var s=this.readSync(e.dataId),u=0;u<e.size;++u)s[u]>=0&&s[u]<t&&(i[u*t+s[u]]=o);return re(i,[e.size,t],"int32")},n.prototype.nonMaxSuppression=function(e,t,o,a,i){return G(e,"nonMaxSuppression"),T2(this.readSync(e.dataId),this.readSync(t.dataId),o,a,i)},n.prototype.fft=function(e){return this.fftBatch(e,!1)},n.prototype.ifft=function(e){return this.fftBatch(e,!0)},n.prototype.fftBatch=function(e,t){for(var o=e.shape[0],a=e.shape[1],i=o0(e.shape,"float32"),s=o0(e.shape,"float32"),u=f1(e).as2D(o,a),c=S1(e).as2D(o,a),l=0;l<o;l++)for(var h=u.slice([l,0],[1,a]),f=c.slice([l,0],[1,a]),p=G0(h,f),d=this.readSync(this.fftImpl(p,t).dataId),m=0;m<a;m++){var v=W3(d,m);i.values[l*a+m]=v.real,s.values[l*a+m]=v.imag}return G0(i.toTensor(),s.toTensor()).as2D(o,a)},n.prototype.fftImpl=function(e,t){var o=e.as1D(),a=o.size;if(this.isExponentOf2(a)){var i=this.fftRadix2(o,a,t).as2D(e.shape[0],e.shape[1]);return t&&(i=G0(f1(i).div(j(a)),S1(i).div(j(a)))),i}var s=this.readSync(e.dataId),u=function(c){for(var l=new Float32Array(c.length/2),h=new Float32Array(c.length/2),f=0;f<c.length;f+=2)l[f/2]=c[f],h[f/2]=c[f+1];return{real:l,imag:h}}(this.fourierTransformByMatmul(s,a,t));return G0(u.real,u.imag).as2D(e.shape[0],e.shape[1])},n.prototype.isExponentOf2=function(e){return(e&e-1)==0},n.prototype.fftRadix2=function(e,t,o){if(t===1)return e;var a=this.readSync(e.dataId),i=t/2,s=function(g){for(var x=Math.ceil(g.length/4),b=new Float32Array(x),y=new Float32Array(x),w=0;w<g.length;w+=4)b[Math.floor(w/4)]=g[w],y[Math.floor(w/4)]=g[w+1];return{real:b,imag:y}}(a),u=G0(s.real,s.imag).as1D(),c=function(g){for(var x=Math.floor(g.length/4),b=new Float32Array(x),y=new Float32Array(x),w=2;w<g.length;w+=4)b[Math.floor(w/4)]=g[w],y[Math.floor(w/4)]=g[w+1];return{real:b,imag:y}}(a),l=G0(c.real,c.imag).as1D();u=this.fftRadix2(u,i,o),l=this.fftRadix2(l,i,o);var h=function(g,x){for(var b=new Float32Array(g/2),y=new Float32Array(g/2),w=0;w<Math.ceil(g/2);w++){var C=(x?2:-2)*Math.PI*(w/g);b[w]=Math.cos(C),y[w]=Math.sin(C)}return{real:b,imag:y}}(t,o),f=G0(h.real,h.imag).mul(l),p=u.add(f),d=u.sub(f),m=f1(p).concat(f1(d)),v=S1(p).concat(S1(d));return G0(m,v).as1D()},n.prototype.fourierTransformByMatmul=function(e,t,o){for(var a=new Float32Array(2*t),i=0;i<t;i++){for(var s=0,u=0,c=0;c<t;c++){var l=L7(i*c,t,o),h=W3(e,c);s+=h.real*l.real-h.imag*l.imag,u+=h.real*l.imag+h.imag*l.real}o&&(s/=t,u/=t),B7(a,s,u,i)}return a},n.prototype.depthToSpace=function(e,t,o){E(o==="NHWC",function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+o}),E(t>1,function(){return"blockSize should be > 1 for depthToSpace, but was: "+t});for(var a=e.shape[0],i=e.shape[1],s=e.shape[2],u=e.shape[3],c=i*t,l=s*t,h=u/(t*t),f=this.readSync(e.dataId),p=new Float32Array(a*c*l*h),d=0,m=0;m<a;++m)for(var v=0;v<c;++v)for(var g=Math.floor(v/t),x=v%t,b=0;b<l;++b)for(var y=Math.floor(b/t),w=(x*t+b%t)*h,C=0;C<h;++C){var S=C+w+u*(y+s*(g+i*m));p[d++]=f[S]}return Q0(p,[a,c,l,h])},n.prototype.broadcastedBinaryOp=function(e,t,o,a){var i=l0(e.shape,t.shape),s=o0(i,o),u=this.readSync(e.dataId),c=this.readSync(t.dataId),l=ee(e.shape,i),h=ee(t.shape,i),f=s.values;if(l.length+h.length===0)for(var p=0;p<f.length;++p)f[p]=a(u[p%u.length],c[p%c.length]);else{var d=this.bufferSync(e),m=this.bufferSync(t),v=function(g){var x=s.indexToLoc(g),b=x.slice(-e.rank);l.forEach(function(S){return b[S]=0});var y=d.locToIndex(b),w=x.slice(-t.rank);h.forEach(function(S){return w[S]=0});var C=m.locToIndex(w);f[g]=a(u[y],c[C])};for(p=0;p<f.length;++p)v(p)}return s.toTensor()},n.prototype.broadcastedBinaryComplexOp=function(e,t,o){var a=l0(e.shape,t.shape),i=o0(a,"float32"),s=o0(a,"float32"),u=this.readSync(e.dataId),c=this.readSync(t.dataId),l=ee(e.shape,a),h=ee(t.shape,a),f=i.values,p=s.values;if(l.length+h.length===0)for(var d=0;d<f.length;d++){var m=d%u.length,v=d%c.length,g=o(u[2*m],u[2*m+1],c[2*v],c[2*v+1]);f[d]=g.real,p[d]=g.imag}else{var x=this.bufferSync(this.data.get(e.dataId).complexTensors.real),b=this.bufferSync(this.data.get(t.dataId).complexTensors.real),y=function(w){var C=i.indexToLoc(w),S=C.slice(-e.rank);l.forEach(function(D){return S[D]=0});var k=x.locToIndex(S),I=C.slice(-t.rank);h.forEach(function(D){return I[D]=0});var R=b.locToIndex(I),T=o(u[2*k],u[2*k+1],c[2*R],c[2*R+1]);f[w]=T.real,p[w]=T.imag};for(d=0;d<f.length;d++)y(d)}return this.complex(i.toTensor(),s.toTensor())},n.prototype.split=function(e,t,o){return sr(e,t,o)},n.prototype.dispose=function(){},n.prototype.floatPrecision=function(){return 32},n.prototype.epsilon=function(){return 1e-7},n.prototype.cropAndResize=function(e,t,o,a,i,s){for(var u=e.shape,c=u[0],l=u[1],h=u[2],f=u[3],p=t.shape[0],d=a[0],m=a[1],v=o0([p,d,m,f],"float32"),g=this.readSync(t.dataId),x=this.readSync(o.dataId),b=this.readSync(e.dataId),y=e.strides,w=v.strides,C=0;C<p;C++){var S=4*C,k=g[S],I=g[S+1],R=g[S+2],T=g[S+3],D=x[C];if(!(D>=c))for(var L=d>1?(R-k)*(l-1)/(d-1):0,O=m>1?(T-I)*(h-1)/(m-1):0,B=0;B<d;B++){var U=d>1?k*(l-1)+B*L:.5*(k+R)*(l-1);if(U<0||U>l-1)for(var V=0;V<m;V++)for(var W=0;W<f;W++){var z=W+V*w[2]+B*w[1]+C*w[0];v.values[z]=s}else if(i==="bilinear"){var H=Math.floor(U),q=Math.ceil(U),e0=U-H;for(V=0;V<m;V++)if((f0=m>1?I*(h-1)+V*O:.5*(I+T)*(h-1))<0||f0>h-1)for(W=0;W<f;W++)z=W+V*w[2]+B*w[1]+C*w[0],v.values[z]=s;else{var t0=Math.floor(f0),i0=Math.ceil(f0),s0=f0-t0;for(W=0;W<f;W++){var c0=b[z=W+t0*y[2]+H*y[1]+D*y[0]],p0=b[z=W+i0*y[2]+H*y[1]+D*y[0]],h0=b[z=W+t0*y[2]+q*y[1]+D*y[0]],d0=c0+(p0-c0)*s0,D0=h0+(b[z=W+i0*y[2]+q*y[1]+D*y[0]]-h0)*s0;z=W+V*w[2]+B*w[1]+C*w[0],v.values[z]=d0+(D0-d0)*e0}}}else for(V=0;V<m;++V){var f0;if((f0=m>1?I*(h-1)+V*O:.5*(I+T)*(h-1))<0||f0>h-1)for(W=0;W<f;W++)z=W+V*w[2]+B*w[1]+C*w[0],v.values[z]=s;else{var x0=Math.round(f0),m0=Math.round(U);for(W=0;W<f;W++){var k0=W+x0*y[2]+m0*y[1]+D*y[0],C0=W+V*w[2]+B*w[1]+C*w[0];v.values[C0]=b[k0]}}}}}return v.toTensor()},n.prototype.sparseToDense=function(e,t,o,a){var i=qt(0,e,o),s=i.sliceRank,u=i.numUpdates,c=i.sliceSize,l=i.strides,h=i.outputSize;return this.scatter(e,t,o,h,c,u,s,l,a,!1)},n.prototype.gatherND=function(e,t){var o=t.shape,a=o[o.length-1],i=J4(e,t),s=i[0],u=i[1],c=i[2],l=i[3];if(u===0)return H0([],s,e.dtype);for(var h=new rt([u,c],e.dtype),f=this.readSync(t.dataId),p=this.readSync(e.dataId),d=0;d<u;d++){for(var m=[],v=0,g=0;g<a;g++){var x=f[d*a+g];v+=x*l[g],m.push(x)}if(v<0||v>=e.size/c)throw new Error("Invalid indices: "+m+" does not index into "+e.shape);for(var b=0;b<c;b++)h.values[d*c+b]=p[v*c+b]}return h.toTensor().reshape(s)},n.prototype.scatterND=function(e,t,o){var a=qt(0,e,o),i=a.sliceRank,s=a.numUpdates,u=a.sliceSize,c=a.strides,l=a.outputSize,h=j(0);return this.scatter(e,t,o,l,u,s,i,c,h,!0)},n.prototype.fill=function(e,t,o){var a=Ot(o=o||ht(t),$(e));return a.fill(t),M.makeTensor(a,e,o,this)},n.prototype.onesLike=function(e){if(e.dtype==="string")throw new Error("onesLike is not supported for string tensors");return this.fill(e.shape,1,e.dtype)},n.prototype.zerosLike=function(e){var t=Ot(e.dtype,$(e.shape));return this.makeOutput(t,e.shape,e.dtype)},n.prototype.linspace=function(e,t,o){return ar(e,t,o)},n.prototype.scatter=function(e,t,o,a,i,s,u,c,l,h){var f=[a/i,i],p=this.readSync(e.dataId),d=this.readSync(t.dataId);if(a===0)return H0([],o,t.dtype);var m=new rt(f,t.dtype);m.values.fill(this.readSync(l.dataId)[0]);for(var v=0;v<s;v++){for(var g=[],x=0,b=0;b<u;b++){var y=p[v*u+b];g.push(y),x+=y*c[b]}if(x<0||x>=a/i)throw new Error("Invalid indices: "+g+" does not index into "+o);for(var w=0;w<i;w++)h?m.values[x*i+w]+=d[v*i+w]:m.values[x*i+w]=t.rank===0?d[0]:d[v*i+w]}return m.toTensor().reshape(o)},n}(nr);M.registerBackend("cpu",function(){return new ai},1);for(var jn=0,s4=[{kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(r){var n=r.inputs,e=r.backend,t=r.attrs,o=n,a=o.boxes,i=o.scores,s=t,u=s.maxOutputSize,c=s.iouThreshold,l=s.scoreThreshold,h=s.softNmsSigma,f=e;G(a,"NonMaxSuppressionWithScore");var p=N2(f.data.get(a.dataId).values,f.data.get(i.dataId).values,u,c,l,h);return[p.selectedIndices,p.selectedScores]}},{kernelName:"Square",backendName:"cpu",kernelFunc:function(r){var n=r.inputs,e=r.backend,t=n.x,o=e;G(t,"square");for(var a=o.data.get(t.dataId).values,i=new Float32Array(a.length),s=0;s<a.length;++s){var u=a[s];i[s]=u*u}return{dataId:o.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}},{kernelName:it,backendName:"cpu",kernelFunc:function(r){var n=r.inputs,e=r.backend,t=n,o=t.a,a=t.b,i=e;G([o,a],it);var s=i.data.get(o.dataId).values,u=i.data.get(a.dataId).values,c=function(f,p,d,m,v,g){var x=l0(f,p),b=x.length,y=M1(x),w=nt(v,$(x)),C=f.length,S=p.length,k=M1(f),I=M1(p),R=ee(f,x),T=ee(p,x);if(R.length+T.length===0)for(var D=0;D<w.length;++D)w[D]=g(d[D%d.length],m[D%m.length]);else{var L=function(O){var B=d6(O,b,y),U=B.slice(-C);R.forEach(function(H){return U[H]=0});var V=D3(U,C,k),W=B.slice(-S);T.forEach(function(H){return W[H]=0});var z=D3(W,S,I);w[O]=g(d[V],m[z])};for(D=0;D<w.length;++D)L(D)}return[w,x]}(o.shape,a.shape,s,u,o.dtype,function(f,p){var d=f-p;return d*d}),l=c[0],h=c[1];return{dataId:i.write(l,h,o.dtype),shape:h,dtype:o.dtype}}}];jn<s4.length;jn++)D4(s4[jn]);var Se,ii=function(r){this.variableNames=["A"];var n=X0(),e=r[0],t=r[1];this.outputShape=r,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+t+".0, "+e+`.0);

        vec4 values = `+n.texture2D+`(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `},si=function(r){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var n=X0(),e=r[0],t=r[1];this.outputShape=r,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(`+t+".0, "+e+`.0);
            vec4 values = `+n.texture2D+`(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        `+n.output+` = result;
      }
    `};for(var qn=0,u4=[{kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(r){var n=r.inputs,e=r.backend,t=r.attrs,o=n.pixels,a=t.numChannels,i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,s=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,u=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=u[0],l=u[1],h=[l,c],f=[l,c,a];(s||i)&&(Se==null&&(Se=document.createElement("canvas").getContext("2d")),Se.canvas.width=c,Se.canvas.height=l,Se.drawImage(o,0,0,c,l),o=Se.canvas);var p=e.makeTensorInfo(h,"int32");e.texData.get(p.dataId).usage=i1.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(p.dataId),o);var d=P().getBool("WEBGL_PACK")?new si(f):new ii(f),m=e.runWebGLProgram(d,[p],"int32");return e.disposeData(p.dataId),m}},{kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(r){var n=r.inputs,e=r.backend,t=r.attrs;Vt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var o=n,a=o.boxes,i=o.scores,s=t,u=s.maxOutputSize,c=s.iouThreshold,l=s.scoreThreshold,h=s.softNmsSigma,f=e,p=N2(f.readSync(a.dataId),f.readSync(i.dataId),u,c,l,h);return[p.selectedIndices,p.selectedScores]}},{kernelName:"Square",backendName:"webgl",kernelFunc:function(r){var n=r.inputs,e=r.backend,t=n.x,o=e,a=new a0(t.shape,"return x * x;");return o.runWebGLProgram(a,[t],t.dtype)}},{kernelName:it,backendName:"webgl",kernelFunc:function(r){var n=r.inputs,e=r.backend,t=n,o=t.a,a=t.b,i=e,s=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new G1("return (a - b) * (a - b);",o.shape,a.shape):new S0("return (a - b) * (a - b);",o.shape,a.shape);return i.compileAndRun(s,[o,a])}}];qn<u4.length;qn++)D4(u4[qn]);for(var Kn=0,c4=[{kernelName:"Square",gradFunc:function(r,n){var e=n[0];return{x:function(){return r.mul(e.toFloat().mul(2))}}}},{kernelName:it,gradFunc:function(r,n){var e=n[0],t=n[1],o=j(2);return{a:function(){return $0(r,$0(o,O0(e,t)))},b:function(){return $0(r,$0(o,O0(t,e)))}}}}];Kn<c4.length;Kn++)r6(c4[Kn]);var ui=function(){function r(){}return r.prototype.fetch=function(n,e){return fetch(n,e)},r.prototype.now=function(){return performance.now()},r.prototype.encode=function(n,e){if(e!=="utf-8"&&e!=="utf8")throw new Error("Browser's encoder only supports utf-8, but got "+e);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(n)},r.prototype.decode=function(n,e){return new TextDecoder(e).decode(n)},r}();P().get("IS_BROWSER")&&P().setPlatform("browser",new ui);var Xn,ci=function(){return require("node-fetch")},li=function(){function r(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}return r.prototype.fetch=function(n,e){return P().global.fetch!=null?P().global.fetch(n,e):(Xn==null&&(Xn=ci()),Xn(n,e))},r.prototype.now=function(){var n=process.hrtime();return 1e3*n[0]+n[1]/1e6},r.prototype.encode=function(n,e){if(e!=="utf-8"&&e!=="utf8")throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(n)},r.prototype.decode=function(n,e){return n.length===0?"":new this.util.TextDecoder(e).decode(n)},r}();P().get("IS_NODE")&&P().setPlatform("node",new li);var v2={float32:4,int32:4,uint16:2,uint8:1,bool:1},Zt=4;function Zr(r,n){for(var e={},t=0,o=function(s){var u=s.name,c=s.dtype,l=s.shape,h=$(l),f=void 0;if("quantization"in s){var p=s.quantization;if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error("Weight "+s.name+" has unknown quantization dtype "+p.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var d=v2[p.dtype],m=r.slice(t,t+h*d),v=p.dtype==="uint8"?new Uint8Array(m):new Uint16Array(m);if(c==="float32")f=Float32Array.from(v,function(C){return C*p.scale+p.min});else{if(c!=="int32")throw new Error("Unsupported dtype in weight '"+u+"': "+c);f=Int32Array.from(v,function(C){return Math.round(C*p.scale+p.min)})}t+=h*d}else if(c==="string"){var g=$(s.shape);f=[];for(var x=0;x<g;x++){var b=new Uint32Array(r.slice(t,t+Zt))[0];t+=Zt;var y=new Uint8Array(r.slice(t,t+b));f.push(y),t+=b}}else{var w=v2[c];if(m=r.slice(t,t+h*w),c==="float32")f=new Float32Array(m);else if(c==="int32")f=new Int32Array(m);else{if(c!=="bool")throw new Error("Unsupported dtype in weight '"+u+"': "+c);f=new Uint8Array(m)}t+=h*w}e[u]=H0(f,l,c)},a=0,i=n;a<i.length;a++)o(i[a]);return e}function hi(r){if(r===null)throw new Error("Invalid input value: "+JSON.stringify(r));var n=0,e=[];r.forEach(function(a){if(n+=a.byteLength,e.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+a.constructor.name)});var t=new Uint8Array(n),o=0;return e.forEach(function(a){t.set(new Uint8Array(a.buffer),o),o+=a.byteLength}),t.buffer}var m2=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function l4(r){return m2?Buffer.byteLength(r):new Blob([r]).size}function Q2(r){var n=0;r.forEach(function(o){n+=o.byteLength});var e=new Uint8Array(n),t=0;return r.forEach(function(o){e.set(new Uint8Array(o),t),t+=o.byteLength}),e.buffer}function h4(r){for(r=r.trim();r.endsWith("/");)r=r.slice(0,r.length-1);var n=r.split("/");return n[n.length-1]}function yt(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:l4(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:l4(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}var s1=function(){function r(){this.saveRouters=[],this.loadRouters=[]}return r.getInstance=function(){return r.instance==null&&(r.instance=new r),r.instance},r.registerSaveRouter=function(n){r.getInstance().saveRouters.push(n)},r.registerLoadRouter=function(n){r.getInstance().loadRouters.push(n)},r.getSaveHandlers=function(n){return r.getHandlers(n,"save")},r.getLoadHandlers=function(n,e){return r.getHandlers(n,"load",e)},r.getHandlers=function(n,e,t){var o=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(function(a){var i=a(n,t);i!==null&&o.push(i)}),o},r}(),Le="://",oe=function(){function r(){this.managers={}}return r.getInstance=function(){return r.instance==null&&(r.instance=new r),r.instance},r.registerManager=function(n,e){E(n!=null,function(){return"scheme must not be undefined or null."}),n.endsWith(Le)&&(n=n.slice(0,n.indexOf(Le))),E(n.length>0,function(){return"scheme must not be an empty string."});var t=r.getInstance();E(t.managers[n]==null,function(){return"A model store manager is already registered for scheme '"+n+"'."}),t.managers[n]=e},r.getManager=function(n){var e=this.getInstance().managers[n];if(e==null)throw new Error("Cannot find model manager for scheme '"+n+"'");return e},r.getSchemes=function(){return Object.keys(this.getInstance().managers)},r}();function Ft(r){if(r.indexOf(Le)===-1)throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+oe.getSchemes().join(","));return{scheme:r.split(Le)[0],path:r.split(Le)[1]}}function f4(r,n,e){return e===void 0&&(e=!1),X(this,void 0,void 0,function(){var t,o,a,i,s,u,c,l,h;return Y(this,function(f){switch(f.label){case 0:return E(r!==n,function(){return"Old path and new path are the same: '"+r+"'"}),E((t=s1.getLoadHandlers(r)).length>0,function(){return"Copying failed because no load handler is found for source URL "+r+"."}),E(t.length<2,function(){return"Copying failed because more than one ("+t.length+") load handlers for source URL "+r+"."}),o=t[0],E((a=s1.getSaveHandlers(n)).length>0,function(){return"Copying failed because no save handler is found for destination URL "+n+"."}),E(a.length<2,function(){return"Copying failed because more than one ("+t.length+") save handlers for destination URL "+n+"."}),i=a[0],s=Ft(r).scheme,u=Ft(r).path,c=s===Ft(r).scheme,[4,o.load()];case 1:return l=f.sent(),e&&c?[4,oe.getManager(s).removeModel(u)]:[3,3];case 2:f.sent(),f.label=3;case 3:return[4,i.save(l)];case 4:return h=f.sent(),!e||c?[3,6]:[4,oe.getManager(s).removeModel(u)];case 5:f.sent(),f.label=6;case 6:return[2,h.modelArtifactsInfo]}})})}var ve="models_store",te="model_info_store";function e5(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var r=window||self,n=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(n==null)throw new Error("The current browser does not appear to support IndexedDB.");return n}function g2(r){var n=r.result;n.createObjectStore(ve,{keyPath:"modelPath"}),n.createObjectStore(te,{keyPath:"modelPath"})}var We=function(){function r(n){if(this.indexedDB=e5(),n==null||!n)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=n}return r.prototype.save=function(n){return X(this,void 0,void 0,function(){return Y(this,function(e){if(n.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,n)]})})},r.prototype.load=function(){return X(this,void 0,void 0,function(){return Y(this,function(n){return[2,this.databaseAction(this.modelPath)]})})},r.prototype.databaseAction=function(n,e){var t=this;return new Promise(function(o,a){var i=t.indexedDB.open("tensorflowjs",1);i.onupgradeneeded=function(){return g2(i)},i.onsuccess=function(){var s=i.result;if(e==null){var u=s.transaction(ve,"readonly"),c=u.objectStore(ve).get(t.modelPath);c.onsuccess=function(){if(c.result==null)return s.close(),a(new Error("Cannot find model with path '"+t.modelPath+"' in IndexedDB."));o(c.result.modelArtifacts)},c.onerror=function(m){return s.close(),a(c.error)},u.oncomplete=function(){return s.close()}}else{var l,h=yt(e),f=s.transaction(te,"readwrite"),p=f.objectStore(te),d=p.put({modelPath:t.modelPath,modelArtifactsInfo:h});d.onsuccess=function(){var m=(l=s.transaction(ve,"readwrite")).objectStore(ve).put({modelPath:t.modelPath,modelArtifacts:e,modelArtifactsInfo:h});m.onsuccess=function(){return o({modelArtifactsInfo:h})},m.onerror=function(v){var g=(p=f.objectStore(te)).delete(t.modelPath);g.onsuccess=function(){return s.close(),a(m.error)},g.onerror=function(x){return s.close(),a(m.error)}}},d.onerror=function(m){return s.close(),a(d.error)},f.oncomplete=function(){l==null?s.close():l.oncomplete=function(){return s.close()}}}},i.onerror=function(s){return a(i.error)}})},r.URL_SCHEME="indexeddb://",r}(),p4=function(r){return P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(We.URL_SCHEME)?(n=r.slice(We.URL_SCHEME.length),new We(n)):null;var n};s1.registerSaveRouter(p4),s1.registerLoadRouter(p4);var fi=function(){function r(){this.indexedDB=e5()}return r.prototype.listModels=function(){return X(this,void 0,void 0,function(){var n=this;return Y(this,function(e){return[2,new Promise(function(t,o){var a=n.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return g2(a)},a.onsuccess=function(){var i=a.result,s=i.transaction(te,"readonly"),u=s.objectStore(te).getAll();u.onsuccess=function(){for(var c={},l=0,h=u.result;l<h.length;l++){var f=h[l];c[f.modelPath]=f.modelArtifactsInfo}t(c)},u.onerror=function(c){return i.close(),o(u.error)},s.oncomplete=function(){return i.close()}},a.onerror=function(i){return o(a.error)}})]})})},r.prototype.removeModel=function(n){return X(this,void 0,void 0,function(){var e=this;return Y(this,function(t){var o;return n=(o=n).startsWith(We.URL_SCHEME)?o.slice(We.URL_SCHEME.length):o,[2,new Promise(function(a,i){var s=e.indexedDB.open("tensorflowjs",1);s.onupgradeneeded=function(){return g2(s)},s.onsuccess=function(){var u,c=s.result,l=c.transaction(te,"readwrite"),h=l.objectStore(te),f=h.get(n);f.onsuccess=function(){if(f.result==null)return c.close(),i(new Error("Cannot find model with path '"+n+"' in IndexedDB."));var p=h.delete(n),d=function(){var m=(u=c.transaction(ve,"readwrite")).objectStore(ve).delete(n);m.onsuccess=function(){return a(f.result.modelArtifactsInfo)},m.onerror=function(v){return i(f.error)}};p.onsuccess=d,p.onerror=function(m){return d(),c.close(),i(f.error)}},f.onerror=function(p){return c.close(),i(f.error)},l.oncomplete=function(){u==null?c.close():u.oncomplete=function(){return c.close()}}},s.onerror=function(u){return i(s.error)}})]})})},r}();if(P().getBool("IS_BROWSER"))try{oe.registerManager(We.URL_SCHEME,new fi)}catch{}var z1="/",Fe="tensorflowjs_models",t5="info",pi="model_topology",di="weight_specs",vi="weight_data",mi="model_metadata";function n5(r){return{info:[Fe,r,t5].join(z1),topology:[Fe,r,pi].join(z1),weightSpecs:[Fe,r,di].join(z1),weightData:[Fe,r,vi].join(z1),modelMetadata:[Fe,r,mi].join(z1)}}function gi(r){var n=r.split(z1);if(n.length<3)throw new Error("Invalid key format: "+r);return n.slice(1,n.length-1).join(z1)}var Ve=function(){function r(n){if(!P().getBool("IS_BROWSER")||typeof window>"u"||window.localStorage===void 0)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,n==null||!n)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=n,this.keys=n5(this.modelPath)}return r.prototype.save=function(n){return X(this,void 0,void 0,function(){var e,t,o;return Y(this,function(a){if(n.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");e=JSON.stringify(n.modelTopology),t=JSON.stringify(n.weightSpecs),o=yt(n);try{return this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,t),this.LS.setItem(this.keys.weightData,function(i){if(m2)return Buffer.from(i).toString("base64");for(var s=new Uint8Array(i),u="",c=0,l=s.length;c<l;c++)u+=String.fromCharCode(s[c]);return btoa(u)}(n.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,userDefinedMetadata:n.userDefinedMetadata})),[2,{modelArtifactsInfo:o}]}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+o.modelTopologyBytes+", weightSpecsBytes="+o.weightSpecsBytes+", weightDataBytes="+o.weightDataBytes+".")}return[2]})})},r.prototype.load=function(){return X(this,void 0,void 0,function(){var n,e,t,o,a,i,s;return Y(this,function(u){if((n=JSON.parse(this.LS.getItem(this.keys.info)))==null)throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if(n.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(e={},(t=JSON.parse(this.LS.getItem(this.keys.topology)))==null)throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(e.modelTopology=t,(o=JSON.parse(this.LS.getItem(this.keys.weightSpecs)))==null)throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(e.weightSpecs=o,(a=this.LS.getItem(this.keys.modelMetadata))!=null&&(i=JSON.parse(a),e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,e.userDefinedMetadata=i.userDefinedMetadata),(s=this.LS.getItem(this.keys.weightData))==null)throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return e.weightData=function(c){if(m2){var l=Buffer.from(c,"base64");return l.buffer.slice(l.byteOffset,l.byteOffset+l.byteLength)}for(var h=atob(c),f=new Uint8Array(h.length),p=0;p<h.length;++p)f.set([h.charCodeAt(p)],p);return f.buffer}(s),[2,e]})})},r.URL_SCHEME="localstorage://",r}(),d4=function(r){return P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ve.URL_SCHEME)?(n=r.slice(Ve.URL_SCHEME.length),new Ve(n)):null;var n};s1.registerSaveRouter(d4),s1.registerLoadRouter(d4);var yi=function(){function r(){E(P().getBool("IS_BROWSER"),function(){return"Current environment is not a web browser"}),E(typeof window>"u"||window.localStorage!==void 0,function(){return"Current browser does not appear to support localStorage"}),this.LS=window.localStorage}return r.prototype.listModels=function(){return X(this,void 0,void 0,function(){var n,e,t,o,a,i;return Y(this,function(s){for(n={},e=Fe+z1,t=z1+t5,o=0;o<this.LS.length;++o)(a=this.LS.key(o)).startsWith(e)&&a.endsWith(t)&&(i=gi(a),n[i]=JSON.parse(this.LS.getItem(a)));return[2,n]})})},r.prototype.removeModel=function(n){return X(this,void 0,void 0,function(){var e,t;return Y(this,function(o){var a;if(n=(a=n).startsWith(Ve.URL_SCHEME)?a.slice(Ve.URL_SCHEME.length):a,e=n5(n),this.LS.getItem(e.info)==null)throw new Error("Cannot find model at path '"+n+"'");return t=JSON.parse(this.LS.getItem(e.info)),this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),[2,t]})})},r}();if(P().getBool("IS_BROWSER"))try{oe.registerManager(Ve.URL_SCHEME,new yi)}catch{}var xi="model",bi=".json",wi=".weights.bin";function v4(r){return new Promise(function(n){return setTimeout(n)}).then(r)}var Yn=function(){function r(n){if(!P().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");n.startsWith(r.URL_SCHEME)&&(n=n.slice(r.URL_SCHEME.length)),n!=null&&n.length!==0||(n=xi),this.modelTopologyFileName=n+bi,this.weightDataFileName=n+wi}return r.prototype.save=function(n){return X(this,void 0,void 0,function(){var e,t,o,a,i,s;return Y(this,function(u){switch(u.label){case 0:if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");if(e=window.URL.createObjectURL(new Blob([n.weightData],{type:"application/octet-stream"})),!(n.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 1:return t=[{paths:["./"+this.weightDataFileName],weights:n.weightSpecs}],o={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t},a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),(i=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,i.href=a,[4,v4(function(){return i.dispatchEvent(new MouseEvent("click"))})];case 2:return u.sent(),n.weightData==null?[3,4]:((s=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,s.href=e,[4,v4(function(){return s.dispatchEvent(new MouseEvent("click"))})]);case 3:u.sent(),u.label=4;case 4:return[2,{modelArtifactsInfo:yt(n)}]}})})},r.URL_SCHEME="downloads://",r}(),Ci=function(){function r(n){if(n==null||n.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+n);this.files=n}return r.prototype.load=function(){return X(this,void 0,void 0,function(){var n,e,t=this;return Y(this,function(o){return n=this.files[0],e=this.files.slice(1),[2,new Promise(function(a,i){var s=new FileReader;s.onload=function(u){var c=JSON.parse(u.target.result),l=c.modelTopology;if(l!=null){e.length===0&&a({modelTopology:l});var h=c.weightsManifest;if(h!=null){var f;try{f=t.checkManifestAndWeightFiles(h,e)}catch(v){return void i(v)}var p=[],d=[],m=[];h.forEach(function(v){v.paths.forEach(function(g){d.push(g),m.push(null)}),p.push.apply(p,v.weights)}),h.forEach(function(v){v.paths.forEach(function(g){var x=new FileReader;x.onload=function(b){var y=b.target.result,w=d.indexOf(g);m[w]=y,m.indexOf(null)===-1&&a({modelTopology:l,weightSpecs:p,weightData:Q2(m),format:c.format,generatedBy:c.generatedBy,convertedBy:c.convertedBy,userDefinedMetadata:c.userDefinedMetadata})},x.onerror=function(b){return i("Failed to weights data from file of path '"+g+"'.")},x.readAsArrayBuffer(f[g])})})}else i(new Error("weightManifest field is missing from file "+n.name))}else i(new Error("modelTopology field is missing from file "+n.name))},s.onerror=function(u){return i("Failed to read model topology and weights manifest JSON from file '"+n.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},s.readAsText(n)})]})})},r.prototype.checkManifestAndWeightFiles=function(n,e){for(var t=[],o=e.map(function(u){return h4(u.name)}),a={},i=0,s=n;i<s.length;i++)s[i].paths.forEach(function(u){var c=h4(u);if(t.indexOf(c)!==-1)throw new Error("Duplicate file basename found in weights manifest: '"+c+"'");if(t.push(c),o.indexOf(c)===-1)throw new Error("Weight file with basename '"+c+"' is not provided.");a[u]=e[o.indexOf(c)]});if(t.length!==e.length)throw new Error("Mismatch in the number of files in weights manifest ("+t.length+") and the number of weight files provided ("+e.length+").");return a},r}();function m4(r,n,e,t){(function(a){E(a!=null&&Array.isArray(a)&&a.length>0,function(){return"promises must be a none empty array"})})(r),function(a,i){E(a>=0&&a<=1,function(){return"Progress fraction must be in range [0, 1], but got startFraction "+a}),E(i>=0&&i<=1,function(){return"Progress fraction must be in range [0, 1], but got endFraction "+i}),E(i>=a,function(){return"startFraction must be no more than endFraction, but got startFraction "+a+" and endFraction "+i})}(e=e??0,t=t??1);var o=0;return Promise.all(r.map(function(a){return a.then(function(i){var s=e+ ++o/r.length*(t-e);return n(s),i}),a}))}function r5(r,n){return X(this,void 0,void 0,function(){var e,t,o,a,i,s,u,c,l;return Y(this,function(h){switch(h.label){case 0:return n==null&&(n={}),e=n.fetchFunc==null?P().platform.fetch:n.fetchFunc,t=r.map(function(f){return e(f,n.requestInit,{isBinary:!0})}),o=0,a=.5,n.onProgress!=null?[3,2]:[4,Promise.all(t)];case 1:return i=h.sent(),[3,4];case 2:return[4,m4(t,n.onProgress,o,a)];case 3:i=h.sent(),h.label=4;case 4:return s=i.map(function(f){return f.arrayBuffer()}),u=.5,c=1,n.onProgress!=null?[3,6]:[4,Promise.all(s)];case 5:return l=h.sent(),[3,8];case 6:return[4,m4(s,n.onProgress,u,c)];case 7:l=h.sent(),h.label=8;case 8:return[2,l]}})})}function g4(r){var n=this;return function(e,t,o){return t===void 0&&(t=""),X(n,void 0,void 0,function(){var a,i,s,u,c,l,h,f,p,d;return Y(this,function(m){switch(m.label){case 0:if(a=e.map(function(){return!1}),i={},s=o!=null?o.map(function(){return!1}):[],u=[],e.forEach(function(v,g){var x=0;v.weights.forEach(function(b){var y="quantization"in b?b.quantization.dtype:b.dtype,w=v2[y]*$(b.shape),C=function(){a[g]=!0,i[g]==null&&(i[g]=[]),i[g].push({manifestEntry:b,groupOffset:x,sizeBytes:w})};o!=null?o.forEach(function(S,k){S===b.name&&(C(),s[k]=!0)}):C(),u.push(b.name),x+=w})}),!s.every(function(v){return v}))throw c=o.filter(function(v,g){return!s[g]}),new Error("Could not find weights in manifest with names: "+c.join(", ")+`. 
Manifest JSON has weights with names: `+u.join(", ")+".");return l=a.reduce(function(v,g,x){return g&&v.push(x),v},[]),h=[],l.forEach(function(v){e[v].paths.forEach(function(g){var x=t+(t.endsWith("/")?"":"/")+g;h.push(x)})}),[4,r(h)];case 1:return f=m.sent(),p={},d=0,l.forEach(function(v){for(var g=e[v].paths.length,x=0,b=0;b<g;b++)x+=f[d+b].byteLength;for(var y=new ArrayBuffer(x),w=new Uint8Array(y),C=0,S=0;S<g;S++){var k=new Uint8Array(f[d+S]);w.set(k,C),C+=k.byteLength}i[v].forEach(function(I){var R=Zr(y.slice(I.groupOffset,I.groupOffset+I.sizeBytes),[I.manifestEntry]);for(var T in R)p[T]=R[T]}),d+=g}),[2,p]}})})}}s1.registerSaveRouter(function(r){return P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Yn.URL_SCHEME)?function(n){return n===void 0&&(n="model"),new Yn(n)}(r.slice(Yn.URL_SCHEME.length)):null});var o5=function(){function r(n,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,e.fetchFunc!=null?(E(typeof e.fetchFunc=="function",function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"}),this.fetch=e.fetchFunc):this.fetch=P().platform.fetch,E(n!=null&&n.length>0,function(){return"URL path for http must not be null, undefined or empty."}),Array.isArray(n)&&E(n.length===2,function(){return"URL paths for http must have a length of 2, (actual length is "+n.length+")."}),this.path=n,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}return r.prototype.save=function(n){return X(this,void 0,void 0,function(){var e,t,o,a;return Y(this,function(i){switch(i.label){case 0:if(n.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,t=[{paths:["./model.weights.bin"],weights:n.weightSpecs}],o={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,userDefinedMetadata:n.userDefinedMetadata,weightsManifest:t},e.body.append("model.json",new Blob([JSON.stringify(o)],{type:"application/json"}),"model.json"),n.weightData!=null&&e.body.append("model.weights.bin",new Blob([n.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.fetch(this.path,e)];case 1:if((a=i.sent()).ok)return[2,{modelArtifactsInfo:yt(n),responses:[a]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}})})},r.prototype.load=function(){return X(this,void 0,void 0,function(){var n,e,t,o,a,i,s,u,c,l,h,f;return Y(this,function(p){switch(p.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(n=p.sent()).ok)throw new Error("Request to "+this.path+" failed with status code "+n.status+". Please verify this URL points to the model JSON of the model to load.");p.label=2;case 2:return p.trys.push([2,4,,5]),[4,n.json()];case 3:return e=p.sent(),[3,5];case 4:throw p.sent(),t="Failed to parse model JSON of response from "+this.path+".",this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t);case 5:if(o=e.modelTopology,a=e.weightsManifest,i=e.generatedBy,s=e.convertedBy,u=e.format,c=e.userDefinedMetadata,o==null&&a==null)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return a==null?[3,7]:[4,this.loadWeights(a)];case 6:f=p.sent(),l=f[0],h=f[1],p.label=7;case 7:return[2,{modelTopology:o,weightSpecs:l,weightData:h,userDefinedMetadata:c,generatedBy:i,convertedBy:s,format:u}]}})})},r.prototype.loadWeights=function(n){return X(this,void 0,void 0,function(){var e,t,o,a,i,s,u,c,l,h,f;return Y(this,function(p){switch(p.label){case 0:for(e=Array.isArray(this.path)?this.path[1]:this.path,t=function(d){var m=d.lastIndexOf("/"),v=d.lastIndexOf("?"),g=d.substring(0,m),x=v>m?d.substring(v):"";return[g+"/",x]}(e),o=t[0],a=t[1],i=this.weightPathPrefix||o,s=[],u=0,c=n;u<c.length;u++)l=c[u],s.push.apply(s,l.weights);return h=[],n.forEach(function(d){d.paths.forEach(function(m){h.push(i+m+a)})}),[4,r5(h,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return f=p.sent(),[2,[s,Q2(f)]]}})})},r.URL_SCHEME_REGEX=/^https?:\/\//,r}();function y2(r){return r.match(o5.URL_SCHEME_REGEX)!=null}var y4=function(r,n){return typeof fetch>"u"?null:(Array.isArray(r)?r.every(function(e){return y2(e)}):y2(r))?x2(r,{onProgress:n}):null};function x2(r,n){return new o5(r,n)}s1.registerSaveRouter(y4),s1.registerLoadRouter(y4);var $n=function(){function r(n){this.modelArtifacts=n}return r.prototype.load=function(){return X(this,void 0,void 0,function(){return Y(this,function(n){return[2,this.modelArtifacts]})})},r}(),_i=function(){function r(n){this.saveHandler=n}return r.prototype.save=function(n){return X(this,void 0,void 0,function(){return Y(this,function(e){return[2,this.saveHandler(n)]})})},r}(),a5=Object.freeze({browserFiles:function(r){return new Ci(r)},browserHTTPRequest:function(r,n){return x2(r,n)},concatenateArrayBuffers:Q2,decodeWeights:Zr,encodeWeights:function(r,n){return X(this,void 0,void 0,function(){var e,t,o,a,i,s=this;return Y(this,function(u){switch(u.label){case 0:for(e=[],t=[],o=Array.isArray(r)?r.map(function(c){return c.name}):Object.keys(r),a=function(c){var l=o[c],h=Array.isArray(r)?r[c].tensor:r[l];if(h.dtype!=="float32"&&h.dtype!=="int32"&&h.dtype!=="bool"&&h.dtype!=="string")throw new Error("Unsupported dtype in weight '"+l+"': "+h.dtype);var f={name:l,shape:h.shape,dtype:h.dtype};if(h.dtype==="string"){var p=new Promise(function(d){return X(s,void 0,void 0,function(){var m,v,g,x,b,y,w;return Y(this,function(C){switch(C.label){case 0:return[4,h.bytes()];case 1:for(m=C.sent(),v=m.reduce(function(S,k){return S+k.length},0)+Zt*m.length,g=new Uint8Array(v),x=0,b=0;b<m.length;b++)y=m[b],w=new Uint8Array(new Uint32Array([y.length]).buffer),g.set(w,x),x+=Zt,g.set(y,x),x+=y.length;return d(g),[2]}})})});t.push(p)}else t.push(h.data());n!=null&&(f.group=n),e.push(f)},i=0;i<o.length;++i)a(i);return[4,Promise.all(t)];case 1:return[2,{data:hi(u.sent()),specs:e}]}})})},fromMemory:function(r,n,e,t){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new $n(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $n({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $n({modelTopology:r,weightSpecs:n,weightData:e,trainingConfig:t}))},getLoadHandlers:function(r,n){return s1.getLoadHandlers(r,n)},getModelArtifactsInfoForJSON:yt,getSaveHandlers:function(r){return s1.getSaveHandlers(r)},http:x2,isHTTPScheme:y2,loadWeights:function(r,n,e,t){return n===void 0&&(n=""),X(this,void 0,void 0,function(){return Y(this,function(o){return[2,g4(function(a){return r5(a,{requestInit:t})})(r,n,e)]})})},registerLoadRouter:function(r){return s1.registerLoadRouter(r)},registerSaveRouter:function(r){return s1.registerSaveRouter(r)},weightsLoaderFactory:g4,withSaveHandler:function(r){return new _i(r)},copyModel:function(r,n){return X(this,void 0,void 0,function(){return Y(this,function(e){return[2,f4(r,n,!1)]})})},listModels:function(){return X(this,void 0,void 0,function(){var r,n,e,t,o,a,i;return Y(this,function(s){switch(s.label){case 0:r=oe.getSchemes(),n={},e=0,t=r,s.label=1;case 1:return e<t.length?(o=t[e],[4,oe.getManager(o).listModels()]):[3,4];case 2:for(i in a=s.sent())n[o+Le+i]=a[i];s.label=3;case 3:return e++,[3,1];case 4:return[2,n]}})})},moveModel:function(r,n){return X(this,void 0,void 0,function(){return Y(this,function(e){return[2,f4(r,n,!0)]})})},removeModel:function(r){return X(this,void 0,void 0,function(){var n;return Y(this,function(e){return n=Ft(r),[2,oe.getManager(n.scheme).removeModel(n.path)]})})}}),Ae;A({confusionMatrix_:function(r,n,e){var t=_(r,"labels","confusionMatrix"),o=_(n,"predictions","confusionMatrix");E(e==null||e>0&&Number.isInteger(e),function(){return"If provided, numClasses must be a positive integer, but got "+e}),E(t.rank===1,function(){return"Expected the rank of labels to be 1, but got "+t.rank}),E(o.rank===1,function(){return"Expected the rank of predictions to be 1, but got "+o.rank}),E(t.shape[0]===o.shape[0],function(){return"Mismatch in the number of examples: "+t.shape[0]+" vs. "+o.shape[0]+". Labels and predictions should have the same number of elements."}),E(e>0&&Number.isInteger(e),function(){return"numClasses is required to be a positive integer, but got "+e});var a=l2(t.asType("int32"),e),i=l2(o.asType("int32"),e);return a.transpose().matMul(i).asType("int32")}});var Ei=A({fromPixels_:function(r,n){if(n===void 0&&(n=3),n>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var e=!1,t=!1,o=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)t=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)a=!0;else{if(r.getContext==null)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+r.constructor.name);i=!0}if(o&&o&&r.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(A4("FromPixels",M.backendName)!=null)return M.runKernel("FromPixels",{pixels:r},{numChannels:n});var s,u,c=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=c[0],h=c[1];if(i?s=r.getContext("2d").getImageData(0,0,l,h).data:t||e?s=r.data:(a||o)&&(Ae==null&&(Ae=document.createElement("canvas").getContext("2d")),Ae.canvas.width=l,Ae.canvas.height=h,Ae.drawImage(r,0,0,l,h),s=Ae.getImageData(0,0,l,h).data),n===4)u=new Int32Array(s);else{var f=l*h;u=new Int32Array(f*n);for(var p=0;p<f;p++)for(var d=0;d<n;++d)u[p*n+d]=s[4*p+d]}return k2(u,[h,l,n],"int32")}}),Z2=Object.freeze({toPixels:function(r,n){return X(this,void 0,void 0,function(){var e,t,o,a,i,s,u,c,l,h,f,p,d,m,v,g,x,b,y,w,C,S,k;return Y(this,function(I){switch(I.label){case 0:if(e=_(r,"img","toPixels"),r instanceof E0||(e=e.toInt()),e.rank!==2&&e.rank!==3)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank "+e.rank+".");if(t=e.shape.slice(0,2),o=t[0],a=t[1],(i=e.rank===2?1:e.shape[2])>4||i===2)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+i);return[4,e.data()];case 1:return s=I.sent(),u=e.min(),c=e.max(),[4,Promise.all([u.data(),c.data()])];case 2:if(l=I.sent(),h=l[0],f=l[1],p=h[0],d=f[0],u.dispose(),c.dispose(),e.dtype==="float32"){if(p<0||d>1)throw new Error("Tensor values for a float32 Tensor must be in the range [0 - 1] but got range ["+p+" - "+d+"].")}else{if(e.dtype!=="int32")throw new Error("Unsupported type for toPixels: "+e.dtype+". Please use float32 or int32 tensors.");if(p<0||d>255)throw new Error("Tensor values for a int32 Tensor must be in the range [0 - 255] but got range ["+p+" - "+d+"].")}for(m=e.dtype==="float32"?255:1,v=new Uint8ClampedArray(a*o*4),g=0;g<o*a;++g)x=void 0,b=void 0,y=void 0,w=void 0,i===1?(x=s[g]*m,b=s[g]*m,y=s[g]*m,w=255):i===3?(x=s[3*g]*m,b=s[3*g+1]*m,y=s[3*g+2]*m,w=255):i===4&&(x=s[4*g]*m,b=s[4*g+1]*m,y=s[4*g+2]*m,w=s[4*g+3]*m),v[(C=4*g)+0]=Math.round(x),v[C+1]=Math.round(b),v[C+2]=Math.round(y),v[C+3]=Math.round(w);return n!=null&&(n.width=a,n.height=o,S=n.getContext("2d"),k=new ImageData(v,a,o),S.putImageData(k,0,0)),e!==r&&e.dispose(),[2,v]}})})},fromPixels:Ei}),Ii=function(){function r(){}return r.prototype.getClassName=function(){return this.constructor.className},r.fromConfig=function(n,e){return new n(e)},r}(),Ri=function(){function r(){this.classNameMap={}}return r.getMap=function(){return r.instance==null&&(r.instance=new r),r.instance},r.register=function(n){r.getMap().classNameMap[n.className]=[n,n.fromConfig]},r}();function Ce(r){E(r.className!=null,function(){return"Class being registered does not have the static className property defined."}),E(typeof r.className=="string",function(){return"className is required to be a string, but got type "+typeof r.className}),E(r.className.length>0,function(){return"Class being registered has an empty-string as its className, which is disallowed."}),Ri.register(r)}var _e=function(r){function n(){return r!==null&&r.apply(this,arguments)||this}return x1(n,r),n.prototype.minimize=function(e,t,o){t===void 0&&(t=!1);var a=this.computeGradients(e,o),i=a.value,s=a.grads;if(o!=null){var u=o.map(function(c){return{name:c.name,tensor:s[c.name]}});this.applyGradients(u)}else this.applyGradients(s);return e1(s),t?i:(i.dispose(),null)},Object.defineProperty(n.prototype,"iterations",{get:function(){return this.iterations_==null&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),n.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},n.prototype.computeGradients=function(e,t){return P7(e,t)},n.prototype.dispose=function(){this.iterations_!=null&&e1(this.iterations_)},n.prototype.saveIterations=function(){return X(this,void 0,void 0,function(){return Y(this,function(e){return this.iterations_==null&&(this.iterations_=0),[2,{name:"iter",tensor:j(this.iterations_,"int32")}]})})},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){return Y(this,function(e){throw new Error("getWeights() is not implemented for this optimizer yet.")})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){return Y(this,function(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())})})},n.prototype.extractIterations=function(e){return X(this,void 0,void 0,function(){var t;return Y(this,function(o){switch(o.label){case 0:return t=this,[4,e[0].tensor.data()];case 1:return t.iterations_=o.sent()[0],[2,e.slice(1)]}})})},n}(Ii);Object.defineProperty(_e,Symbol.hasInstance,{value:function(r){return r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null}});var ki=function(r){function n(e,t,o){o===void 0&&(o=null);var a=r.call(this)||this;return a.learningRate=e,a.rho=t,a.epsilon=o,a.accumulatedGrads=[],a.accumulatedUpdates=[],o==null&&(a.epsilon=M.backend.epsilon()),a}return x1(n,r),n.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map(function(o){return o.name}):Object.keys(e)).forEach(function(o,a){var i=M.registeredVariables[o];t.accumulatedGrads[a]==null&&(t.accumulatedGrads[a]={originalName:o+"/accum_grad",variable:K(function(){return v0(i).variable(!1)})}),t.accumulatedUpdates[a]==null&&(t.accumulatedUpdates[a]={originalName:o+"/accum_var",variable:K(function(){return v0(i).variable(!1)})});var s=Array.isArray(e)?e[a].tensor:e[o];if(s!=null){var u=t.accumulatedGrads[a].variable,c=t.accumulatedUpdates[a].variable;K(function(){var l=u.mul(t.rho).add(s.square().mul(1-t.rho)),h=c.add(t.epsilon).sqrt().div(u.add(t.epsilon).sqrt()).mul(s),f=c.mul(t.rho).add(h.square().mul(1-t.rho));u.assign(l),c.assign(f);var p=h.mul(-t.learningRate).add(i);i.assign(p)})}}),this.incrementIterations()},n.prototype.dispose=function(){this.accumulatedUpdates!=null&&(e1(this.accumulatedGrads.map(function(e){return e.variable})),e1(this.accumulatedUpdates.map(function(e){return e.variable})))},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){var e;return Y(this,function(t){switch(t.label){case 0:return e=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map(function(o){return{name:o.originalName,tensor:o.variable}}))]}})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){var t;return Y(this,function(o){switch(o.label){case 0:return[4,this.extractIterations(e)];case 1:return e=o.sent(),t=e.length/2,this.accumulatedGrads=e.slice(0,t).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),this.accumulatedUpdates=e.slice(t,2*t).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),[2]}})})},n.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},n.fromConfig=function(e,t){return new e(t.learningRate,t.rho,t.epsilon)},n.className="Adadelta",n}(_e);Ce(ki);var Si=function(r){function n(e,t){t===void 0&&(t=.1);var o=r.call(this)||this;return o.learningRate=e,o.initialAccumulatorValue=t,o.accumulatedGrads=[],o}return x1(n,r),n.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map(function(o){return o.name}):Object.keys(e)).forEach(function(o,a){var i=M.registeredVariables[o];t.accumulatedGrads[a]==null&&(t.accumulatedGrads[a]={originalName:o+"/accumulator",variable:K(function(){return T1(i.shape,t.initialAccumulatorValue).variable(!1)})});var s=Array.isArray(e)?e[a].tensor:e[o];if(s!=null){var u=t.accumulatedGrads[a].variable;K(function(){var c=u.add(s.square());u.assign(c);var l=s.div(c.add(M.backend.epsilon()).sqrt()).mul(-t.learningRate).add(i);i.assign(l)})}}),this.incrementIterations()},n.prototype.dispose=function(){this.accumulatedGrads!=null&&e1(this.accumulatedGrads.map(function(e){return e.variable}))},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){return Y(this,function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulatedGrads.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){return Y(this,function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulatedGrads=e.map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),[2]}})})},n.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},n.fromConfig=function(e,t){return new e(t.learningRate,t.initialAccumulatorValue)},n.className="Adagrad",n}(_e);Ce(Si);var Ai=function(r){function n(e,t,o,a){a===void 0&&(a=null);var i=r.call(this)||this;return i.learningRate=e,i.beta1=t,i.beta2=o,i.epsilon=a,i.accumulatedFirstMoment=[],i.accumulatedSecondMoment=[],K(function(){i.accBeta1=j(t).variable(),i.accBeta2=j(o).variable()}),a==null&&(i.epsilon=M.backend.epsilon()),i}return x1(n,r),n.prototype.applyGradients=function(e){var t=this,o=Array.isArray(e)?e.map(function(a){return a.name}):Object.keys(e);K(function(){var a=O0(1,t.accBeta1),i=O0(1,t.accBeta2);o.forEach(function(s,u){var c=M.registeredVariables[s];t.accumulatedFirstMoment[u]==null&&(t.accumulatedFirstMoment[u]={originalName:s+"/m",variable:K(function(){return v0(c).variable(!1)})}),t.accumulatedSecondMoment[u]==null&&(t.accumulatedSecondMoment[u]={originalName:s+"/v",variable:K(function(){return v0(c).variable(!1)})});var l=Array.isArray(e)?e[u].tensor:e[s];if(l!=null){var h=t.accumulatedFirstMoment[u].variable,f=t.accumulatedSecondMoment[u].variable,p=h.mul(t.beta1).add(l.mul(1-t.beta1)),d=f.mul(t.beta2).add(l.square().mul(1-t.beta2)),m=p.div(a),v=d.div(i);h.assign(p),f.assign(d);var g=m.div(v.sqrt().add(t.epsilon)).mul(-t.learningRate).add(c);c.assign(g)}}),t.accBeta1.assign(t.accBeta1.mul(t.beta1)),t.accBeta2.assign(t.accBeta2.mul(t.beta2))}),this.incrementIterations()},n.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&e1(this.accumulatedFirstMoment.map(function(e){return e.variable})),this.accumulatedSecondMoment!=null&&e1(this.accumulatedSecondMoment.map(function(e){return e.variable}))},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){var e;return Y(this,function(t){switch(t.label){case 0:return e=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map(function(o){return{name:o.originalName,tensor:o.variable}}))]}})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){var t,o=this;return Y(this,function(a){switch(a.label){case 0:return[4,this.extractIterations(e)];case 1:return e=a.sent(),K(function(){o.accBeta1.assign(Jt(o.beta1,o.iterations_+1)),o.accBeta2.assign(Jt(o.beta2,o.iterations_+1))}),t=e.length/2,this.accumulatedFirstMoment=e.slice(0,t).map(function(i){return{originalName:i.name,variable:i.tensor.variable(!1)}}),this.accumulatedSecondMoment=e.slice(t,2*t).map(function(i){return{originalName:i.name,variable:i.tensor.variable(!1)}}),[2]}})})},n.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},n.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)},n.className="Adam",n}(_e);Ce(Ai);var Di=function(r){function n(e,t,o,a,i){a===void 0&&(a=null),i===void 0&&(i=0);var s=r.call(this)||this;return s.learningRate=e,s.beta1=t,s.beta2=o,s.epsilon=a,s.decay=i,s.accumulatedFirstMoment=[],s.accumulatedWeightedInfNorm=[],K(function(){s.iteration=j(0).variable(),s.accBeta1=j(t).variable()}),a==null&&(s.epsilon=M.backend.epsilon()),s}return x1(n,r),n.prototype.applyGradients=function(e){var t=this,o=Array.isArray(e)?e.map(function(a){return a.name}):Object.keys(e);K(function(){var a=O0(1,t.accBeta1),i=m1(-t.learningRate,t.iteration.mul(t.decay).add(1));o.forEach(function(s,u){var c=M.registeredVariables[s];t.accumulatedFirstMoment[u]==null&&(t.accumulatedFirstMoment[u]={originalName:s+"/m",variable:v0(c).variable(!1)}),t.accumulatedWeightedInfNorm[u]==null&&(t.accumulatedWeightedInfNorm[u]={originalName:s+"/v",variable:v0(c).variable(!1)});var l=Array.isArray(e)?e[u].tensor:e[s];if(l!=null){var h=t.accumulatedFirstMoment[u].variable,f=t.accumulatedWeightedInfNorm[u].variable,p=h.mul(t.beta1).add(l.mul(1-t.beta1)),d=f.mul(t.beta2),m=l.abs(),v=d.maximum(m);h.assign(p),f.assign(v);var g=i.div(a).mul(p.div(v.add(t.epsilon))).add(c);c.assign(g)}}),t.iteration.assign(t.iteration.add(1)),t.accBeta1.assign(t.accBeta1.mul(t.beta1))}),this.incrementIterations()},n.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&e1(this.accumulatedFirstMoment.map(function(e){return e.variable})),this.accumulatedWeightedInfNorm!=null&&e1(this.accumulatedWeightedInfNorm.map(function(e){return e.variable}))},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){return Y(this,function(e){throw new Error("getWeights() is not implemented for Adamax yet.")})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){return Y(this,function(t){throw new Error("setWeights() is not implemented for Adamax yet.")})})},n.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},n.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)},n.className="Adamax",n}(_e);Ce(Di);var i5=function(r){function n(e){var t=r.call(this)||this;return t.learningRate=e,t.setLearningRate(e),t}return x1(n,r),n.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map(function(o){return o.name}):Object.keys(e)).forEach(function(o,a){var i=Array.isArray(e)?e[a].tensor:e[o];if(i!=null){var s=M.registeredVariables[o];K(function(){var u=t.c.mul(i).add(s);s.assign(u)})}}),this.incrementIterations()},n.prototype.setLearningRate=function(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Y6(j(-e))},n.prototype.dispose=function(){this.c.dispose()},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){return Y(this,function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()]]}})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){return Y(this,function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:if((e=t.sent()).length!==0)throw new Error("SGD optimizer does not have settable weights.");return[2]}})})},n.prototype.getConfig=function(){return{learningRate:this.learningRate}},n.fromConfig=function(e,t){return new e(t.learningRate)},n.className="SGD",n}(_e);Ce(i5);var Mi=function(r){function n(e,t,o){o===void 0&&(o=!1);var a=r.call(this,e)||this;return a.learningRate=e,a.momentum=t,a.useNesterov=o,a.accumulations=[],a.m=j(a.momentum),a}return x1(n,r),n.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map(function(o){return o.name}):Object.keys(e)).forEach(function(o,a){var i=M.registeredVariables[o];t.accumulations[a]==null&&(t.accumulations[a]={originalName:o+"/momentum",variable:K(function(){return v0(i).variable(!1)})});var s=t.accumulations[a].variable,u=Array.isArray(e)?e[a].tensor:e[o];u!=null&&K(function(){var c,l=t.m.mul(s).add(u);c=t.useNesterov?t.c.mul(u.add(l.mul(t.m))).add(i):t.c.mul(l).add(i),s.assign(l),i.assign(c)})}),this.incrementIterations()},n.prototype.dispose=function(){this.m.dispose(),this.accumulations!=null&&e1(this.accumulations.map(function(e){return e.variable}))},n.prototype.setMomentum=function(e){this.momentum=e},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){return Y(this,function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulations.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){return Y(this,function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulations=e.map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),[2]}})})},n.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},n.fromConfig=function(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)},n.className="Momentum",n}(i5);Ce(Mi);var Ti=function(r){function n(e,t,o,a,i){t===void 0&&(t=.9),o===void 0&&(o=0),a===void 0&&(a=null),i===void 0&&(i=!1);var s=r.call(this)||this;if(s.learningRate=e,s.decay=t,s.momentum=o,s.epsilon=a,s.accumulatedMeanSquares=[],s.accumulatedMoments=[],s.accumulatedMeanGrads=[],s.centered=i,a==null&&(s.epsilon=M.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.");return s}return x1(n,r),n.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map(function(o){return o.name}):Object.keys(e)).forEach(function(o,a){var i=M.registeredVariables[o];t.accumulatedMeanSquares[a]==null&&(t.accumulatedMeanSquares[a]={originalName:o+"/rms",variable:K(function(){return v0(i).variable(!1)})}),t.accumulatedMoments[a]==null&&(t.accumulatedMoments[a]={originalName:o+"/momentum",variable:K(function(){return v0(i).variable(!1)})}),t.accumulatedMeanGrads[a]==null&&t.centered&&(t.accumulatedMeanGrads[a]={originalName:o+"/mg",variable:K(function(){return v0(i).variable(!1)})});var s=Array.isArray(e)?e[a].tensor:e[o];if(s!=null){var u=t.accumulatedMeanSquares[a].variable,c=t.accumulatedMoments[a].variable;K(function(){var l=u.mul(t.decay).add(s.square().mul(1-t.decay));if(t.centered){var h=t.accumulatedMeanGrads[a].variable,f=h.mul(t.decay).add(s.mul(1-t.decay)),p=c.mul(t.momentum).add(s.mul(t.learningRate).div(l.sub(f.square().add(t.epsilon)).sqrt()));u.assign(l),h.assign(f),c.assign(p);var d=i.sub(p);i.assign(d)}else{var m=u.mul(t.decay).add(s.square().mul(1-t.decay));p=c.mul(t.momentum).add(s.mul(t.learningRate).div(m.add(t.epsilon).sqrt())),u.assign(m),c.assign(p),d=i.sub(p),i.assign(d)}})}}),this.incrementIterations()},n.prototype.dispose=function(){this.accumulatedMeanSquares!=null&&e1(this.accumulatedMeanSquares.map(function(e){return e.variable})),this.accumulatedMeanGrads!=null&&this.centered&&e1(this.accumulatedMeanGrads.map(function(e){return e.variable})),this.accumulatedMoments!=null&&e1(this.accumulatedMoments.map(function(e){return e.variable}))},n.prototype.getWeights=function(){return X(this,void 0,void 0,function(){var e;return Y(this,function(t){switch(t.label){case 0:return e=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&e.push.apply(e,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map(function(o){return{name:o.originalName,tensor:o.variable}}))]}})})},n.prototype.setWeights=function(e){return X(this,void 0,void 0,function(){var t;return Y(this,function(o){switch(o.label){case 0:return[4,this.extractIterations(e)];case 1:return e=o.sent(),t=this.centered?e.length/3:e.length/2,this.accumulatedMeanSquares=e.slice(0,t).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),this.accumulatedMoments=e.slice(t,2*t).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}})),[2]}})})},n.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},n.fromConfig=function(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)},n.className="RMSProp",n}(_e);Ce(Ti);E0.prototype.squaredDifference=function(r){return wr(this,r)},F=oi;/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var b2=function(r,n){return b2=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])},b2(r,n)};function r0(r,n){b2(r,n);function e(){this.constructor=r}r.prototype=n===null?Object.create(n):(e.prototype=n.prototype,new e)}var K0=function(){return K0=Object.assign||function(n){for(var e,t=1,o=arguments.length;t<o;t++){e=arguments[t];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a])}return n},K0.apply(this,arguments)};function Q(r,n,e,t){function o(a){return a instanceof e?a:new e(function(i){i(a)})}return new(e||(e=Promise))(function(a,i){function s(l){try{c(t.next(l))}catch(h){i(h)}}function u(l){try{c(t.throw(l))}catch(h){i(h)}}function c(l){l.done?a(l.value):o(l.value).then(s,u)}c((t=t.apply(r,n||[])).next())})}function Z(r,n){var e={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},t,o,a,i;return i={next:s(0),throw:s(1),return:s(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function s(c){return function(l){return u([c,l])}}function u(c){if(t)throw new TypeError("Generator is already executing.");for(;e;)try{if(t=1,o&&(a=c[0]&2?o.return:c[0]?o.throw||((a=o.return)&&a.call(o),0):o.next)&&!(a=a.call(o,c[1])).done)return a;switch(o=0,a&&(c=[c[0]&2,a.value]),c[0]){case 0:case 1:a=c;break;case 4:return e.label++,{value:c[1],done:!1};case 5:e.label++,o=c[1],c=[0];continue;case 7:c=e.ops.pop(),e.trys.pop();continue;default:if(a=e.trys,!(a=a.length>0&&a[a.length-1])&&(c[0]===6||c[0]===2)){e=0;continue}if(c[0]===3&&(!a||c[1]>a[0]&&c[1]<a[3])){e.label=c[1];break}if(c[0]===6&&e.label<a[1]){e.label=a[1],a=c;break}if(a&&e.label<a[2]){e.label=a[2],e.ops.push(c);break}a[2]&&e.ops.pop(),e.trys.pop();continue}c=n.call(r,e)}catch(l){c=[6,l],o=0}finally{t=a=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}function tt(){for(var r=0,n=0,e=arguments.length;n<e;n++)r+=arguments[n].length;for(var t=Array(r),o=0,n=0;n<e;n++)for(var a=arguments[n],i=0,s=a.length;i<s;i++,o++)t[o]=a[i];return t}var me=function(){function r(n,e){if(!ge(n)||!ge(e))throw new Error("Dimensions.constructor - expected width and height to be valid numbers, instead have "+JSON.stringify({width:n,height:e}));this._width=n,this._height=e}return Object.defineProperty(r.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0}),r.prototype.reverse=function(){return new r(1/this.width,1/this.height)},r}();function dn(r,n){return r instanceof E0&&r.shape.length===n}function Ni(r){return dn(r,2)}function vn(r){return dn(r,3)}function ae(r){return dn(r,4)}function Fi(r){return r%1!==0}function x4(r){return r%2===0}function s5(r,n){n===void 0&&(n=2);var e=Math.pow(10,n);return Math.floor(r*e)/e}function b4(r){return r&&r.width&&r.height}function Pi(r,n){var e=r.width,t=r.height,o=n/Math.max(t,e);return new me(Math.round(e*o),Math.round(t*o))}function e3(r){return r.reduce(function(n,e){return n.add(e)},new g0(0,0)).div(new g0(r.length,r.length))}function st(r,n,e){return Array(r).fill(0).map(function(t,o){return n+o*e})}function ge(r){return!!r&&r!==1/0&&r!==-1/0&&!isNaN(r)||r===0}function w4(r){return ge(r)&&0<=r&&r<=1}var g0=function(){function r(n,e){this._x=n,this._y=e}return Object.defineProperty(r.prototype,"x",{get:function(){return this._x},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"y",{get:function(){return this._y},enumerable:!0,configurable:!0}),r.prototype.add=function(n){return new r(this.x+n.x,this.y+n.y)},r.prototype.sub=function(n){return new r(this.x-n.x,this.y-n.y)},r.prototype.mul=function(n){return new r(this.x*n.x,this.y*n.y)},r.prototype.div=function(n){return new r(this.x/n.x,this.y/n.y)},r.prototype.abs=function(){return new r(Math.abs(this.x),Math.abs(this.y))},r.prototype.magnitude=function(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))},r.prototype.floor=function(){return new r(Math.floor(this.x),Math.floor(this.y))},r}(),F1=function(){function r(n,e){e===void 0&&(e=!0);var t=n||{},o=[t.left,t.top,t.right,t.bottom].every(ge),a=[t.x,t.y,t.width,t.height].every(ge);if(!a&&!o)throw new Error("Box.constructor - expected box to be IBoundingBox | IRect, instead have "+JSON.stringify(t));var i=a?[t.x,t.y,t.width,t.height]:[t.left,t.top,t.right-t.left,t.bottom-t.top],s=i[0],u=i[1],c=i[2],l=i[3];r.assertIsValidBox({x:s,y:u,width:c,height:l},"Box.constructor",e),this._x=s,this._y=u,this._width=c,this._height=l}return r.isRect=function(n){return!!n&&[n.x,n.y,n.width,n.height].every(ge)},r.assertIsValidBox=function(n,e,t){if(t===void 0&&(t=!1),!r.isRect(n))throw new Error(e+" - invalid box: "+JSON.stringify(n)+", expected object with properties x, y, width, height");if(!t&&(n.width<0||n.height<0))throw new Error(e+" - width ("+n.width+") and height ("+n.height+") must be positive numbers")},Object.defineProperty(r.prototype,"x",{get:function(){return this._x},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"y",{get:function(){return this._y},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"left",{get:function(){return this.x},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"top",{get:function(){return this.y},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"right",{get:function(){return this.x+this.width},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"bottom",{get:function(){return this.y+this.height},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"area",{get:function(){return this.width*this.height},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"topLeft",{get:function(){return new g0(this.left,this.top)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"topRight",{get:function(){return new g0(this.right,this.top)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"bottomLeft",{get:function(){return new g0(this.left,this.bottom)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"bottomRight",{get:function(){return new g0(this.right,this.bottom)},enumerable:!0,configurable:!0}),r.prototype.round=function(){var n=[this.x,this.y,this.width,this.height].map(function(i){return Math.round(i)}),e=n[0],t=n[1],o=n[2],a=n[3];return new r({x:e,y:t,width:o,height:a})},r.prototype.floor=function(){var n=[this.x,this.y,this.width,this.height].map(function(i){return Math.floor(i)}),e=n[0],t=n[1],o=n[2],a=n[3];return new r({x:e,y:t,width:o,height:a})},r.prototype.toSquare=function(){var n=this,e=n.x,t=n.y,o=n.width,a=n.height,i=Math.abs(o-a);return o<a&&(e-=i/2,o+=i),a<o&&(t-=i/2,a+=i),new r({x:e,y:t,width:o,height:a})},r.prototype.rescale=function(n){var e=b4(n)?n.width:n,t=b4(n)?n.height:n;return new r({x:this.x*e,y:this.y*t,width:this.width*e,height:this.height*t})},r.prototype.pad=function(n,e){var t=[this.x-n/2,this.y-e/2,this.width+n,this.height+e],o=t[0],a=t[1],i=t[2],s=t[3];return new r({x:o,y:a,width:i,height:s})},r.prototype.clipAtImageBorders=function(n,e){var t=this,o=t.x,a=t.y,i=t.right,s=t.bottom,u=Math.max(o,0),c=Math.max(a,0),l=i-u,h=s-c,f=Math.min(l,n-u),p=Math.min(h,e-c);return new r({x:u,y:c,width:f,height:p}).floor()},r.prototype.shift=function(n,e){var t=this,o=t.width,a=t.height,i=this.x+n,s=this.y+e;return new r({x:i,y:s,width:o,height:a})},r.prototype.padAtBorders=function(n,e){var t=this.width+1,o=this.height+1,a=1,i=1,s=t,u=o,c=this.left,l=this.top,h=this.right,f=this.bottom;return h>e&&(s=-h+e+t,h=e),f>n&&(u=-f+n+o,f=n),c<1&&(u=2-c,c=1),l<1&&(u=2-l,l=1),{dy:i,edy:u,dx:a,edx:s,y:l,ey:f,x:c,ex:h,w:t,h:o}},r.prototype.calibrate=function(n){return new r({left:this.left+n.left*this.width,top:this.top+n.top*this.height,right:this.right+n.right*this.width,bottom:this.bottom+n.bottom*this.height}).toSquare().round()},r}(),mn=function(r){r0(n,r);function n(e,t,o,a,i){return i===void 0&&(i=!1),r.call(this,{left:e,top:t,right:o,bottom:a},i)||this}return n}(F1),u5=function(){function r(n,e,t,o,a){this._imageDims=new me(a.width,a.height),this._score=n,this._classScore=e,this._className=t,this._box=new F1(o).rescale(this._imageDims)}return Object.defineProperty(r.prototype,"score",{get:function(){return this._score},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"classScore",{get:function(){return this._classScore},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"className",{get:function(){return this._className},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"box",{get:function(){return this._box},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"imageDims",{get:function(){return this._imageDims},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"imageWidth",{get:function(){return this.imageDims.width},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"imageHeight",{get:function(){return this.imageDims.height},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"relativeBox",{get:function(){return new F1(this._box).rescale(this.imageDims.reverse())},enumerable:!0,configurable:!0}),r.prototype.forSize=function(n,e){return new r(this.score,this.classScore,this.className,this.relativeBox,{width:n,height:e})},r}(),l1=function(r){r0(n,r);function n(e,t,o){return r.call(this,e,e,"",t,o)||this}return n.prototype.forSize=function(e,t){var o=r.prototype.forSize.call(this,e,t),a=o.score,i=o.relativeBox,s=o.imageDims;return new n(a,i,s)},n}(u5);function Oi(r,n,e){e===void 0&&(e=!0);var t=Math.max(0,Math.min(r.right,n.right)-Math.max(r.left,n.left)),o=Math.max(0,Math.min(r.bottom,n.bottom)-Math.max(r.top,n.top)),a=t*o;return e?a/(r.area+n.area-a):a/Math.min(r.area,n.area)}function Bi(r){var n=r.map(function(s){return s.x}),e=r.map(function(s){return s.y}),t=n.reduce(function(s,u){return u<s?u:s},1/0),o=e.reduce(function(s,u){return u<s?u:s},1/0),a=n.reduce(function(s,u){return s<u?u:s},0),i=e.reduce(function(s,u){return s<u?u:s},0);return new mn(t,o,a,i)}function ut(r,n,e,t){t===void 0&&(t=!0);for(var o=n.map(function(s,u){return{score:s,boxIndex:u}}).sort(function(s,u){return s.score-u.score}).map(function(s){return s.boxIndex}),a=[],i=function(){var s=o.pop();a.push(s);for(var u=o,c=[],l=0;l<u.length;l++){var h=u[l],f=r[s],p=r[h];c.push(Oi(f,p,t))}o=o.filter(function(d,m){return c[m]<=e})};o.length>0;)i();return a}function xt(r,n){return K(function(){var e=n[0],t=n[1],o=n[2],a=T1(tt(r.shape.slice(0,3),[1]),e),i=T1(tt(r.shape.slice(0,3),[1]),t),s=T1(tt(r.shape.slice(0,3),[1]),o),u=N0([a,i,s],3);return O0(r,u)})}function Li(r,n){return n===void 0&&(n=!1),K(function(){var e=r.shape.slice(1),t=e[0],o=e[1];if(t===o)return r;var a=Math.abs(t-o),i=Math.round(a*(n?.5:1)),s=t>o?2:1,u=function(p){var d=r.shape.slice();return d[s]=p,T1(d,0)},c=u(i),l=a-c.shape[s],h=n&&l?u(l):null,f=[h,r,c].filter(function(p){return!!p}).map(function(p){return p.toFloat()});return N0(f,s)})}function Jn(r){return 1/(1+Math.exp(-r))}var t3=function(r){r0(n,r);function n(e,t,o,a,i){return i===void 0&&(i=!1),r.call(this,{x:e,y:t,width:o,height:a},i)||this}return n}(F1),Wi=.5,Vi=.43,Ui=.45,ct=function(){function r(n,e,t){t===void 0&&(t=new g0(0,0));var o=e.width,a=e.height;this._imgDims=new me(o,a),this._shift=t,this._positions=n.map(function(i){return i.mul(new g0(o,a)).add(t)})}return Object.defineProperty(r.prototype,"shift",{get:function(){return new g0(this._shift.x,this._shift.y)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"imageWidth",{get:function(){return this._imgDims.width},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"imageHeight",{get:function(){return this._imgDims.height},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"positions",{get:function(){return this._positions},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"relativePositions",{get:function(){var n=this;return this._positions.map(function(e){return e.sub(n._shift).div(new g0(n.imageWidth,n.imageHeight))})},enumerable:!0,configurable:!0}),r.prototype.forSize=function(n,e){return new this.constructor(this.relativePositions,{width:n,height:e})},r.prototype.shiftBy=function(n,e){return new this.constructor(this.relativePositions,this._imgDims,new g0(n,e))},r.prototype.shiftByPoint=function(n){return this.shiftBy(n.x,n.y)},r.prototype.align=function(n,e){if(e===void 0&&(e={}),n){var t=n instanceof l1?n.box.floor():new F1(n);return this.shiftBy(t.x,t.y).align(null,e)}var o=Object.assign({},{useDlibAlignment:!1,minBoxPadding:.2},e),a=o.useDlibAlignment,i=o.minBoxPadding;return a?this.alignDlib():this.alignMinBbox(i)},r.prototype.alignDlib=function(){var n=this.getRefPointsForAlignment(),e=n[0],t=n[1],o=n[2],a=function(h){return o.sub(h).magnitude()},i=(a(e)+a(t))/2,s=Math.floor(i/Ui),u=e3(n),c=Math.floor(Math.max(0,u.x-Wi*s)),l=Math.floor(Math.max(0,u.y-Vi*s));return new t3(c,l,Math.min(s,this.imageWidth+c),Math.min(s,this.imageHeight+l))},r.prototype.alignMinBbox=function(n){var e=Bi(this.positions);return e.pad(e.width*n,e.height*n)},r.prototype.getRefPointsForAlignment=function(){throw new Error("getRefPointsForAlignment not implemented by base class")},r}(),Gi=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.getRefPointsForAlignment=function(){var e=this.positions;return[e[0],e[1],e3([e[3],e[4]])]},n}(ct),zi=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.getJawOutline=function(){return this.positions.slice(0,17)},n.prototype.getLeftEyeBrow=function(){return this.positions.slice(17,22)},n.prototype.getRightEyeBrow=function(){return this.positions.slice(22,27)},n.prototype.getNose=function(){return this.positions.slice(27,36)},n.prototype.getLeftEye=function(){return this.positions.slice(36,42)},n.prototype.getRightEye=function(){return this.positions.slice(42,48)},n.prototype.getMouth=function(){return this.positions.slice(48,68)},n.prototype.getRefPointsForAlignment=function(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(e3)},n}(ct),C4=function(){function r(n,e){this._label=n,this._distance=e}return Object.defineProperty(r.prototype,"label",{get:function(){return this._label},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"distance",{get:function(){return this._distance},enumerable:!0,configurable:!0}),r.prototype.toString=function(n){return n===void 0&&(n=!0),""+this.label+(n?" ("+s5(this.distance)+")":"")},r}(),_4=function(r){r0(n,r);function n(e,t){var o=r.call(this,e)||this;return o._label=t,o}return n.assertIsValidLabeledBox=function(e,t){if(F1.assertIsValidBox(e,t),!ge(e.label))throw new Error(t+" - expected property label ("+e.label+") to be a number")},Object.defineProperty(n.prototype,"label",{get:function(){return this._label},enumerable:!0,configurable:!0}),n}(F1),Qe=function(){function r(n,e){if(typeof n!="string")throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(e)||e.some(function(t){return!(t instanceof Float32Array)}))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=n,this._descriptors=e}return Object.defineProperty(r.prototype,"label",{get:function(){return this._label},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"descriptors",{get:function(){return this._descriptors},enumerable:!0,configurable:!0}),r.prototype.toJSON=function(){return{label:this.label,descriptors:this.descriptors.map(function(n){return Array.from(n)})}},r.fromJSON=function(n){var e=n.descriptors.map(function(t){return new Float32Array(t)});return new r(n.label,e)},r}();(function(r){r0(n,r);function n(e,t,o,a){var i=r.call(this,e,t)||this;return i._score=o,i._classScore=a,i}return n.assertIsValidPredictedBox=function(e,t){if(_4.assertIsValidLabeledBox(e,t),!w4(e.score)||!w4(e.classScore))throw new Error(t+" - expected properties score ("+e.score+") and ("+e.classScore+") to be a number between [0, 1]")},Object.defineProperty(n.prototype,"score",{get:function(){return this._score},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"classScore",{get:function(){return this._classScore},enumerable:!0,configurable:!0}),n})(_4);function en(r){return r.detection instanceof l1}function lt(r,n){var e={detection:n};return Object.assign({},r,e)}function c5(){var r=window.fetch||function(){throw new Error("fetch - missing fetch implementation for browser environment")},n=function(){throw new Error("readFile - filesystem not available for browser environment")};return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:function(){return document.createElement("canvas")},createImageElement:function(){return document.createElement("img")},fetch:r,readFile:n}}function l5(r){var n="";if(!r)try{r=require("fs")}catch(t){n=t.toString()}var e=r?function(t){return new Promise(function(o,a){r.readFile(t,function(i,s){return i?a(i):o(s)})})}:function(){throw new Error("readFile - failed to require fs in nodejs environment with error: "+n)};return{readFile:e}}function h5(){var r=global.Canvas||global.HTMLCanvasElement,n=global.Image||global.HTMLImageElement,e=function(){if(r)return new r;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},t=function(){if(n)return new n;throw new Error("createImageElement - missing Image implementation for nodejs environment")},o=global.fetch||function(){throw new Error("fetch - missing fetch implementation for nodejs environment")},a=l5();return K0({Canvas:r||function(){function i(){}return i}(),CanvasRenderingContext2D:global.CanvasRenderingContext2D||function(){function i(){}return i}(),Image:n||function(){function i(){}return i}(),ImageData:global.ImageData||function(){function i(){}return i}(),Video:global.HTMLVideoElement||function(){function i(){}return i}(),createCanvasElement:e,createImageElement:t,fetch:o},a)}function f5(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}function p5(){return typeof global=="object"&&typeof require=="function"&&typeof module<"u"&&typeof process<"u"&&!!process.version}var T0;function Hi(){if(!T0)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return T0}function w2(r){T0=r}function n3(){f5()&&w2(c5()),p5()&&w2(h5())}function ji(r){if(T0||n3(),!T0)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");var n=r.Canvas,e=n===void 0?T0.Canvas:n,t=r.Image,o=t===void 0?T0.Image:t;T0.Canvas=e,T0.Image=o,T0.createCanvasElement=r.createCanvasElement||function(){return new e},T0.createImageElement=r.createImageElement||function(){return new o},T0.ImageData=r.ImageData||T0.ImageData,T0.Video=r.Video||T0.Video,T0.fetch=r.fetch||T0.fetch,T0.readFile=r.readFile||T0.readFile}var J0={getEnv:Hi,setEnv:w2,initialize:n3,createBrowserEnv:c5,createFileSystem:l5,createNodejsEnv:h5,monkeyPatch:ji,isBrowser:f5,isNodejs:p5};n3();function r3(r){return!J0.isNodejs()&&typeof r=="string"?document.getElementById(r):r}function H1(r){var n=J0.getEnv(),e=n.Canvas,t=n.CanvasRenderingContext2D;if(r instanceof t)return r;var o=r3(r);if(!(o instanceof e))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");var a=o.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var ne;(function(r){r.TOP_LEFT="TOP_LEFT",r.TOP_RIGHT="TOP_RIGHT",r.BOTTOM_LEFT="BOTTOM_LEFT",r.BOTTOM_RIGHT="BOTTOM_RIGHT"})(ne||(ne={}));var d5=function(){function r(n){n===void 0&&(n={});var e=n.anchorPosition,t=n.backgroundColor,o=n.fontColor,a=n.fontSize,i=n.fontStyle,s=n.padding;this.anchorPosition=e||ne.TOP_LEFT,this.backgroundColor=t||"rgba(0, 0, 0, 0.5)",this.fontColor=o||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=i||"Georgia",this.padding=s||4}return r}(),qi=function(){function r(n,e,t){t===void 0&&(t={}),this.text=typeof n=="string"?[n]:n instanceof r?n.text:n,this.anchor=e,this.options=new d5(t)}return r.prototype.measureWidth=function(n){var e=this.options.padding;return this.text.map(function(t){return n.measureText(t).width}).reduce(function(t,o){return t<o?o:t},0)+2*e},r.prototype.measureHeight=function(){var n=this.options,e=n.fontSize,t=n.padding;return this.text.length*e+2*t},r.prototype.getUpperLeft=function(n,e){var t=this.options.anchorPosition,o=t===ne.BOTTOM_RIGHT||t===ne.TOP_RIGHT,a=t===ne.BOTTOM_LEFT||t===ne.BOTTOM_RIGHT,i=this.measureWidth(n),s=this.measureHeight(),u=o?this.anchor.x-i:this.anchor.x,c=a?this.anchor.y-s:this.anchor.y;if(e){var l=e.width,h=e.height,f=Math.max(Math.min(u,l-i),0),p=Math.max(Math.min(c,h-s),0);return{x:f,y:p}}return{x:u,y:c}},r.prototype.draw=function(n){var e=r3(n),t=H1(e),o=this.options,a=o.backgroundColor,i=o.fontColor,s=o.fontSize,u=o.fontStyle,c=o.padding;t.font=s+"px "+u;var l=this.measureWidth(t),h=this.measureHeight();t.fillStyle=a;var f=this.getUpperLeft(t,e);t.fillRect(f.x,f.y,l,h),t.fillStyle=i,this.text.forEach(function(p,d){var m=c+f.x,v=c+f.y+(d+1)*s;t.fillText(p,m,v)})},r}(),Ki=function(){function r(n){n===void 0&&(n={});var e=n.boxColor,t=n.lineWidth,o=n.label,a=n.drawLabelOptions;this.boxColor=e||"rgba(0, 0, 255, 1)",this.lineWidth=t||2,this.label=o;var i={anchorPosition:ne.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new d5(Object.assign({},i,a))}return r}(),v5=function(){function r(n,e){e===void 0&&(e={}),this.box=new F1(n),this.options=new Ki(e)}return r.prototype.draw=function(n){var e=H1(n),t=this.options,o=t.boxColor,a=t.lineWidth,i=this.box,s=i.x,u=i.y,c=i.width,l=i.height;e.strokeStyle=o,e.lineWidth=a,e.strokeRect(s,u,c,l);var h=this.options.label;h&&new qi([h],{x:s-a/2,y:u},this.options.drawLabelOptions).draw(n)},r}();function Xi(r,n){var e=Array.isArray(n)?n:[n];e.forEach(function(t){var o=t instanceof l1?t.score:en(t)?t.detection.score:void 0,a=t instanceof l1?t.box:en(t)?t.detection.box:new F1(t),i=o?""+s5(o):void 0;new v5(a,{label:i}).draw(r)})}function m5(r){var n=J0.getEnv(),e=n.Image,t=n.Video;return r instanceof e&&r.complete||r instanceof t&&r.readyState>=3}function Yi(r){return new Promise(function(n,e){if(r instanceof J0.getEnv().Canvas||m5(r))return n();function t(a){a.currentTarget&&(a.currentTarget.removeEventListener("load",t),a.currentTarget.removeEventListener("error",o),n(a))}function o(a){a.currentTarget&&(a.currentTarget.removeEventListener("load",t),a.currentTarget.removeEventListener("error",o),e(a))}r.addEventListener("load",t),r.addEventListener("error",o)})}function o3(r){var n=J0.getEnv(),e=n.Image,t=n.Video;return r instanceof e?new me(r.naturalWidth,r.naturalHeight):r instanceof t?new me(r.videoWidth,r.videoHeight):new me(r.width,r.height)}function gn(r){var n=r.width,e=r.height,t=J0.getEnv().createCanvasElement,o=t();return o.width=n,o.height=e,o}function a3(r,n){var e=J0.getEnv().ImageData;if(!(r instanceof e)&&!m5(r))throw new Error("createCanvasFromMedia - media has not finished loading yet");var t=n||o3(r),o=t.width,a=t.height,i=gn({width:o,height:a});return r instanceof e?H1(i).putImageData(r,0,0):H1(i).drawImage(r,0,0,o,a),i}function $i(r,n){return Q(this,void 0,void 0,function(){var e,t,o,a,i,s;return Z(this,function(u){switch(u.label){case 0:return e=n||J0.getEnv().createCanvasElement(),t=r.shape.slice(ae(r)?1:0),o=t[0],a=t[1],i=t[2],s=K(function(){return r.as3D(o,a,i).toInt()}),[4,Z2.toPixels(s,e)];case 1:return u.sent(),s.dispose(),[2,e]}})})}function E4(r){var n=J0.getEnv(),e=n.Image,t=n.Canvas,o=n.Video;return r instanceof e||r instanceof t||r instanceof o}function Ji(r,n,e){e===void 0&&(e=!1);var t=J0.getEnv(),o=t.Image,a=t.Canvas;if(!(r instanceof o||r instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");var i=o3(r),s=n/Math.max(i.height,i.width),u=s*i.width,c=s*i.height,l=gn({width:n,height:n}),h=r instanceof a?r:a3(r),f=Math.abs(u-c)/2,p=e&&u<c?f:0,d=e&&c<u?f:0;return H1(l).drawImage(h,p,d,u,c),l}var tn=function(){function r(n,e){var t=this;if(e===void 0&&(e=!1),this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(n))throw new Error("NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have "+n);this._treatAsBatchInput=e,this._batchSize=n.length,n.forEach(function(o,a){if(vn(o)){t._imageTensors[a]=o,t._inputDimensions[a]=o.shape;return}if(ae(o)){var i=o.shape[0];if(i!==1)throw new Error("NetInput - tf.Tensor4D with batchSize "+i+" passed, but not supported in input array");t._imageTensors[a]=o,t._inputDimensions[a]=o.shape.slice(1);return}var s=o instanceof J0.getEnv().Canvas?o:a3(o);t._canvases[a]=s,t._inputDimensions[a]=[s.height,s.width,3]})}return Object.defineProperty(r.prototype,"imageTensors",{get:function(){return this._imageTensors},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"canvases",{get:function(){return this._canvases},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isBatchInput",{get:function(){return this.batchSize>1||this._treatAsBatchInput},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"batchSize",{get:function(){return this._batchSize},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"inputDimensions",{get:function(){return this._inputDimensions},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"inputSize",{get:function(){return this._inputSize},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"reshapedInputDimensions",{get:function(){var n=this;return st(this.batchSize,0,1).map(function(e,t){return n.getReshapedInputDimensions(t)})},enumerable:!0,configurable:!0}),r.prototype.getInput=function(n){return this.canvases[n]||this.imageTensors[n]},r.prototype.getInputDimensions=function(n){return this._inputDimensions[n]},r.prototype.getInputHeight=function(n){return this._inputDimensions[n][0]},r.prototype.getInputWidth=function(n){return this._inputDimensions[n][1]},r.prototype.getReshapedInputDimensions=function(n){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");var e=this.getInputWidth(n),t=this.getInputHeight(n);return Pi({width:e,height:t},this.inputSize)},r.prototype.toBatchTensor=function(n,e){var t=this;return e===void 0&&(e=!0),this._inputSize=n,K(function(){var o=st(t.batchSize,0,1).map(function(i){var s=t.getInput(i);if(s instanceof E0){var u=ae(s)?s:s.expandDims();return u=Li(u,e),(u.shape[1]!==n||u.shape[2]!==n)&&(u=K2.resizeBilinear(u,[n,n])),u.as3D(n,n,3)}if(s instanceof J0.getEnv().Canvas)return Z2.fromPixels(Ji(s,n,e));throw new Error("toBatchTensor - at batchIdx "+i+", expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have "+s)}),a=c1(o.map(function(i){return i.toFloat()})).as4D(t.batchSize,n,n,3);return a})},r}();function V0(r){return Q(this,void 0,void 0,function(){var n,e,t;return Z(this,function(o){switch(o.label){case 0:if(r instanceof tn)return[2,r];if(n=Array.isArray(r)?r:[r],!n.length)throw new Error("toNetInput - empty array passed as input");return e=function(a){return Array.isArray(r)?" at input index "+a+":":""},t=n.map(r3),t.forEach(function(a,i){if(!E4(a)&&!vn(a)&&!ae(a))throw typeof n[i]=="string"?new Error("toNetInput -"+e(i)+" string passed, but could not resolve HTMLElement for element id "+n[i]):new Error("toNetInput -"+e(i)+" expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id");if(ae(a)){var s=a.shape[0];if(s!==1)throw new Error("toNetInput -"+e(i)+" tf.Tensor4D with batchSize "+s+" passed, but not supported in input array")}}),[4,Promise.all(t.map(function(a){return E4(a)&&Yi(a)}))];case 1:return o.sent(),[2,new tn(t,Array.isArray(r))]}})})}function i3(r,n){return Q(this,void 0,void 0,function(){var e,t,o,a,i,s,u;return Z(this,function(c){switch(c.label){case 0:return e=J0.getEnv().Canvas,t=r,r instanceof e?[3,5]:[4,V0(r)];case 1:if(o=c.sent(),o.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");return a=o.getInput(0),a instanceof e?(i=a,[3,4]):[3,2];case 2:return[4,$i(a)];case 3:i=c.sent(),c.label=4;case 4:t=i,c.label=5;case 5:return s=H1(t),u=n.map(function(l){return l instanceof l1?l.forSize(t.width,t.height).box.floor():l}).map(function(l){return l.clipAtImageBorders(t.width,t.height)}),[2,u.map(function(l){var h=l.x,f=l.y,p=l.width,d=l.height,m=gn({width:p,height:d});return H1(m).putImageData(s.getImageData(h,f,p,d),0,0),m})]}})})}function s3(r,n){return Q(this,void 0,void 0,function(){return Z(this,function(e){if(!vn(r)&&!ae(r))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(ae(r)&&r.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return[2,K(function(){var t=r.shape.slice(ae(r)?1:0),o=t[0],a=t[1],i=t[2],s=n.map(function(c){return c instanceof l1?c.forSize(a,o).box:c}).map(function(c){return c.clipAtImageBorders(a,o)}),u=s.map(function(c){var l=c.x,h=c.y,f=c.width,p=c.height;return Gr(r.as3D(o,a,i),[h,l,0],[p,f,i])});return u})]})})}function Qi(r,n){return Q(this,void 0,void 0,function(){var e,t;return Z(this,function(o){switch(o.label){case 0:return e=J0.getEnv().fetch,[4,e(r,n)];case 1:if(t=o.sent(),!(t.status<400))throw new Error("failed to fetch: ("+t.status+") "+t.statusText+", from url: "+t.url);return[2,t]}})})}function Zi(r){return Q(this,void 0,void 0,function(){return Z(this,function(n){switch(n.label){case 0:return[4,Qi(r)];case 1:return[2,n.sent().json()]}})})}function g5(r,n){var e=n+"-weights_manifest.json";if(!r)return{modelBaseUri:"",manifestUri:e};if(r==="/")return{modelBaseUri:"/",manifestUri:"/"+e};var t=r.startsWith("http://")?"http://":r.startsWith("https://")?"https://":"";r=r.replace(t,"");var o=r.split("/").filter(function(s){return s}),a=r.endsWith(".json")?o[o.length-1]:e,i=t+(r.endsWith(".json")?o.slice(0,o.length-1):o).join("/");return i=r.startsWith("/")?"/"+i:i,{modelBaseUri:i,manifestUri:i==="/"?"/"+a:i+"/"+a}}function es(r,n){return Q(this,void 0,void 0,function(){var e,t,o,a;return Z(this,function(i){switch(i.label){case 0:return e=g5(r,n),t=e.manifestUri,o=e.modelBaseUri,[4,Zi(t)];case 1:return a=i.sent(),[2,a5.loadWeights(a,o)]}})})}function ts(r,n,e){e===void 0&&(e=!1);var t=e?o3(n):n,o=t.width,a=t.height;return r.width=o,r.height=a,{width:o,height:a}}var X1=function(){function r(n){this._name=n,this._params=void 0,this._paramMappings=[]}return Object.defineProperty(r.prototype,"params",{get:function(){return this._params},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"paramMappings",{get:function(){return this._paramMappings},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isLoaded",{get:function(){return!!this.params},enumerable:!0,configurable:!0}),r.prototype.getParamFromPath=function(n){var e=this.traversePropertyPath(n),t=e.obj,o=e.objProp;return t[o]},r.prototype.reassignParamFromPath=function(n,e){var t=this.traversePropertyPath(n),o=t.obj,a=t.objProp;o[a].dispose(),o[a]=e},r.prototype.getParamList=function(){var n=this;return this._paramMappings.map(function(e){var t=e.paramPath;return{path:t,tensor:n.getParamFromPath(t)}})},r.prototype.getTrainableParams=function(){return this.getParamList().filter(function(n){return n.tensor instanceof ze})},r.prototype.getFrozenParams=function(){return this.getParamList().filter(function(n){return!(n.tensor instanceof ze)})},r.prototype.variable=function(){var n=this;this.getFrozenParams().forEach(function(e){var t=e.path,o=e.tensor;n.reassignParamFromPath(t,o.variable())})},r.prototype.freeze=function(){var n=this;this.getTrainableParams().forEach(function(e){var t=e.path,o=e.tensor,a=H0(o.dataSync());o.dispose(),n.reassignParamFromPath(t,a)})},r.prototype.dispose=function(n){n===void 0&&(n=!0),this.getParamList().forEach(function(e){if(n&&e.tensor.isDisposed)throw new Error("param tensor has already been disposed for path "+e.path);e.tensor.dispose()}),this._params=void 0},r.prototype.serializeParams=function(){return new Float32Array(this.getParamList().map(function(n){var e=n.tensor;return Array.from(e.dataSync())}).reduce(function(n,e){return n.concat(e)}))},r.prototype.load=function(n){return Q(this,void 0,void 0,function(){return Z(this,function(e){switch(e.label){case 0:return n instanceof Float32Array?(this.extractWeights(n),[2]):[4,this.loadFromUri(n)];case 1:return e.sent(),[2]}})})},r.prototype.loadFromUri=function(n){return Q(this,void 0,void 0,function(){var e;return Z(this,function(t){switch(t.label){case 0:if(n&&typeof n!="string")throw new Error(this._name+".loadFromUri - expected model uri");return[4,es(n,this.getDefaultModelName())];case 1:return e=t.sent(),this.loadFromWeightMap(e),[2]}})})},r.prototype.loadFromDisk=function(n){return Q(this,void 0,void 0,function(){var e,t,o,a,i,s,u,c,l,h;return Z(this,function(f){switch(f.label){case 0:if(n&&typeof n!="string")throw new Error(this._name+".loadFromDisk - expected model file path");return e=J0.getEnv().readFile,t=g5(n,this.getDefaultModelName()),o=t.manifestUri,a=t.modelBaseUri,i=function(p){return Promise.all(p.map(function(d){return e(d).then(function(m){return m.buffer})}))},s=a5.weightsLoaderFactory(i),l=(c=JSON).parse,[4,e(o)];case 1:return u=l.apply(c,[f.sent().toString()]),[4,s(u,a)];case 2:return h=f.sent(),this.loadFromWeightMap(h),[2]}})})},r.prototype.loadFromWeightMap=function(n){var e=this.extractParamsFromWeigthMap(n),t=e.paramMappings,o=e.params;this._paramMappings=t,this._params=o},r.prototype.extractWeights=function(n){var e=this.extractParams(n),t=e.paramMappings,o=e.params;this._paramMappings=t,this._params=o},r.prototype.traversePropertyPath=function(n){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");var e=n.split("/").reduce(function(a,i){if(!a.nextObj.hasOwnProperty(i))throw new Error("traversePropertyPath - object does not have property "+i+", for path "+n);return{obj:a.nextObj,objProp:i,nextObj:a.nextObj[i]}},{nextObj:this.params}),t=e.obj,o=e.objProp;if(!t||!o||!(t[o]instanceof E0))throw new Error("traversePropertyPath - parameter is not a tensor, for path "+n);return{obj:t,objProp:o}},r}();function u1(r,n,e){return K(function(){var t=G2(r,n.depthwise_filter,n.pointwise_filter,e,"same");return t=u0(t,n.bias),t})}function Qn(r,n,e){return e===void 0&&(e=!1),K(function(){var t=I0(e?u0(d1(r,n.conv0.filters,[2,2],"same"),n.conv0.bias):u1(r,n.conv0,[2,2])),o=u1(t,n.conv1,[1,1]),a=I0(u0(t,o)),i=u1(a,n.conv2,[1,1]);return I0(u0(t,u0(o,i)))})}function Dt(r,n,e,t){return e===void 0&&(e=!1),t===void 0&&(t=!0),K(function(){var o=I0(e?u0(d1(r,n.conv0.filters,t?[2,2]:[1,1],"same"),n.conv0.bias):u1(r,n.conv0,t?[2,2]:[1,1])),a=u1(o,n.conv1,[1,1]),i=I0(u0(o,a)),s=u1(i,n.conv2,[1,1]),u=I0(u0(o,u0(a,s))),c=u1(u,n.conv3,[1,1]);return I0(u0(o,u0(a,u0(s,c))))})}function y1(r,n,e,t){return e===void 0&&(e="same"),t===void 0&&(t=!1),K(function(){var o=u0(d1(r,n.filters,[1,1],e),n.bias);return t?I0(o):o})}function Y1(r,n){Object.keys(r).forEach(function(e){n.some(function(t){return t.originalPath===e})||r[e].dispose()})}function yn(r,n){return function(e,t,o,a){var i=Q0(r(e*t*o*o),[o,o,e,t]),s=M0(r(t));return n.push({paramPath:a+"/filters"},{paramPath:a+"/bias"}),{filters:i,bias:s}}}function u3(r,n){return function(e,t,o){var a=re(r(e*t),[e,t]),i=M0(r(t));return n.push({paramPath:o+"/weights"},{paramPath:o+"/bias"}),{weights:a,bias:i}}}var y5=function(){function r(n,e,t){this.depthwise_filter=n,this.pointwise_filter=e,this.bias=t}return r}();function c3(r,n){return function(e,t,o){var a=Q0(r(9*e),[3,3,e,1]),i=Q0(r(e*t),[1,1,e,t]),s=M0(r(t));return n.push({paramPath:o+"/depthwise_filter"},{paramPath:o+"/pointwise_filter"},{paramPath:o+"/bias"}),new y5(a,i,s)}}function l3(r){return function(n){var e=r(n+"/depthwise_filter",4),t=r(n+"/pointwise_filter",4),o=r(n+"/bias",1);return new y5(e,t,o)}}function ce(r,n){return function(e,t,o){var a=r[e];if(!dn(a,t))throw new Error("expected weightMap["+e+"] to be a Tensor"+t+"D, instead have "+a);return n.push({originalPath:e,paramPath:o||e}),a}}function $1(r){var n=r;function e(o){var a=n.slice(0,o);return n=n.slice(o),a}function t(){return n}return{extractWeights:e,getRemainingWeights:t}}function x5(r,n){var e=yn(r,n),t=c3(r,n);function o(i,s,u,c){c===void 0&&(c=!1);var l=c?e(i,s,3,u+"/conv0"):t(i,s,u+"/conv0"),h=t(s,s,u+"/conv1"),f=t(s,s,u+"/conv2");return{conv0:l,conv1:h,conv2:f}}function a(i,s,u,c){c===void 0&&(c=!1);var l=o(i,s,u,c),h=l.conv0,f=l.conv1,p=l.conv2,d=t(s,s,u+"/conv3");return{conv0:h,conv1:f,conv2:p,conv3:d}}return{extractDenseBlock3Params:o,extractDenseBlock4Params:a}}function ns(r){var n=[],e=$1(r),t=e.extractWeights,o=e.getRemainingWeights,a=x5(t,n).extractDenseBlock4Params,i=a(3,32,"dense0",!0),s=a(32,64,"dense1"),u=a(64,128,"dense2"),c=a(128,256,"dense3");if(o().length!==0)throw new Error("weights remaing after extract: "+o().length);return{paramMappings:n,params:{dense0:i,dense1:s,dense2:u,dense3:c}}}function b5(r){return function(n){var e=r(n+"/filters",4),t=r(n+"/bias",1);return{filters:e,bias:t}}}function w5(r,n){var e=ce(r,n),t=b5(e),o=l3(e);function a(s,u){u===void 0&&(u=!1);var c=u?t(s+"/conv0"):o(s+"/conv0"),l=o(s+"/conv1"),h=o(s+"/conv2");return{conv0:c,conv1:l,conv2:h}}function i(s,u){u===void 0&&(u=!1);var c=u?t(s+"/conv0"):o(s+"/conv0"),l=o(s+"/conv1"),h=o(s+"/conv2"),f=o(s+"/conv3");return{conv0:c,conv1:l,conv2:h,conv3:f}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:i}}function rs(r){var n=[],e=w5(r,n).extractDenseBlock4Params,t={dense0:e("dense0",!0),dense1:e("dense1"),dense2:e("dense2"),dense3:e("dense3")};return Y1(r,n),{params:t,paramMappings:n}}var C5=function(r){r0(n,r);function n(){return r.call(this,"FaceFeatureExtractor")||this}return n.prototype.forwardInput=function(e){var t=this.params;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return K(function(){var o=e.toBatchTensor(112,!0),a=[122.782,117.001,104.298],i=xt(o,a).div(j(255)),s=Dt(i,t.dense0,!0);return s=Dt(s,t.dense1),s=Dt(s,t.dense2),s=Dt(s,t.dense3),s=gt(s,[7,7],[2,2],"valid"),s})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.getDefaultModelName=function(){return"face_feature_extractor_model"},n.prototype.extractParamsFromWeigthMap=function(e){return rs(e)},n.prototype.extractParams=function(e){return ns(e)},n}(X1);function A1(r,n){return K(function(){return u0(hn(r,n.weights),n.bias)})}function os(r,n,e){var t=[],o=$1(r),a=o.extractWeights,i=o.getRemainingWeights,s=u3(a,t),u=s(n,e,"fc");if(i().length!==0)throw new Error("weights remaing after extract: "+i().length);return{paramMappings:t,params:{fc:u}}}function as(r){var n=[],e=ce(r,n);function t(a){var i=e(a+"/weights",2),s=e(a+"/bias",1);return{weights:i,bias:s}}var o={fc:t("fc")};return Y1(r,n),{params:o,paramMappings:n}}function _5(r){var n={},e={};return Object.keys(r).forEach(function(t){var o=t.startsWith("fc")?e:n;o[t]=r[t]}),{featureExtractorMap:n,classifierMap:e}}var E5=function(r){r0(n,r);function n(e,t){var o=r.call(this,e)||this;return o._faceFeatureExtractor=t,o}return Object.defineProperty(n.prototype,"faceFeatureExtractor",{get:function(){return this._faceFeatureExtractor},enumerable:!0,configurable:!0}),n.prototype.runNet=function(e){var t=this,o=this.params;if(!o)throw new Error(this._name+" - load model before inference");return K(function(){var a=e instanceof tn?t.faceFeatureExtractor.forwardInput(e):e;return A1(a.as2D(a.shape[0],-1),o.fc)})},n.prototype.dispose=function(e){e===void 0&&(e=!0),this.faceFeatureExtractor.dispose(e),r.prototype.dispose.call(this,e)},n.prototype.loadClassifierParams=function(e){var t=this.extractClassifierParams(e),o=t.params,a=t.paramMappings;this._params=o,this._paramMappings=a},n.prototype.extractClassifierParams=function(e){return os(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())},n.prototype.extractParamsFromWeigthMap=function(e){var t=_5(e),o=t.featureExtractorMap,a=t.classifierMap;return this.faceFeatureExtractor.loadFromWeightMap(o),as(a)},n.prototype.extractParams=function(e){var t=this.getClassifierChannelsIn(),o=this.getClassifierChannelsOut(),a=o*t+o,i=e.slice(0,e.length-a),s=e.slice(e.length-a);return this.faceFeatureExtractor.extractWeights(i),this.extractClassifierParams(s)},n}(X1),I4=["neutral","happy","sad","angry","fearful","disgusted","surprised"],is=function(){function r(n){var e=this;if(n.length!==7)throw new Error("FaceExpressions.constructor - expected probabilities.length to be 7, have: "+n.length);I4.forEach(function(t,o){e[t]=n[o]})}return r.prototype.asSortedArray=function(){var n=this;return I4.map(function(e){return{expression:e,probability:n[e]}}).sort(function(e,t){return t.probability-e.probability})},r}(),ss=function(r){r0(n,r);function n(e){return e===void 0&&(e=new C5),r.call(this,"FaceExpressionNet",e)||this}return n.prototype.forwardInput=function(e){var t=this;return K(function(){return q1(t.runNet(e))})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.predictExpressions=function(e){return Q(this,void 0,void 0,function(){var t,o,a,i,s=this;return Z(this,function(u){switch(u.label){case 0:return[4,V0(e)];case 1:return t=u.sent(),[4,this.forwardInput(t)];case 2:return o=u.sent(),[4,Promise.all(F0(o).map(function(c){return Q(s,void 0,void 0,function(){var l;return Z(this,function(h){switch(h.label){case 0:return[4,c.data()];case 1:return l=h.sent(),c.dispose(),[2,l]}})})}))];case 3:return a=u.sent(),o.dispose(),i=a.map(function(c){return new is(c)}),[2,t.isBatchInput?i:i[0]]}})})},n.prototype.getDefaultModelName=function(){return"face_expression_model"},n.prototype.getClassifierChannelsIn=function(){return 256},n.prototype.getClassifierChannelsOut=function(){return 7},n}(E5);function I5(r,n){var e={expressions:n};return Object.assign({},r,e)}function R5(r){return en(r)&&r.landmarks instanceof ct&&r.unshiftedLandmarks instanceof ct&&r.alignedRect instanceof l1}function xn(r,n){var e=r.detection.box,t=n.shiftBy(e.x,e.y),o=t.align(),a=r.detection.imageDims,i=new l1(r.detection.score,o.rescale(a.reverse()),a),s={landmarks:t,unshiftedLandmarks:n,alignedRect:i};return Object.assign({},r,s)}function us(r,n){var e=yn(r,n),t=c3(r,n);function o(i,s,u){var c=t(i,s,u+"/separable_conv0"),l=t(s,s,u+"/separable_conv1"),h=e(i,s,1,u+"/expansion_conv");return{separable_conv0:c,separable_conv1:l,expansion_conv:h}}function a(i,s){var u=t(i,i,s+"/separable_conv0"),c=t(i,i,s+"/separable_conv1"),l=t(i,i,s+"/separable_conv2");return{separable_conv0:u,separable_conv1:c,separable_conv2:l}}return{extractConvParams:e,extractSeparableConvParams:t,extractReductionBlockParams:o,extractMainBlockParams:a}}function cs(r,n){var e=[],t=$1(r),o=t.extractWeights,a=t.getRemainingWeights,i=us(o,e),s=i.extractConvParams,u=i.extractSeparableConvParams,c=i.extractReductionBlockParams,l=i.extractMainBlockParams,h=s(3,32,3,"entry_flow/conv_in"),f=c(32,64,"entry_flow/reduction_block_0"),p=c(64,128,"entry_flow/reduction_block_1"),d={conv_in:h,reduction_block_0:f,reduction_block_1:p},m={};st(n,0,1).forEach(function(b){m["main_block_"+b]=l(128,"middle_flow/main_block_"+b)});var v=c(128,256,"exit_flow/reduction_block"),g=u(256,512,"exit_flow/separable_conv"),x={reduction_block:v,separable_conv:g};if(a().length!==0)throw new Error("weights remaing after extract: "+a().length);return{paramMappings:e,params:{entry_flow:d,middle_flow:m,exit_flow:x}}}function ls(r,n){var e=ce(r,n),t=b5(e),o=l3(e);function a(s){var u=o(s+"/separable_conv0"),c=o(s+"/separable_conv1"),l=t(s+"/expansion_conv");return{separable_conv0:u,separable_conv1:c,expansion_conv:l}}function i(s){var u=o(s+"/separable_conv0"),c=o(s+"/separable_conv1"),l=o(s+"/separable_conv2");return{separable_conv0:u,separable_conv1:c,separable_conv2:l}}return{extractConvParams:t,extractSeparableConvParams:o,extractReductionBlockParams:a,extractMainBlockParams:i}}function hs(r,n){var e=[],t=ls(r,e),o=t.extractConvParams,a=t.extractSeparableConvParams,i=t.extractReductionBlockParams,s=t.extractMainBlockParams,u=o("entry_flow/conv_in"),c=i("entry_flow/reduction_block_0"),l=i("entry_flow/reduction_block_1"),h={conv_in:u,reduction_block_0:c,reduction_block_1:l},f={};st(n,0,1).forEach(function(v){f["main_block_"+v]=s("middle_flow/main_block_"+v)});var p=i("exit_flow/reduction_block"),d=a("exit_flow/separable_conv"),m={reduction_block:p,separable_conv:d};return Y1(r,e),{params:{entry_flow:h,middle_flow:f,exit_flow:m},paramMappings:e}}function k5(r,n,e){return u0(d1(r,n.filters,e,"same"),n.bias)}function Zn(r,n,e){e===void 0&&(e=!0);var t=e?I0(r):r;return t=u1(t,n.separable_conv0,[1,1]),t=u1(I0(t),n.separable_conv1,[1,1]),t=L0(t,[3,3],[2,2],"same"),t=u0(t,k5(r,n.expansion_conv,[2,2])),t}function fs(r,n){var e=u1(I0(r),n.separable_conv0,[1,1]);return e=u1(I0(e),n.separable_conv1,[1,1]),e=u1(I0(e),n.separable_conv2,[1,1]),e=u0(e,r),e}var ps=function(r){r0(n,r);function n(e){var t=r.call(this,"TinyXception")||this;return t._numMainBlocks=e,t}return n.prototype.forwardInput=function(e){var t=this,o=this.params;if(!o)throw new Error("TinyXception - load model before inference");return K(function(){var a=e.toBatchTensor(112,!0),i=[122.782,117.001,104.298],s=xt(a,i).div(j(256)),u=I0(k5(s,o.entry_flow.conv_in,[2,2]));return u=Zn(u,o.entry_flow.reduction_block_0,!1),u=Zn(u,o.entry_flow.reduction_block_1),st(t._numMainBlocks,0,1).forEach(function(c){u=fs(u,o.middle_flow["main_block_"+c])}),u=Zn(u,o.exit_flow.reduction_block),u=I0(u1(u,o.exit_flow.separable_conv,[1,1])),u})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.getDefaultModelName=function(){return"tiny_xception_model"},n.prototype.extractParamsFromWeigthMap=function(e){return hs(e,this._numMainBlocks)},n.prototype.extractParams=function(e){return cs(e,this._numMainBlocks)},n}(X1);function ds(r){var n=[],e=$1(r),t=e.extractWeights,o=e.getRemainingWeights,a=u3(t,n),i=a(512,1,"fc/age"),s=a(512,2,"fc/gender");if(o().length!==0)throw new Error("weights remaing after extract: "+o().length);return{paramMappings:n,params:{fc:{age:i,gender:s}}}}function vs(r){var n=[],e=ce(r,n);function t(a){var i=e(a+"/weights",2),s=e(a+"/bias",1);return{weights:i,bias:s}}var o={fc:{age:t("fc/age"),gender:t("fc/gender")}};return Y1(r,n),{params:o,paramMappings:n}}var nn;(function(r){r.FEMALE="female",r.MALE="male"})(nn||(nn={}));var ms=function(r){r0(n,r);function n(e){e===void 0&&(e=new ps(2));var t=r.call(this,"AgeGenderNet")||this;return t._faceFeatureExtractor=e,t}return Object.defineProperty(n.prototype,"faceFeatureExtractor",{get:function(){return this._faceFeatureExtractor},enumerable:!0,configurable:!0}),n.prototype.runNet=function(e){var t=this,o=this.params;if(!o)throw new Error(this._name+" - load model before inference");return K(function(){var a=e instanceof tn?t.faceFeatureExtractor.forwardInput(e):e,i=gt(a,[7,7],[2,2],"valid").as2D(a.shape[0],-1),s=A1(i,o.fc.age).as1D(),u=A1(i,o.fc.gender);return{age:s,gender:u}})},n.prototype.forwardInput=function(e){var t=this;return K(function(){var o=t.runNet(e),a=o.age,i=o.gender;return{age:a,gender:q1(i)}})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.predictAgeAndGender=function(e){return Q(this,void 0,void 0,function(){var t,o,a,i,s,u,c=this;return Z(this,function(l){switch(l.label){case 0:return[4,V0(e)];case 1:return t=l.sent(),[4,this.forwardInput(t)];case 2:return o=l.sent(),a=F0(o.age),i=F0(o.gender),s=a.map(function(h,f){return{ageTensor:h,genderTensor:i[f]}}),[4,Promise.all(s.map(function(h){var f=h.ageTensor,p=h.genderTensor;return Q(c,void 0,void 0,function(){var d,m,v,g,x;return Z(this,function(b){switch(b.label){case 0:return[4,f.data()];case 1:return d=b.sent()[0],[4,p.data()];case 2:return m=b.sent()[0],v=m>.5,g=v?nn.MALE:nn.FEMALE,x=v?m:1-m,f.dispose(),p.dispose(),[2,{age:d,gender:g,genderProbability:x}]}})})}))];case 3:return u=l.sent(),o.age.dispose(),o.gender.dispose(),[2,t.isBatchInput?u:u[0]]}})})},n.prototype.getDefaultModelName=function(){return"age_gender_model"},n.prototype.dispose=function(e){e===void 0&&(e=!0),this.faceFeatureExtractor.dispose(e),r.prototype.dispose.call(this,e)},n.prototype.loadClassifierParams=function(e){var t=this.extractClassifierParams(e),o=t.params,a=t.paramMappings;this._params=o,this._paramMappings=a},n.prototype.extractClassifierParams=function(e){return ds(e)},n.prototype.extractParamsFromWeigthMap=function(e){var t=_5(e),o=t.featureExtractorMap,a=t.classifierMap;return this.faceFeatureExtractor.loadFromWeightMap(o),vs(a)},n.prototype.extractParams=function(e){var t=1539,o=e.slice(0,e.length-t),a=e.slice(e.length-t);return this.faceFeatureExtractor.extractWeights(o),this.extractClassifierParams(a)},n}(X1),S5=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.postProcess=function(e,t,o){var a=o.map(function(s){var u=s.width,c=s.height,l=t/Math.max(c,u);return{width:u*l,height:c*l}}),i=a.length;return K(function(){var s=function(f,p){return c1([T1([68],f),T1([68],p)],1).as2D(1,136).as1D()},u=function(f,p){var d=a[f],m=d.width,v=d.height;return p(m,v)?Math.abs(m-v)/2:0},c=function(f){return u(f,function(p,d){return p<d})},l=function(f){return u(f,function(p,d){return d<p})},h=e.mul(T1([i,136],t)).sub(c1(Array.from(Array(i),function(f,p){return s(c(p),l(p))}))).div(c1(Array.from(Array(i),function(f,p){return s(a[p].width,a[p].height)})));return h})},n.prototype.forwardInput=function(e){var t=this;return K(function(){var o=t.runNet(e);return t.postProcess(o,e.inputSize,e.inputDimensions.map(function(a){var i=a[0],s=a[1];return{height:i,width:s}}))})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.detectLandmarks=function(e){return Q(this,void 0,void 0,function(){var t,o,a,i=this;return Z(this,function(s){switch(s.label){case 0:return[4,V0(e)];case 1:return t=s.sent(),o=K(function(){return F0(i.forwardInput(t))}),[4,Promise.all(o.map(function(u,c){return Q(i,void 0,void 0,function(){var l,h,f,p,d;return Z(this,function(m){switch(m.label){case 0:return f=(h=Array).from,[4,u.data()];case 1:return l=f.apply(h,[m.sent()]),p=l.filter(function(v,g){return x4(g)}),d=l.filter(function(v,g){return!x4(g)}),[2,new zi(Array(68).fill(0).map(function(v,g){return new g0(p[g],d[g])}),{height:t.getInputHeight(c),width:t.getInputWidth(c)})]}})})}))];case 2:return a=s.sent(),o.forEach(function(u){return u.dispose()}),[2,t.isBatchInput?a:a[0]]}})})},n.prototype.getClassifierChannelsOut=function(){return 136},n}(E5),A5=function(r){r0(n,r);function n(e){return e===void 0&&(e=new C5),r.call(this,"FaceLandmark68Net",e)||this}return n.prototype.getDefaultModelName=function(){return"face_landmark_68_model"},n.prototype.getClassifierChannelsIn=function(){return 256},n}(S5);function gs(r){var n=[],e=w5(r,n).extractDenseBlock3Params,t={dense0:e("dense0",!0),dense1:e("dense1"),dense2:e("dense2")};return Y1(r,n),{params:t,paramMappings:n}}function ys(r){var n=[],e=$1(r),t=e.extractWeights,o=e.getRemainingWeights,a=x5(t,n).extractDenseBlock3Params,i=a(3,32,"dense0",!0),s=a(32,64,"dense1"),u=a(64,128,"dense2");if(o().length!==0)throw new Error("weights remaing after extract: "+o().length);return{paramMappings:n,params:{dense0:i,dense1:s,dense2:u}}}var xs=function(r){r0(n,r);function n(){return r.call(this,"TinyFaceFeatureExtractor")||this}return n.prototype.forwardInput=function(e){var t=this.params;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return K(function(){var o=e.toBatchTensor(112,!0),a=[122.782,117.001,104.298],i=xt(o,a).div(j(255)),s=Qn(i,t.dense0,!0);return s=Qn(s,t.dense1),s=Qn(s,t.dense2),s=gt(s,[14,14],[2,2],"valid"),s})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.getDefaultModelName=function(){return"face_feature_extractor_tiny_model"},n.prototype.extractParamsFromWeigthMap=function(e){return gs(e)},n.prototype.extractParams=function(e){return ys(e)},n}(X1),bs=function(r){r0(n,r);function n(e){return e===void 0&&(e=new xs),r.call(this,"FaceLandmark68TinyNet",e)||this}return n.prototype.getDefaultModelName=function(){return"face_landmark_68_tiny_model"},n.prototype.getClassifierChannelsIn=function(){return 128},n}(S5);(function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n})(A5);function ws(r,n){return u0($0(r,n.weights),n.biases)}function h3(r,n,e,t,o){o===void 0&&(o="same");var a=n.conv,i=a.filters,s=a.bias,u=d1(r,i,e,o);return u=u0(u,s),u=ws(u,n.scale),t?I0(u):u}function Cs(r,n){return h3(r,n,[1,1],!0)}function D5(r,n){return h3(r,n,[1,1],!1)}function M5(r,n){return h3(r,n,[2,2],!0,"valid")}function _s(r,n){function e(s,u,c){var l=r(s),h=l.length/(u*c*c);if(Fi(h))throw new Error("depth has to be an integer: "+h+", weights.length: "+l.length+", numFilters: "+u+", filterSize: "+c);return K(function(){return ie(Q0(l,[u,h,c,c]),[2,3,1,0])})}function t(s,u,c,l){var h=e(s,u,c),f=M0(r(u));return n.push({paramPath:l+"/filters"},{paramPath:l+"/bias"}),{filters:h,bias:f}}function o(s,u){var c=M0(r(s)),l=M0(r(s));return n.push({paramPath:u+"/weights"},{paramPath:u+"/biases"}),{weights:c,biases:l}}function a(s,u,c,l){var h=t(s,u,c,l+"/conv"),f=o(u,l+"/scale");return{conv:h,scale:f}}function i(s,u,c,l,h){h===void 0&&(h=!1);var f=a((h?.5:1)*s,u,c,l+"/conv1"),p=a(s,u,c,l+"/conv2");return{conv1:f,conv2:p}}return{extractConvLayerParams:a,extractResidualLayerParams:i}}function Es(r){var n=$1(r),e=n.extractWeights,t=n.getRemainingWeights,o=[],a=_s(e,o),i=a.extractConvLayerParams,s=a.extractResidualLayerParams,u=i(4704,32,7,"conv32_down"),c=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),h=s(9216,32,3,"conv32_3"),f=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),m=s(36864,64,3,"conv64_3"),v=s(147456,128,3,"conv128_down",!0),g=s(147456,128,3,"conv128_1"),x=s(147456,128,3,"conv128_2"),b=s(589824,256,3,"conv256_down",!0),y=s(589824,256,3,"conv256_1"),w=s(589824,256,3,"conv256_2"),C=s(589824,256,3,"conv256_down_out"),S=K(function(){return ie(re(e(256*128),[128,256]),[1,0])});if(o.push({paramPath:"fc"}),t().length!==0)throw new Error("weights remaing after extract: "+t().length);var k={conv32_down:u,conv32_1:c,conv32_2:l,conv32_3:h,conv64_down:f,conv64_1:p,conv64_2:d,conv64_3:m,conv128_down:v,conv128_1:g,conv128_2:x,conv256_down:b,conv256_1:y,conv256_2:w,conv256_down_out:C,fc:S};return{params:k,paramMappings:o}}function Is(r,n){var e=ce(r,n);function t(i){var s=e(i+"/scale/weights",1),u=e(i+"/scale/biases",1);return{weights:s,biases:u}}function o(i){var s=e(i+"/conv/filters",4),u=e(i+"/conv/bias",1),c=t(i);return{conv:{filters:s,bias:u},scale:c}}function a(i){return{conv1:o(i+"/conv1"),conv2:o(i+"/conv2")}}return{extractConvLayerParams:o,extractResidualLayerParams:a}}function Rs(r){var n=[],e=Is(r,n),t=e.extractConvLayerParams,o=e.extractResidualLayerParams,a=t("conv32_down"),i=o("conv32_1"),s=o("conv32_2"),u=o("conv32_3"),c=o("conv64_down"),l=o("conv64_1"),h=o("conv64_2"),f=o("conv64_3"),p=o("conv128_down"),d=o("conv128_1"),m=o("conv128_2"),v=o("conv256_down"),g=o("conv256_1"),x=o("conv256_2"),b=o("conv256_down_out"),y=r.fc;if(n.push({originalPath:"fc",paramPath:"fc"}),!Ni(y))throw new Error("expected weightMap[fc] to be a Tensor2D, instead have "+y);var w={conv32_down:a,conv32_1:i,conv32_2:s,conv32_3:u,conv64_down:c,conv64_1:l,conv64_2:h,conv64_3:f,conv128_down:p,conv128_1:d,conv128_2:m,conv256_down:v,conv256_1:g,conv256_2:x,conv256_down_out:b,fc:y};return Y1(r,n),{params:w,paramMappings:n}}function E1(r,n){var e=Cs(r,n.conv1);return e=D5(e,n.conv2),e=u0(e,r),e=I0(e),e}function Mt(r,n){var e=M5(r,n.conv1);e=D5(e,n.conv2);var t=gt(r,2,2,"valid"),o=w0(t.shape),a=t.shape[3]!==e.shape[3],i=t.shape[1]!==e.shape[1]||t.shape[2]!==e.shape[2];if(i){var s=tt(e.shape);s[1]=1;var u=w0(s);e=N0([e,u],1);var c=tt(e.shape);c[2]=1;var l=w0(c);e=N0([e,l],2)}return t=a?N0([t,o],3):t,e=u0(t,e),e=I0(e),e}var ks=function(r){r0(n,r);function n(){return r.call(this,"FaceRecognitionNet")||this}return n.prototype.forwardInput=function(e){var t=this.params;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return K(function(){var o=e.toBatchTensor(150,!0).toFloat(),a=[122.782,117.001,104.298],i=xt(o,a).div(j(256)),s=M5(i,t.conv32_down);s=L0(s,3,2,"valid"),s=E1(s,t.conv32_1),s=E1(s,t.conv32_2),s=E1(s,t.conv32_3),s=Mt(s,t.conv64_down),s=E1(s,t.conv64_1),s=E1(s,t.conv64_2),s=E1(s,t.conv64_3),s=Mt(s,t.conv128_down),s=E1(s,t.conv128_1),s=E1(s,t.conv128_2),s=Mt(s,t.conv256_down),s=E1(s,t.conv256_1),s=E1(s,t.conv256_2),s=Mt(s,t.conv256_down_out);var u=s.mean([1,2]),c=hn(u,t.fc);return c})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.computeFaceDescriptor=function(e){return Q(this,void 0,void 0,function(){var t,o,a,i=this;return Z(this,function(s){switch(s.label){case 0:return[4,V0(e)];case 1:return t=s.sent(),o=K(function(){return F0(i.forwardInput(t))}),[4,Promise.all(o.map(function(u){return u.data()}))];case 2:return a=s.sent(),o.forEach(function(u){return u.dispose()}),[2,t.isBatchInput?a:a[0]]}})})},n.prototype.getDefaultModelName=function(){return"face_recognition_model"},n.prototype.extractParamsFromWeigthMap=function(e){return Rs(e)},n.prototype.extractParams=function(e){return Es(e)},n}(X1);function T5(r,n){var e={descriptor:n};return Object.assign({},r,e)}function N5(r,n){var e={age:n};return Object.assign({},r,e)}function F5(r,n,e){var t={gender:n,genderProbability:e};return Object.assign({},r,t)}var P5=function(){function r(n){var e=n===void 0?{}:n,t=e.minFaceSize,o=e.scaleFactor,a=e.maxNumScales,i=e.scoreThresholds,s=e.scaleSteps;if(this._name="MtcnnOptions",this._minFaceSize=t||20,this._scaleFactor=o||.709,this._maxNumScales=a||10,this._scoreThresholds=i||[.6,.7,.7],this._scaleSteps=s,typeof this._minFaceSize!="number"||this._minFaceSize<0)throw new Error(this._name+" - expected minFaceSize to be a number > 0");if(typeof this._scaleFactor!="number"||this._scaleFactor<=0||this._scaleFactor>=1)throw new Error(this._name+" - expected scaleFactor to be a number between 0 and 1");if(typeof this._maxNumScales!="number"||this._maxNumScales<0)throw new Error(this._name+" - expected maxNumScales to be a number > 0");if(!Array.isArray(this._scoreThresholds)||this._scoreThresholds.length!==3||this._scoreThresholds.some(function(u){return typeof u!="number"}))throw new Error(this._name+" - expected scoreThresholds to be an array of numbers of length 3");if(this._scaleSteps&&(!Array.isArray(this._scaleSteps)||this._scaleSteps.some(function(u){return typeof u!="number"})))throw new Error(this._name+" - expected scaleSteps to be an array of numbers")}return Object.defineProperty(r.prototype,"minFaceSize",{get:function(){return this._minFaceSize},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scaleFactor",{get:function(){return this._scaleFactor},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"maxNumScales",{get:function(){return this._maxNumScales},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scoreThresholds",{get:function(){return this._scoreThresholds},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scaleSteps",{get:function(){return this._scaleSteps},enumerable:!0,configurable:!0}),r}();function Ss(r,n){function e(u,c){var l=Q0(r(9*u),[3,3,u,1]),h=M0(r(u)),f=M0(r(u)),p=M0(r(u)),d=M0(r(u));return n.push({paramPath:c+"/filters"},{paramPath:c+"/batch_norm_scale"},{paramPath:c+"/batch_norm_offset"},{paramPath:c+"/batch_norm_mean"},{paramPath:c+"/batch_norm_variance"}),{filters:l,batch_norm_scale:h,batch_norm_offset:f,batch_norm_mean:p,batch_norm_variance:d}}function t(u,c,l,h,f){var p=Q0(r(u*c*l*l),[l,l,u,c]),d=M0(r(c));return n.push({paramPath:h+"/filters"},{paramPath:h+"/"+(f?"batch_norm_offset":"bias")}),{filters:p,bias:d}}function o(u,c,l,h){var f=t(u,c,l,h,!0),p=f.filters,d=f.bias;return{filters:p,batch_norm_offset:d}}function a(u,c,l){var h=e(u,l+"/depthwise_conv"),f=o(u,c,1,l+"/pointwise_conv");return{depthwise_conv:h,pointwise_conv:f}}function i(){var u=o(3,32,3,"mobilenetv1/conv_0"),c=a(32,64,"mobilenetv1/conv_1"),l=a(64,128,"mobilenetv1/conv_2"),h=a(128,128,"mobilenetv1/conv_3"),f=a(128,256,"mobilenetv1/conv_4"),p=a(256,256,"mobilenetv1/conv_5"),d=a(256,512,"mobilenetv1/conv_6"),m=a(512,512,"mobilenetv1/conv_7"),v=a(512,512,"mobilenetv1/conv_8"),g=a(512,512,"mobilenetv1/conv_9"),x=a(512,512,"mobilenetv1/conv_10"),b=a(512,512,"mobilenetv1/conv_11"),y=a(512,1024,"mobilenetv1/conv_12"),w=a(1024,1024,"mobilenetv1/conv_13");return{conv_0:u,conv_1:c,conv_2:l,conv_3:h,conv_4:f,conv_5:p,conv_6:d,conv_7:m,conv_8:v,conv_9:g,conv_10:x,conv_11:b,conv_12:y,conv_13:w}}function s(){var u=o(1024,256,1,"prediction_layer/conv_0"),c=o(256,512,3,"prediction_layer/conv_1"),l=o(512,128,1,"prediction_layer/conv_2"),h=o(128,256,3,"prediction_layer/conv_3"),f=o(256,128,1,"prediction_layer/conv_4"),p=o(128,256,3,"prediction_layer/conv_5"),d=o(256,64,1,"prediction_layer/conv_6"),m=o(64,128,3,"prediction_layer/conv_7"),v=t(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),g=t(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),x=t(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),b=t(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),y=t(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),w=t(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),C=t(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),S=t(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),k=t(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),I=t(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),R=t(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),T=t(128,18,1,"prediction_layer/box_predictor_5/class_predictor"),D={box_encoding_predictor:v,class_predictor:g},L={box_encoding_predictor:x,class_predictor:b},O={box_encoding_predictor:y,class_predictor:w},B={box_encoding_predictor:C,class_predictor:S},U={box_encoding_predictor:k,class_predictor:I},V={box_encoding_predictor:R,class_predictor:T};return{conv_0:u,conv_1:c,conv_2:l,conv_3:h,conv_4:f,conv_5:p,conv_6:d,conv_7:m,box_predictor_0:D,box_predictor_1:L,box_predictor_2:O,box_predictor_3:B,box_predictor_4:U,box_predictor_5:V}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:s}}function As(r){var n=[],e=$1(r),t=e.extractWeights,o=e.getRemainingWeights,a=Ss(t,n),i=a.extractMobilenetV1Params,s=a.extractPredictionLayerParams,u=i(),c=s(),l=k2(t(5118*4),[1,5118,4]),h={extra_dim:l};if(n.push({paramPath:"output_layer/extra_dim"}),o().length!==0)throw new Error("weights remaing after extract: "+o().length);return{params:{mobilenetv1:u,prediction_layer:c,output_layer:h},paramMappings:n}}function Ds(r,n){var e=ce(r,n);function t(c,l,h){var f=e(c+"/Conv2d_"+l+"_pointwise/weights",4,h+"/filters"),p=e(c+"/Conv2d_"+l+"_pointwise/convolution_bn_offset",1,h+"/batch_norm_offset");return{filters:f,batch_norm_offset:p}}function o(c){var l="mobilenetv1/conv_"+c,h="MobilenetV1/Conv2d_"+c+"_depthwise",f=l+"/depthwise_conv",p=l+"/pointwise_conv",d=e(h+"/depthwise_weights",4,f+"/filters"),m=e(h+"/BatchNorm/gamma",1,f+"/batch_norm_scale"),v=e(h+"/BatchNorm/beta",1,f+"/batch_norm_offset"),g=e(h+"/BatchNorm/moving_mean",1,f+"/batch_norm_mean"),x=e(h+"/BatchNorm/moving_variance",1,f+"/batch_norm_variance");return{depthwise_conv:{filters:d,batch_norm_scale:m,batch_norm_offset:v,batch_norm_mean:g,batch_norm_variance:x},pointwise_conv:t("MobilenetV1",c,p)}}function a(){return{conv_0:t("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:o(1),conv_2:o(2),conv_3:o(3),conv_4:o(4),conv_5:o(5),conv_6:o(6),conv_7:o(7),conv_8:o(8),conv_9:o(9),conv_10:o(10),conv_11:o(11),conv_12:o(12),conv_13:o(13)}}function i(c,l){var h=e(c+"/weights",4,l+"/filters"),f=e(c+"/biases",1,l+"/bias");return{filters:h,bias:f}}function s(c){var l=i("Prediction/BoxPredictor_"+c+"/BoxEncodingPredictor","prediction_layer/box_predictor_"+c+"/box_encoding_predictor"),h=i("Prediction/BoxPredictor_"+c+"/ClassPredictor","prediction_layer/box_predictor_"+c+"/class_predictor");return{box_encoding_predictor:l,class_predictor:h}}function u(){return{conv_0:t("Prediction",0,"prediction_layer/conv_0"),conv_1:t("Prediction",1,"prediction_layer/conv_1"),conv_2:t("Prediction",2,"prediction_layer/conv_2"),conv_3:t("Prediction",3,"prediction_layer/conv_3"),conv_4:t("Prediction",4,"prediction_layer/conv_4"),conv_5:t("Prediction",5,"prediction_layer/conv_5"),conv_6:t("Prediction",6,"prediction_layer/conv_6"),conv_7:t("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:s(0),box_predictor_1:s(1),box_predictor_2:s(2),box_predictor_3:s(3),box_predictor_4:s(4),box_predictor_5:s(5)}}return{extractMobilenetV1Params:a,extractPredictionLayerParams:u}}function Ms(r){var n=[],e=Ds(r,n),t=e.extractMobilenetV1Params,o=e.extractPredictionLayerParams,a=r["Output/extra_dim"];if(n.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!vn(a))throw new Error("expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have "+a);var i={mobilenetv1:t(),prediction_layer:o(),output_layer:{extra_dim:a}};return Y1(r,n),{params:i,paramMappings:n}}function I1(r,n,e){return K(function(){var t=d1(r,n.filters,e,"same");return t=u0(t,n.batch_norm_offset),L2(t,0,6)})}var Ts=.0010000000474974513;function Ns(r,n,e){return K(function(){var t=ln(r,n.filters,e,"same");return t=kr(t,n.batch_norm_mean,n.batch_norm_variance,n.batch_norm_offset,n.batch_norm_scale,Ts),L2(t,0,6)})}function Fs(r){return[2,4,6,12].some(function(n){return n===r})?[2,2]:[1,1]}function Ps(r,n){return K(function(){var e=null,t=I1(r,n.conv_0,[2,2]),o=[n.conv_1,n.conv_2,n.conv_3,n.conv_4,n.conv_5,n.conv_6,n.conv_7,n.conv_8,n.conv_9,n.conv_10,n.conv_11,n.conv_12,n.conv_13];if(o.forEach(function(a,i){var s=i+1,u=Fs(s);t=Ns(t,a.depthwise_conv,u),t=I1(t,a.pointwise_conv,[1,1]),s===11&&(e=t)}),e===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:t,conv11:e}})}function Os(r,n,e,t,o){var a=r.shape[0],i=Math.min(e,a),s=n.map(function(l,h){return{score:l,boxIndex:h}}).filter(function(l){return l.score>o}).sort(function(l,h){return h.score-l.score}),u=function(l){return l<=t?1:0},c=[];return s.forEach(function(l){if(!(c.length>=i)){for(var h=l.score,f=c.length-1;f>=0;--f){var p=Bs(r,l.boxIndex,c[f]);if(p!==0&&(l.score*=u(p),l.score<=o))break}h===l.score&&c.push(l.boxIndex)}}),c}function Bs(r,n,e){var t=r.arraySync(),o=Math.min(t[n][0],t[n][2]),a=Math.min(t[n][1],t[n][3]),i=Math.max(t[n][0],t[n][2]),s=Math.max(t[n][1],t[n][3]),u=Math.min(t[e][0],t[e][2]),c=Math.min(t[e][1],t[e][3]),l=Math.max(t[e][0],t[e][2]),h=Math.max(t[e][1],t[e][3]),f=(i-o)*(s-a),p=(l-u)*(h-c);if(f<=0||p<=0)return 0;var d=Math.max(o,u),m=Math.max(a,c),v=Math.min(i,l),g=Math.min(s,h),x=Math.max(v-d,0)*Math.max(g-m,0);return x/(f+p-x)}function Ls(r){var n=F0(ie(r,[1,0])),e=[O0(n[2],n[0]),O0(n[3],n[1])],t=[u0(n[0],m1(e[0],j(2))),u0(n[1],m1(e[1],j(2)))];return{sizes:e,centers:t}}function Ws(r,n){var e=Ls(r),t=e.sizes,o=e.centers,a=F0(ie(n,[1,0])),i=m1($0(d2(m1(a[2],j(5))),t[0]),j(2)),s=u0($0(m1(a[0],j(10)),t[0]),o[0]),u=m1($0(d2(m1(a[3],j(5))),t[1]),j(2)),c=u0($0(m1(a[1],j(10)),t[1]),o[1]);return ie(c1([O0(s,i),O0(c,u),u0(s,i),u0(c,u)]),[1,0])}function Vs(r,n,e){return K(function(){var t=r.shape[0],o=Ws(g1(Oe(e.extra_dim,[t,1,1]),[-1,4]),g1(r,[-1,4]));o=g1(o,[t,o.shape[0]/t,4]);var a=_r(N1(n,[0,0,1],[-1,-1,-1])),i=N1(a,[0,0,0],[-1,-1,1]);i=g1(i,[t,i.shape[1]]);var s=F0(o),u=F0(i);return{boxes:s,scores:u}})}function De(r,n){return K(function(){var e=r.shape[0],t=g1(y1(r,n.box_encoding_predictor),[e,-1,1,4]),o=g1(y1(r,n.class_predictor),[e,-1,3]);return{boxPredictionEncoding:t,classPrediction:o}})}function Us(r,n,e){return K(function(){var t=I1(r,e.conv_0,[1,1]),o=I1(t,e.conv_1,[2,2]),a=I1(o,e.conv_2,[1,1]),i=I1(a,e.conv_3,[2,2]),s=I1(i,e.conv_4,[1,1]),u=I1(s,e.conv_5,[2,2]),c=I1(u,e.conv_6,[1,1]),l=I1(c,e.conv_7,[2,2]),h=De(n,e.box_predictor_0),f=De(r,e.box_predictor_1),p=De(o,e.box_predictor_2),d=De(i,e.box_predictor_3),m=De(u,e.box_predictor_4),v=De(l,e.box_predictor_5),g=N0([h.boxPredictionEncoding,f.boxPredictionEncoding,p.boxPredictionEncoding,d.boxPredictionEncoding,m.boxPredictionEncoding,v.boxPredictionEncoding],1),x=N0([h.classPrediction,f.classPrediction,p.classPrediction,d.classPrediction,m.classPrediction,v.classPrediction],1);return{boxPredictions:g,classPredictions:x}})}var bn=function(){function r(n){var e=n===void 0?{}:n,t=e.minConfidence,o=e.maxResults;if(this._name="SsdMobilenetv1Options",this._minConfidence=t||.5,this._maxResults=o||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(this._name+" - expected minConfidence to be a number between 0 and 1");if(typeof this._maxResults!="number")throw new Error(this._name+" - expected maxResults to be a number")}return Object.defineProperty(r.prototype,"minConfidence",{get:function(){return this._minConfidence},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"maxResults",{get:function(){return this._maxResults},enumerable:!0,configurable:!0}),r}(),O5=function(r){r0(n,r);function n(){return r.call(this,"SsdMobilenetv1")||this}return n.prototype.forwardInput=function(e){var t=this.params;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return K(function(){var o=e.toBatchTensor(512,!1).toFloat(),a=O0($0(o,j(.007843137718737125)),j(1)),i=Ps(a,t.mobilenetv1),s=Us(i.out,i.conv11,t.prediction_layer),u=s.boxPredictions,c=s.classPredictions;return Vs(u,c,t.output_layer)})},n.prototype.forward=function(e){return Q(this,void 0,void 0,function(){var t;return Z(this,function(o){switch(o.label){case 0:return t=this.forwardInput,[4,V0(e)];case 1:return[2,t.apply(this,[o.sent()])]}})})},n.prototype.locateFaces=function(e,t){return t===void 0&&(t={}),Q(this,void 0,void 0,function(){var o,a,i,s,u,c,l,h,f,p,d,m,v,g,x,b,y,w,C,S,k;return Z(this,function(I){switch(I.label){case 0:return o=new bn(t),a=o.maxResults,i=o.minConfidence,[4,V0(e)];case 1:for(s=I.sent(),u=this.forwardInput(s),c=u.boxes,l=u.scores,h=c[0],f=l[0],p=1;p<c.length;p++)c[p].dispose(),l[p].dispose();return v=(m=Array).from,[4,f.data()];case 2:return d=v.apply(m,[I.sent()]),g=.5,x=Os(h,d,a,g,i),b=s.getReshapedInputDimensions(0),y=s.inputSize,w=y/b.width,C=y/b.height,S=h.arraySync(),k=x.map(function(R){var T=[Math.max(0,S[R][0]),Math.min(1,S[R][2])].map(function(V){return V*C}),D=T[0],L=T[1],O=[Math.max(0,S[R][1]),Math.min(1,S[R][3])].map(function(V){return V*w}),B=O[0],U=O[1];return new l1(d[R],new t3(B,D,U-B,L-D),{height:s.getInputHeight(0),width:s.getInputWidth(0)})}),h.dispose(),f.dispose(),[2,k]}})})},n.prototype.getDefaultModelName=function(){return"ssd_mobilenetv1_model"},n.prototype.extractParamsFromWeigthMap=function(e){return Ms(e)},n.prototype.extractParams=function(e){return As(e)},n}(X1);(function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n})(O5);var Gs=.4,zs=[new g0(.738768,.874946),new g0(2.42204,2.65704),new g0(4.30971,7.04493),new g0(10.246,4.59428),new g0(12.6868,11.8741)],Hs=[new g0(1.603231,2.094468),new g0(6.041143,7.080126),new g0(2.882459,3.518061),new g0(4.266906,5.178857),new g0(9.041765,10.66308)],js=[117.001,114.697,97.404],qs="tiny_yolov2_model",Ks="tiny_yolov2_separable_conv_model",Tt=function(r){return typeof r=="number"};function Xs(r){if(!r)throw new Error("invalid config: "+r);if(typeof r.withSeparableConvs!="boolean")throw new Error("config.withSeparableConvs has to be a boolean, have: "+r.withSeparableConvs);if(!Tt(r.iouThreshold)||r.iouThreshold<0||r.iouThreshold>1)throw new Error("config.iouThreshold has to be a number between [0, 1], have: "+r.iouThreshold);if(!Array.isArray(r.classes)||!r.classes.length||!r.classes.every(function(n){return typeof n=="string"}))throw new Error("config.classes has to be an array class names: string[], have: "+JSON.stringify(r.classes));if(!Array.isArray(r.anchors)||!r.anchors.length||!r.anchors.map(function(n){return n||{}}).every(function(n){return Tt(n.x)&&Tt(n.y)}))throw new Error("config.anchors has to be an array of { x: number, y: number }, have: "+JSON.stringify(r.anchors));if(r.meanRgb&&(!Array.isArray(r.meanRgb)||r.meanRgb.length!==3||!r.meanRgb.every(Tt)))throw new Error("config.meanRgb has to be an array of shape [number, number, number], have: "+JSON.stringify(r.meanRgb))}function f3(r){return K(function(){var n=$0(r,j(.10000000149011612));return u0(I0(O0(r,n)),n)})}function Q1(r,n){return K(function(){var e=be(r,[[0,0],[1,1],[1,1],[0,0]]);return e=d1(e,n.conv.filters,[1,1],"valid"),e=O0(e,n.bn.sub),e=$0(e,n.bn.truediv),e=u0(e,n.conv.bias),f3(e)})}function Z1(r,n){return K(function(){var e=be(r,[[0,0],[1,1],[1,1],[0,0]]);return e=G2(e,n.depthwise_filter,n.pointwise_filter,[1,1],"valid"),e=u0(e,n.bias),f3(e)})}function Ys(r,n){var e=yn(r,n);function t(i,s){var u=M0(r(i)),c=M0(r(i));return n.push({paramPath:s+"/sub"},{paramPath:s+"/truediv"}),{sub:u,truediv:c}}function o(i,s,u){var c=e(i,s,3,u+"/conv"),l=t(s,u+"/bn");return{conv:c,bn:l}}var a=c3(r,n);return{extractConvParams:e,extractConvWithBatchNormParams:o,extractSeparableConvParams:a}}function $s(r,n,e,t){var o=$1(r),a=o.extractWeights,i=o.getRemainingWeights,s=[],u=Ys(a,s),c=u.extractConvParams,l=u.extractConvWithBatchNormParams,h=u.extractSeparableConvParams,f;if(n.withSeparableConvs){var p=t[0],d=t[1],m=t[2],v=t[3],g=t[4],x=t[5],b=t[6],y=t[7],w=t[8],C=n.isFirstLayerConv2d?c(p,d,3,"conv0"):h(p,d,"conv0"),S=h(d,m,"conv1"),k=h(m,v,"conv2"),I=h(v,g,"conv3"),R=h(g,x,"conv4"),T=h(x,b,"conv5"),D=y?h(b,y,"conv6"):void 0,L=w?h(y,w,"conv7"):void 0,O=c(w||y||b,5*e,1,"conv8");f={conv0:C,conv1:S,conv2:k,conv3:I,conv4:R,conv5:T,conv6:D,conv7:L,conv8:O}}else{var p=t[0],d=t[1],m=t[2],v=t[3],g=t[4],x=t[5],b=t[6],y=t[7],w=t[8],C=l(p,d,"conv0"),S=l(d,m,"conv1"),k=l(m,v,"conv2"),I=l(v,g,"conv3"),R=l(g,x,"conv4"),T=l(x,b,"conv5"),D=l(b,y,"conv6"),L=l(y,w,"conv7"),O=c(w,5*e,1,"conv8");f={conv0:C,conv1:S,conv2:k,conv3:I,conv4:R,conv5:T,conv6:D,conv7:L,conv8:O}}if(i().length!==0)throw new Error("weights remaing after extract: "+i().length);return{params:f,paramMappings:s}}function Js(r,n){var e=ce(r,n);function t(s){var u=e(s+"/sub",1),c=e(s+"/truediv",1);return{sub:u,truediv:c}}function o(s){var u=e(s+"/filters",4),c=e(s+"/bias",1);return{filters:u,bias:c}}function a(s){var u=o(s+"/conv"),c=t(s+"/bn");return{conv:u,bn:c}}var i=l3(e);return{extractConvParams:o,extractConvWithBatchNormParams:a,extractSeparableConvParams:i}}function Qs(r,n){var e=[],t=Js(r,e),o=t.extractConvParams,a=t.extractConvWithBatchNormParams,i=t.extractSeparableConvParams,s;if(n.withSeparableConvs){var u=n.filterSizes&&n.filterSizes.length||9;s={conv0:n.isFirstLayerConv2d?o("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:u>7?i("conv6"):void 0,conv7:u>8?i("conv7"):void 0,conv8:o("conv8")}}else s={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:o("conv8")};return Y1(r,e),{params:s,paramMappings:e}}var R4;(function(r){r[r.XS=224]="XS",r[r.SM=320]="SM",r[r.MD=416]="MD",r[r.LG=608]="LG"})(R4||(R4={}));var p3=function(){function r(n){var e=n===void 0?{}:n,t=e.inputSize,o=e.scoreThreshold;if(this._name="TinyYolov2Options",this._inputSize=t||416,this._scoreThreshold=o||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(this._name+" - expected inputSize to be a number divisible by 32");if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(this._name+" - expected scoreThreshold to be a number between 0 and 1")}return Object.defineProperty(r.prototype,"inputSize",{get:function(){return this._inputSize},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scoreThreshold",{get:function(){return this._scoreThreshold},enumerable:!0,configurable:!0}),r}(),B5=function(r){r0(n,r);function n(e){var t=r.call(this,"TinyYolov2")||this;return Xs(e),t._config=e,t}return Object.defineProperty(n.prototype,"config",{get:function(){return this._config},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"withClassScores",{get:function(){return this.config.withClassScores||this.config.classes.length>1},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"boxEncodingSize",{get:function(){return 5+(this.withClassScores?this.config.classes.length:0)},enumerable:!0,configurable:!0}),n.prototype.runTinyYolov2=function(e,t){var o=Q1(e,t.conv0);return o=L0(o,[2,2],[2,2],"same"),o=Q1(o,t.conv1),o=L0(o,[2,2],[2,2],"same"),o=Q1(o,t.conv2),o=L0(o,[2,2],[2,2],"same"),o=Q1(o,t.conv3),o=L0(o,[2,2],[2,2],"same"),o=Q1(o,t.conv4),o=L0(o,[2,2],[2,2],"same"),o=Q1(o,t.conv5),o=L0(o,[2,2],[1,1],"same"),o=Q1(o,t.conv6),o=Q1(o,t.conv7),y1(o,t.conv8,"valid",!1)},n.prototype.runMobilenet=function(e,t){var o=this.config.isFirstLayerConv2d?f3(y1(e,t.conv0,"valid",!1)):Z1(e,t.conv0);return o=L0(o,[2,2],[2,2],"same"),o=Z1(o,t.conv1),o=L0(o,[2,2],[2,2],"same"),o=Z1(o,t.conv2),o=L0(o,[2,2],[2,2],"same"),o=Z1(o,t.conv3),o=L0(o,[2,2],[2,2],"same"),o=Z1(o,t.conv4),o=L0(o,[2,2],[2,2],"same"),o=Z1(o,t.conv5),o=L0(o,[2,2],[1,1],"same"),o=t.conv6?Z1(o,t.conv6):o,o=t.conv7?Z1(o,t.conv7):o,y1(o,t.conv8,"valid",!1)},n.prototype.forwardInput=function(e,t){var o=this,a=this.params;if(!a)throw new Error("TinyYolov2 - load model before inference");return K(function(){var i=e.toBatchTensor(t,!1).toFloat();return i=o.config.meanRgb?xt(i,o.config.meanRgb):i,i=i.div(j(256)),o.config.withSeparableConvs?o.runMobilenet(i,a):o.runTinyYolov2(i,a)})},n.prototype.forward=function(e,t){return Q(this,void 0,void 0,function(){var o;return Z(this,function(a){switch(a.label){case 0:return o=this.forwardInput,[4,V0(e)];case 1:return[4,o.apply(this,[a.sent(),t])];case 2:return[2,a.sent()]}})})},n.prototype.detect=function(e,t){return t===void 0&&(t={}),Q(this,void 0,void 0,function(){var o,a,i,s,u,c,l,h,f,p,d,m,v,g,x=this;return Z(this,function(b){switch(b.label){case 0:return o=new p3(t),a=o.inputSize,i=o.scoreThreshold,[4,V0(e)];case 1:return s=b.sent(),[4,this.forwardInput(s,a)];case 2:return u=b.sent(),c=K(function(){return F0(u)[0].expandDims()}),l={width:s.getInputWidth(0),height:s.getInputHeight(0)},[4,this.extractBoxes(c,s.getReshapedInputDimensions(0),i)];case 3:return h=b.sent(),u.dispose(),c.dispose(),f=h.map(function(y){return y.box}),p=h.map(function(y){return y.score}),d=h.map(function(y){return y.classScore}),m=h.map(function(y){return x.config.classes[y.label]}),v=ut(f.map(function(y){return y.rescale(a)}),p,this.config.iouThreshold,!0),g=v.map(function(y){return new u5(p[y],d[y],m[y],f[y],l)}),[2,g]}})})},n.prototype.getDefaultModelName=function(){return""},n.prototype.extractParamsFromWeigthMap=function(e){return Qs(e,this.config)},n.prototype.extractParams=function(e){var t=this.config.filterSizes||n.DEFAULT_FILTER_SIZES,o=t?t.length:void 0;if(o!==7&&o!==8&&o!==9)throw new Error("TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found "+o+" filterSizes in config");return $s(e,this.config,this.boxEncodingSize,t)},n.prototype.extractBoxes=function(e,t,o){return Q(this,void 0,void 0,function(){var a,i,s,u,c,l,h,f,p,d,m,v,g,x,b,y,w,C,S,k,I,R,T,D,L,O,B,U,V,W=this;return Z(this,function(z){switch(z.label){case 0:return a=t.width,i=t.height,s=Math.max(a,i),u=s/a,c=s/i,l=e.shape[1],h=this.config.anchors.length,f=K(function(){var H=e.reshape([l,l,h,W.boxEncodingSize]),q=H.slice([0,0,0,0],[l,l,h,4]),e0=H.slice([0,0,0,4],[l,l,h,1]),t0=W.withClassScores?q1(H.slice([0,0,0,5],[l,l,h,W.config.classes.length]),3):j(0);return[q,e0,t0]}),p=f[0],d=f[1],m=f[2],v=[],[4,d.array()];case 1:return g=z.sent(),[4,p.array()];case 2:x=z.sent(),b=0,z.label=3;case 3:if(!(b<l))return[3,12];y=0,z.label=4;case 4:if(!(y<l))return[3,11];w=0,z.label=5;case 5:return w<h?(C=Jn(g[b][y][w][0]),!o||C>o?(S=(y+Jn(x[b][y][w][0]))/l*u,k=(b+Jn(x[b][y][w][1]))/l*c,I=Math.exp(x[b][y][w][2])*this.config.anchors[w].x/l*u,R=Math.exp(x[b][y][w][3])*this.config.anchors[w].y/l*c,T=S-I/2,D=k-R/2,L={row:b,col:y,anchor:w},this.withClassScores?[4,this.extractPredictedClass(m,L)]:[3,7]):[3,9]):[3,10];case 6:return V=z.sent(),[3,8];case 7:V={classScore:1,label:0},z.label=8;case 8:O=V,B=O.classScore,U=O.label,v.push(K0({box:new mn(T,D,T+I,D+R),score:C,classScore:C*B,label:U},L)),z.label=9;case 9:return w++,[3,5];case 10:return y++,[3,4];case 11:return b++,[3,3];case 12:return p.dispose(),d.dispose(),m.dispose(),[2,v]}})})},n.prototype.extractPredictedClass=function(e,t){return Q(this,void 0,void 0,function(){var o,a,i,s;return Z(this,function(u){switch(u.label){case 0:return o=t.row,a=t.col,i=t.anchor,[4,e.array()];case 1:return s=u.sent(),[2,Array(this.config.classes.length).fill(0).map(function(c,l){return s[o][a][i][l]}).map(function(c,l){return{classScore:c,label:l}}).reduce(function(c,l){return c.classScore>l.classScore?c:l})]}})})},n.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024],n}(X1),Zs=function(r){r0(n,r);function n(e){e===void 0&&(e=!0);var t=this,o=Object.assign({},{withSeparableConvs:e,iouThreshold:Gs,classes:["face"]},e?{anchors:Hs,meanRgb:js}:{anchors:zs,withClassScores:!0});return t=r.call(this,o)||this,t}return Object.defineProperty(n.prototype,"withSeparableConvs",{get:function(){return this.config.withSeparableConvs},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"anchors",{get:function(){return this.config.anchors},enumerable:!0,configurable:!0}),n.prototype.locateFaces=function(e,t){return Q(this,void 0,void 0,function(){var o;return Z(this,function(a){switch(a.label){case 0:return[4,this.detect(e,t)];case 1:return o=a.sent(),[2,o.map(function(i){return new l1(i.score,i.relativeBox,{width:i.imageWidth,height:i.imageHeight})})]}})})},n.prototype.getDefaultModelName=function(){return this.withSeparableConvs?Ks:qs},n.prototype.extractParamsFromWeigthMap=function(e){return r.prototype.extractParamsFromWeigthMap.call(this,e)},n}(B5),L5=function(r){r0(n,r);function n(){var e=r!==null&&r.apply(this,arguments)||this;return e._name="TinyFaceDetectorOptions",e}return n}(p3),bt=function(){function r(){}return r.prototype.then=function(n){return Q(this,void 0,void 0,function(){var e;return Z(this,function(t){switch(t.label){case 0:return e=n,[4,this.run()];case 1:return[2,e.apply(void 0,[t.sent()])]}})})},r.prototype.run=function(){return Q(this,void 0,void 0,function(){return Z(this,function(n){throw new Error("ComposableTask - run is not implemented")})})},r}();function wn(r,n,e,t,o){return o===void 0&&(o=function(a){var i=a.alignedRect;return i}),Q(this,void 0,void 0,function(){var a,i,s,u,c;return Z(this,function(l){switch(l.label){case 0:return a=r.map(function(h){return R5(h)?o(h):h.detection}),s=t,s?[3,5]:n instanceof E0?[4,s3(n,a)]:[3,2];case 1:return u=l.sent(),[3,4];case 2:return[4,i3(n,a)];case 3:u=l.sent(),l.label=4;case 4:s=u,l.label=5;case 5:return i=s,[4,e(i)];case 6:return c=l.sent(),i.forEach(function(h){return h instanceof E0&&h.dispose()}),[2,c]}})})}function d3(r,n,e,t,o){return Q(this,void 0,void 0,function(){var a=this;return Z(this,function(i){return[2,wn([r],n,function(s){return Q(a,void 0,void 0,function(){return Z(this,function(u){return[2,e(s[0])]})})},t,o)]})})}function eu(r){return K(function(){return c1(F0(r,3).reverse(),3)})}var Nt=2,rn=12;function tu(r,n){var e=yn(r,n),t=u3(r,n);function o(c,l){var h=M0(r(c));return n.push({paramPath:l}),h}function a(c,l,h){h===void 0&&(h=!1);var f=e(c[0],c[1],3,l+"/conv1"),p=o(c[1],l+"/prelu1_alpha"),d=e(c[1],c[2],3,l+"/conv2"),m=o(c[2],l+"/prelu2_alpha"),v=e(c[2],c[3],h?2:3,l+"/conv3"),g=o(c[3],l+"/prelu3_alpha");return{conv1:f,prelu1_alpha:p,conv2:d,prelu2_alpha:m,conv3:v,prelu3_alpha:g}}function i(){var c=a([3,10,16,32],"pnet"),l=e(32,2,1,"pnet/conv4_1"),h=e(32,4,1,"pnet/conv4_2");return K0(K0({},c),{conv4_1:l,conv4_2:h})}function s(){var c=a([3,28,48,64],"rnet",!0),l=t(576,128,"rnet/fc1"),h=o(128,"rnet/prelu4_alpha"),f=t(128,2,"rnet/fc2_1"),p=t(128,4,"rnet/fc2_2");return K0(K0({},c),{fc1:l,prelu4_alpha:h,fc2_1:f,fc2_2:p})}function u(){var c=a([3,32,64,64],"onet"),l=e(64,128,2,"onet/conv4"),h=o(128,"onet/prelu4_alpha"),f=t(1152,256,"onet/fc1"),p=o(256,"onet/prelu5_alpha"),d=t(256,2,"onet/fc2_1"),m=t(256,4,"onet/fc2_2"),v=t(256,10,"onet/fc2_3");return K0(K0({},c),{conv4:l,prelu4_alpha:h,fc1:f,prelu5_alpha:p,fc2_1:d,fc2_2:m,fc2_3:v})}return{extractPNetParams:i,extractRNetParams:s,extractONetParams:u}}function nu(r){var n=$1(r),e=n.extractWeights,t=n.getRemainingWeights,o=[],a=tu(e,o),i=a.extractPNetParams,s=a.extractRNetParams,u=a.extractONetParams,c=i(),l=s(),h=u();if(t().length!==0)throw new Error("weights remaing after extract: "+t().length);return{params:{pnet:c,rnet:l,onet:h},paramMappings:o}}function ru(r,n){var e=ce(r,n);function t(l){var h=e(l+"/weights",4,l+"/filters"),f=e(l+"/bias",1);return{filters:h,bias:f}}function o(l){var h=e(l+"/weights",2),f=e(l+"/bias",1);return{weights:h,bias:f}}function a(l){return e(l,1)}function i(l){var h=t(l+"/conv1"),f=a(l+"/prelu1_alpha"),p=t(l+"/conv2"),d=a(l+"/prelu2_alpha"),m=t(l+"/conv3"),v=a(l+"/prelu3_alpha");return{conv1:h,prelu1_alpha:f,conv2:p,prelu2_alpha:d,conv3:m,prelu3_alpha:v}}function s(){var l=i("pnet"),h=t("pnet/conv4_1"),f=t("pnet/conv4_2");return K0(K0({},l),{conv4_1:h,conv4_2:f})}function u(){var l=i("rnet"),h=o("rnet/fc1"),f=a("rnet/prelu4_alpha"),p=o("rnet/fc2_1"),d=o("rnet/fc2_2");return K0(K0({},l),{fc1:h,prelu4_alpha:f,fc2_1:p,fc2_2:d})}function c(){var l=i("onet"),h=t("onet/conv4"),f=a("onet/prelu4_alpha"),p=o("onet/fc1"),d=a("onet/prelu5_alpha"),m=o("onet/fc2_1"),v=o("onet/fc2_2"),g=o("onet/fc2_3");return K0(K0({},l),{conv4:h,prelu4_alpha:f,fc1:p,prelu5_alpha:d,fc2_1:m,fc2_2:v,fc2_3:g})}return{extractPNetParams:s,extractRNetParams:u,extractONetParams:c}}function ou(r){var n=[],e=ru(r,n),t=e.extractPNetParams,o=e.extractRNetParams,a=e.extractONetParams,i=t(),s=o(),u=a();return Y1(r,n),{params:{pnet:i,rnet:s,onet:u},paramMappings:n}}function C2(r,n){var e=n[0],t=n[1];return{height:Math.floor(e*r),width:Math.floor(t*r)}}function au(r,n,e){for(var t=e[0],o=e[1],a=rn/r,i=[],s=Math.min(t,o)*a,u=0;s>=12;)i.push(a*Math.pow(n,u)),s=s*n,u+=1;return i}var v3=function(r){r0(n,r);function n(e,t,o,a){return r.call(this,{left:e,top:t,right:o,bottom:a},!0)||this}return n}(F1);function W5(r){return K(function(){return $0(O0(r,j(127.5)),j(.0078125))})}function Ue(r,n){return K(function(){return u0(I0(r),$0(n,$t(I0($t(r)))))})}function m3(r,n,e){return e===void 0&&(e=!1),K(function(){var t=y1(r,n.conv1,"valid");return t=Ue(t,n.prelu1_alpha),t=L0(t,e?[2,2]:[3,3],[2,2],"same"),t=y1(t,n.conv2,"valid"),t=Ue(t,n.prelu2_alpha),t=e?t:L0(t,[3,3],[2,2],"valid"),t=y1(t,n.conv3,"valid"),t=Ue(t,n.prelu3_alpha),t})}function iu(r,n){return K(function(){var e=m3(r,n,!0),t=y1(e,n.conv4_1,"valid"),o=h1(fn(t,3),3),a=q1(O0(t,o),3),i=y1(e,n.conv4_2,"valid");return{prob:a,regions:i}})}function su(r,n){return K(function(){var e=C2(n,r.shape.slice(1)),t=e.height,o=e.width,a=K2.resizeBilinear(r,[t,o]),i=W5(a);return ie(i,[0,2,1,3])})}function uu(r,n,e,t){for(var o=[],a=r.arraySync(),i=0;i<r.shape[0];i++)for(var s=0;s<r.shape[1];s++)a[i][s]>=t&&o.push(new g0(s,i));var u=o.map(function(c){var l=new mn(Math.round((c.y*Nt+1)/e),Math.round((c.x*Nt+1)/e),Math.round((c.y*Nt+rn)/e),Math.round((c.x*Nt+rn)/e)),h=a[c.y][c.x],f=n.arraySync(),p=new v3(f[c.y][c.x][0],f[c.y][c.x][1],f[c.y][c.x][2],f[c.y][c.x][3]);return{cell:l,score:h,region:p}});return u}function cu(r,n,e,t,o){o.stage1=[];var a=n.map(function(f){return K(function(){var p={scale:f},d=su(r,f),m=Date.now(),v=iu(d,t),g=v.prob,x=v.regions;p.pnet=Date.now()-m;var b=F0(F0(g,3)[1])[0],y=F0(x)[0];return{scoresTensor:b,regionsTensor:y,scale:f,statsForScale:p}})}),i=a.map(function(f){var p=f.scoresTensor,d=f.regionsTensor,m=f.scale,v=f.statsForScale,g=uu(p,d,m,e);if(p.dispose(),d.dispose(),!g.length)return o.stage1.push(v),[];var x=Date.now(),b=ut(g.map(function(y){return y.cell}),g.map(function(y){return y.score}),.5);return v.nms=Date.now()-x,v.numBoxes=b.length,o.stage1.push(v),b.map(function(y){return g[y]})}),s=i.reduce(function(f,p){return f.concat(p)},[]),u=[],c=[];if(s.length>0){var l=Date.now(),h=ut(s.map(function(f){return f.cell}),s.map(function(f){return f.score}),.7);o.stage1_nms=Date.now()-l,c=h.map(function(f){return s[f].score}),u=h.map(function(f){return s[f]}).map(function(f){var p=f.cell,d=f.region;return new mn(p.left+d.left*p.width,p.top+d.top*p.height,p.right+d.right*p.width,p.bottom+d.bottom*p.height).toSquare().round()})}return{boxes:u,scores:c}}function V5(r,n,e){var t=e.width,o=e.height;return Q(this,void 0,void 0,function(){var a,i,s,u=this;return Z(this,function(c){switch(c.label){case 0:return a=H1(r),[4,Promise.all(n.map(function(l){return Q(u,void 0,void 0,function(){var h,f,p,d,m,v,g,x;return Z(this,function(b){return h=l.padAtBorders(r.height,r.width),f=h.y,p=h.ey,d=h.x,m=h.ex,v=d-1,g=f-1,x=a.getImageData(v,g,m-v,p-g),[2,J0.isNodejs()?a3(x):createImageBitmap(x)]})})}))];case 1:return i=c.sent(),s=[],i.forEach(function(l){var h=gn({width:t,height:o}),f=H1(h);f.drawImage(l,0,0,t,o);for(var p=f.getImageData(0,0,t,o).data,d=[],m=0;m<p.length;m+=4)d.push(p[m+2]),d.push(p[m+1]),d.push(p[m]);s.push(d)}),[2,s.map(function(l){var h=K(function(){var f=ie(Q0(l,[1,t,o,3]),[0,2,1,3]).toFloat();return W5(f)});return h})]}})})}function lu(r,n){return K(function(){var e=m3(r,n),t=g1(e,[e.shape[0],n.fc1.weights.shape[0]]),o=A1(t,n.fc1),a=Ue(o,n.prelu4_alpha),i=A1(a,n.fc2_1),s=h1(fn(i,1),1),u=q1(O0(i,s),1),c=A1(a,n.fc2_2),l=F0(u,1)[1];return{scores:l,regions:c}})}function hu(r,n,e,t,o){return Q(this,void 0,void 0,function(){var a,i,s,u,c,l,h,f,p,d,m,v,g,x;return Z(this,function(b){switch(b.label){case 0:return a=Date.now(),[4,V5(r,n,{width:24,height:24})];case 1:return i=b.sent(),o.stage2_extractImagePatches=Date.now()-a,a=Date.now(),s=i.map(function(y){var w=lu(y,t);return y.dispose(),w}),o.stage2_rnet=Date.now()-a,u=s.length>1?N0(s.map(function(y){return y.scores})):s[0].scores,h=(l=Array).from,[4,u.data()];case 2:return c=h.apply(l,[b.sent()]),u.dispose(),f=c.map(function(y,w){return{score:y,idx:w}}).filter(function(y){return y.score>e}).map(function(y){var w=y.idx;return w}),p=f.map(function(y){return n[y]}),d=f.map(function(y){return c[y]}),m=[],v=[],p.length>0&&(a=Date.now(),g=ut(p,d,.7),o.stage2_nms=Date.now()-a,x=g.map(function(y){var w=s[f[y]].regions.arraySync();return new v3(w[0][0],w[0][1],w[0][2],w[0][3])}),v=g.map(function(y){return d[y]}),m=g.map(function(y,w){return p[y].calibrate(x[w])})),s.forEach(function(y){y.regions.dispose(),y.scores.dispose()}),[2,{boxes:m,scores:v}]}})})}function fu(r,n){return K(function(){var e=m3(r,n);e=L0(e,[2,2],[2,2],"same"),e=y1(e,n.conv4,"valid"),e=Ue(e,n.prelu4_alpha);var t=g1(e,[e.shape[0],n.fc1.weights.shape[0]]),o=A1(t,n.fc1),a=Ue(o,n.prelu5_alpha),i=A1(a,n.fc2_1),s=h1(fn(i,1),1),u=q1(O0(i,s),1),c=A1(a,n.fc2_2),l=A1(a,n.fc2_3),h=F0(u,1)[1];return{scores:h,regions:c,points:l}})}function pu(r,n,e,t,o){return Q(this,void 0,void 0,function(){var a,i,s,u,c,l,h,f,p,d,m,v,g,x,b;return Z(this,function(y){switch(y.label){case 0:return a=Date.now(),[4,V5(r,n,{width:48,height:48})];case 1:return i=y.sent(),o.stage3_extractImagePatches=Date.now()-a,a=Date.now(),s=i.map(function(w){var C=fu(w,t);return w.dispose(),C}),o.stage3_onet=Date.now()-a,u=s.length>1?N0(s.map(function(w){return w.scores})):s[0].scores,h=(l=Array).from,[4,u.data()];case 2:return c=h.apply(l,[y.sent()]),u.dispose(),f=c.map(function(w,C){return{score:w,idx:C}}).filter(function(w){return w.score>e}).map(function(w){var C=w.idx;return C}),p=f.map(function(w){var C=s[w].regions.arraySync();return new v3(C[0][0],C[0][1],C[0][2],C[0][3])}),d=f.map(function(w,C){return n[w].calibrate(p[C])}),m=f.map(function(w){return c[w]}),v=[],g=[],x=[],d.length>0&&(a=Date.now(),b=ut(d,m,.7,!1),o.stage3_nms=Date.now()-a,v=b.map(function(w){return d[w]}),g=b.map(function(w){return m[w]}),x=b.map(function(w,C){return Array(5).fill(0).map(function(S,k){var I=s[w].points.arraySync();return new g0(I[0][k]*(v[C].width+1)+v[C].left,I[0][k+5]*(v[C].height+1)+v[C].top)})})),s.forEach(function(w){w.regions.dispose(),w.scores.dispose(),w.points.dispose()}),[2,{boxes:v,scores:g,points:x}]}})})}var du=function(r){r0(n,r);function n(){return r.call(this,"Mtcnn")||this}return n.prototype.load=function(e){return Q(this,void 0,void 0,function(){return Z(this,function(t){return console.warn("mtcnn is deprecated and will be removed soon"),[2,r.prototype.load.call(this,e)]})})},n.prototype.loadFromDisk=function(e){return Q(this,void 0,void 0,function(){return Z(this,function(t){return console.warn("mtcnn is deprecated and will be removed soon"),[2,r.prototype.loadFromDisk.call(this,e)]})})},n.prototype.forwardInput=function(e,t){return t===void 0&&(t={}),Q(this,void 0,void 0,function(){var o,a,i,s,u,c,l,h,f,p,d,m,v,g,x,b,y,w,C,S,k;return Z(this,function(I){switch(I.label){case 0:if(o=this.params,!o)throw new Error("Mtcnn - load model before inference");if(a=e.canvases[0],!a)throw new Error("Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet.");return i={},s=Date.now(),u=K(function(){return eu(h1(Z2.fromPixels(a)).toFloat())}),c=function(R){return u.dispose(),i.total=Date.now()-s,R},l=u.shape.slice(1),h=l[0],f=l[1],p=new P5(t),d=p.minFaceSize,m=p.scaleFactor,v=p.maxNumScales,g=p.scoreThresholds,x=p.scaleSteps,b=(x||au(d,m,[h,f])).filter(function(R){var T=C2(R,[h,f]);return Math.min(T.width,T.height)>rn}).slice(0,v),i.scales=b,i.pyramid=b.map(function(R){return C2(R,[h,f])}),y=Date.now(),[4,cu(u,b,g[0],o.pnet,i)];case 1:return w=I.sent(),i.total_stage1=Date.now()-y,w.boxes.length?(i.stage2_numInputBoxes=w.boxes.length,y=Date.now(),[4,hu(a,w.boxes,g[1],o.rnet,i)]):[2,c({results:[],stats:i})];case 2:return C=I.sent(),i.total_stage2=Date.now()-y,C.boxes.length?(i.stage3_numInputBoxes=C.boxes.length,y=Date.now(),[4,pu(a,C.boxes,g[2],o.onet,i)]):[2,c({results:[],stats:i})];case 3:return S=I.sent(),i.total_stage3=Date.now()-y,k=S.boxes.map(function(R,T){return xn(lt({},new l1(S.scores[T],new t3(R.left/f,R.top/h,R.width/f,R.height/h),{height:h,width:f})),new Gi(S.points[T].map(function(D){return D.sub(new g0(R.left,R.top)).div(new g0(R.width,R.height))}),{width:R.width,height:R.height}))}),[2,c({results:k,stats:i})]}})})},n.prototype.forward=function(e,t){return t===void 0&&(t={}),Q(this,void 0,void 0,function(){var o;return Z(this,function(a){switch(a.label){case 0:return o=this.forwardInput,[4,V0(e)];case 1:return[4,o.apply(this,[a.sent(),t])];case 2:return[2,a.sent().results]}})})},n.prototype.forwardWithStats=function(e,t){return t===void 0&&(t={}),Q(this,void 0,void 0,function(){var o;return Z(this,function(a){switch(a.label){case 0:return o=this.forwardInput,[4,V0(e)];case 1:return[2,o.apply(this,[a.sent(),t])]}})})},n.prototype.getDefaultModelName=function(){return"mtcnn_model"},n.prototype.extractParamsFromWeigthMap=function(e){return ou(e)},n.prototype.extractParams=function(e){return nu(e)},n}(X1),vu=.4,mu=[new g0(1.603231,2.094468),new g0(6.041143,7.080126),new g0(2.882459,3.518061),new g0(4.266906,5.178857),new g0(9.041765,10.66308)],gu=[117.001,114.697,97.404],yu=function(r){r0(n,r);function n(){var e=this,t={withSeparableConvs:!0,iouThreshold:vu,classes:["face"],anchors:mu,meanRgb:gu,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};return e=r.call(this,t)||this,e}return Object.defineProperty(n.prototype,"anchors",{get:function(){return this.config.anchors},enumerable:!0,configurable:!0}),n.prototype.locateFaces=function(e,t){return Q(this,void 0,void 0,function(){var o;return Z(this,function(a){switch(a.label){case 0:return[4,this.detect(e,t)];case 1:return o=a.sent(),[2,o.map(function(i){return new l1(i.score,i.relativeBox,{width:i.imageWidth,height:i.imageHeight})})]}})})},n.prototype.getDefaultModelName=function(){return"tiny_face_detector_model"},n.prototype.extractParamsFromWeigthMap=function(e){return r.prototype.extractParamsFromWeigthMap.call(this,e)},n}(B5),j0={ssdMobilenetv1:new O5,tinyFaceDetector:new yu,tinyYolov2:new Zs,mtcnn:new du,faceLandmark68Net:new A5,faceLandmark68TinyNet:new bs,faceRecognitionNet:new ks,faceExpressionNet:new ss,ageGenderNet:new ms},U5=function(r){r0(n,r);function n(e,t,o){var a=r.call(this)||this;return a.parentTask=e,a.input=t,a.extractedFaces=o,a}return n}(bt),g3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t,o=this;return Z(this,function(a){switch(a.label){case 0:return[4,this.parentTask];case 1:return e=a.sent(),[4,wn(e,this.input,function(i){return Q(o,void 0,void 0,function(){return Z(this,function(s){switch(s.label){case 0:return[4,Promise.all(i.map(function(u){return j0.faceExpressionNet.predictExpressions(u)}))];case 1:return[2,s.sent()]}})})},this.extractedFaces)];case 2:return t=a.sent(),[2,e.map(function(i,s){return I5(i,t[s])})]}})})},n.prototype.withAgeAndGender=function(){return new w3(this,this.input)},n}(U5),y3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t;return Z(this,function(o){switch(o.label){case 0:return[4,this.parentTask];case 1:return e=o.sent(),e?[4,d3(e,this.input,function(a){return j0.faceExpressionNet.predictExpressions(a)},this.extractedFaces)]:[2];case 2:return t=o.sent(),[2,I5(e,t)]}})})},n.prototype.withAgeAndGender=function(){return new C3(this,this.input)},n}(U5),x3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.withAgeAndGender=function(){return new _3(this,this.input)},n.prototype.withFaceDescriptors=function(){return new I3(this,this.input)},n}(g3),b3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.withAgeAndGender=function(){return new E3(this,this.input)},n.prototype.withFaceDescriptor=function(){return new R3(this,this.input)},n}(y3),G5=function(r){r0(n,r);function n(e,t,o){var a=r.call(this)||this;return a.parentTask=e,a.input=t,a.extractedFaces=o,a}return n}(bt),w3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t,o=this;return Z(this,function(a){switch(a.label){case 0:return[4,this.parentTask];case 1:return e=a.sent(),[4,wn(e,this.input,function(i){return Q(o,void 0,void 0,function(){return Z(this,function(s){switch(s.label){case 0:return[4,Promise.all(i.map(function(u){return j0.ageGenderNet.predictAgeAndGender(u)}))];case 1:return[2,s.sent()]}})})},this.extractedFaces)];case 2:return t=a.sent(),[2,e.map(function(i,s){var u=t[s],c=u.age,l=u.gender,h=u.genderProbability;return N5(F5(i,l,h),c)})]}})})},n.prototype.withFaceExpressions=function(){return new g3(this,this.input)},n}(G5),C3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t,o,a,i;return Z(this,function(s){switch(s.label){case 0:return[4,this.parentTask];case 1:return e=s.sent(),e?[4,d3(e,this.input,function(u){return j0.ageGenderNet.predictAgeAndGender(u)},this.extractedFaces)]:[2];case 2:return t=s.sent(),o=t.age,a=t.gender,i=t.genderProbability,[2,N5(F5(e,a,i),o)]}})})},n.prototype.withFaceExpressions=function(){return new y3(this,this.input)},n}(G5),_3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.withFaceExpressions=function(){return new x3(this,this.input)},n.prototype.withFaceDescriptors=function(){return new I3(this,this.input)},n}(w3),E3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.withFaceExpressions=function(){return new b3(this,this.input)},n.prototype.withFaceDescriptor=function(){return new R3(this,this.input)},n}(C3),z5=function(r){r0(n,r);function n(e,t){var o=r.call(this)||this;return o.parentTask=e,o.input=t,o}return n}(bt),I3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t;return Z(this,function(o){switch(o.label){case 0:return[4,this.parentTask];case 1:return e=o.sent(),[4,wn(e,this.input,function(a){return Promise.all(a.map(function(i){return j0.faceRecognitionNet.computeFaceDescriptor(i)}))},null,function(a){return a.landmarks.align(null,{useDlibAlignment:!0})})];case 2:return t=o.sent(),[2,t.map(function(a,i){return T5(e[i],a)})]}})})},n.prototype.withFaceExpressions=function(){return new x3(this,this.input)},n.prototype.withAgeAndGender=function(){return new _3(this,this.input)},n}(z5),R3=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t;return Z(this,function(o){switch(o.label){case 0:return[4,this.parentTask];case 1:return e=o.sent(),e?[4,d3(e,this.input,function(a){return j0.faceRecognitionNet.computeFaceDescriptor(a)},null,function(a){return a.landmarks.align(null,{useDlibAlignment:!0})})]:[2];case 2:return t=o.sent(),[2,T5(e,t)]}})})},n.prototype.withFaceExpressions=function(){return new b3(this,this.input)},n.prototype.withAgeAndGender=function(){return new E3(this,this.input)},n}(z5),H5=function(r){r0(n,r);function n(e,t,o){var a=r.call(this)||this;return a.parentTask=e,a.input=t,a.useTinyLandmarkNet=o,a}return Object.defineProperty(n.prototype,"landmarkNet",{get:function(){return this.useTinyLandmarkNet?j0.faceLandmark68TinyNet:j0.faceLandmark68Net},enumerable:!0,configurable:!0}),n}(bt),xu=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t,o,a,i,s=this;return Z(this,function(u){switch(u.label){case 0:return[4,this.parentTask];case 1:return e=u.sent(),t=e.map(function(c){return c.detection}),this.input instanceof E0?[4,s3(this.input,t)]:[3,3];case 2:return a=u.sent(),[3,5];case 3:return[4,i3(this.input,t)];case 4:a=u.sent(),u.label=5;case 5:return o=a,[4,Promise.all(o.map(function(c){return s.landmarkNet.detectLandmarks(c)}))];case 6:return i=u.sent(),o.forEach(function(c){return c instanceof E0&&c.dispose()}),[2,e.map(function(c,l){return xn(c,i[l])})]}})})},n.prototype.withFaceExpressions=function(){return new x3(this,this.input)},n.prototype.withAgeAndGender=function(){return new _3(this,this.input)},n.prototype.withFaceDescriptors=function(){return new I3(this,this.input)},n}(H5),bu=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t,o,a,i;return Z(this,function(s){switch(s.label){case 0:return[4,this.parentTask];case 1:return e=s.sent(),e?(t=e.detection,this.input instanceof E0?[4,s3(this.input,[t])]:[3,3]):[2];case 2:return a=s.sent(),[3,5];case 3:return[4,i3(this.input,[t])];case 4:a=s.sent(),s.label=5;case 5:return o=a,[4,this.landmarkNet.detectLandmarks(o[0])];case 6:return i=s.sent(),o.forEach(function(u){return u instanceof E0&&u.dispose()}),[2,xn(e,i)]}})})},n.prototype.withFaceExpressions=function(){return new b3(this,this.input)},n.prototype.withAgeAndGender=function(){return new E3(this,this.input)},n.prototype.withFaceDescriptor=function(){return new R3(this,this.input)},n}(H5),j5=function(r){r0(n,r);function n(e,t){t===void 0&&(t=new bn);var o=r.call(this)||this;return o.input=e,o.options=t,o}return n}(bt),q5=function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t,o,a;return Z(this,function(i){switch(i.label){case 0:return e=this,t=e.input,o=e.options,o instanceof P5?[4,j0.mtcnn.forward(t,o)]:[3,2];case 1:return[2,i.sent().map(function(s){return s.detection})];case 2:if(a=o instanceof L5?function(s){return j0.tinyFaceDetector.locateFaces(s,o)}:o instanceof bn?function(s){return j0.ssdMobilenetv1.locateFaces(s,o)}:o instanceof p3?function(s){return j0.tinyYolov2.locateFaces(s,o)}:null,!a)throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options");return[2,a(t)]}})})},n.prototype.runAndExtendWithFaceDetections=function(){var e=this;return new Promise(function(t){return Q(e,void 0,void 0,function(){var o;return Z(this,function(a){switch(a.label){case 0:return[4,this.run()];case 1:return o=a.sent(),[2,t(o.map(function(i){return lt({},i)}))]}})})})},n.prototype.withFaceLandmarks=function(e){return e===void 0&&(e=!1),new xu(this.runAndExtendWithFaceDetections(),this.input,e)},n.prototype.withFaceExpressions=function(){return new g3(this.runAndExtendWithFaceDetections(),this.input)},n.prototype.withAgeAndGender=function(){return new w3(this.runAndExtendWithFaceDetections(),this.input)},n}(j5);(function(r){r0(n,r);function n(){return r!==null&&r.apply(this,arguments)||this}return n.prototype.run=function(){return Q(this,void 0,void 0,function(){var e,t;return Z(this,function(o){switch(o.label){case 0:return[4,new q5(this.input,this.options)];case 1:return e=o.sent(),t=e[0],e.forEach(function(a){a.score>t.score&&(t=a)}),[2,t]}})})},n.prototype.runAndExtendWithFaceDetection=function(){var e=this;return new Promise(function(t){return Q(e,void 0,void 0,function(){var o;return Z(this,function(a){switch(a.label){case 0:return[4,this.run()];case 1:return o=a.sent(),[2,t(o?lt({},o):void 0)]}})})})},n.prototype.withFaceLandmarks=function(e){return e===void 0&&(e=!1),new bu(this.runAndExtendWithFaceDetection(),this.input,e)},n.prototype.withFaceExpressions=function(){return new y3(this.runAndExtendWithFaceDetection(),this.input)},n.prototype.withAgeAndGender=function(){return new C3(this.runAndExtendWithFaceDetection(),this.input)},n})(j5);function wu(r,n){return n===void 0&&(n=new bn),new q5(r,n)}function Cu(r,n){if(r.length!==n.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");var e=Array.from(r),t=Array.from(n);return Math.sqrt(e.map(function(o,a){return o-t[a]}).reduce(function(o,a){return o+Math.pow(a,2)},0))}var _u=function(){function r(n,e){e===void 0&&(e=.6),this._distanceThreshold=e;var t=Array.isArray(n)?n:[n];if(!t.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");var o=1,a=function(){return"person "+o++};this._labeledDescriptors=t.map(function(i){if(i instanceof Qe)return i;if(i instanceof Float32Array)return new Qe(a(),[i]);if(i.descriptor&&i.descriptor instanceof Float32Array)return new Qe(a(),[i.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}return Object.defineProperty(r.prototype,"labeledDescriptors",{get:function(){return this._labeledDescriptors},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"distanceThreshold",{get:function(){return this._distanceThreshold},enumerable:!0,configurable:!0}),r.prototype.computeMeanDistance=function(n,e){return e.map(function(t){return Cu(t,n)}).reduce(function(t,o){return t+o},0)/(e.length||1)},r.prototype.matchDescriptor=function(n){var e=this;return this.labeledDescriptors.map(function(t){var o=t.descriptors,a=t.label;return new C4(a,e.computeMeanDistance(n,o))}).reduce(function(t,o){return t.distance<o.distance?t:o})},r.prototype.findBestMatch=function(n){var e=this.matchDescriptor(n);return e.distance<this.distanceThreshold?e:new C4("unknown",e.distance)},r.prototype.toJSON=function(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map(function(n){return n.toJSON()})}},r.fromJSON=function(n){var e=n.labeledDescriptors.map(function(t){return Qe.fromJSON(t)});return new r(e,n.distanceThreshold)},r}();function K5(r,n){var e=new me(n.width,n.height),t=e.width,o=e.height;if(t<=0||o<=0)throw new Error("resizeResults - invalid dimensions: "+JSON.stringify({width:t,height:o}));if(Array.isArray(r))return r.map(function(s){return K5(s,{width:t,height:o})});if(R5(r)){var a=r.detection.forSize(t,o),i=r.unshiftedLandmarks.forSize(a.box.width,a.box.height);return xn(lt(r,a),i)}return en(r)?lt(r,r.detection.forSize(t,o)):r instanceof ct||r instanceof l1?r.forSize(t,o):r}const Eu=[{label:"MayorEmmanuel",descriptors:[[-.12144695967435837,.041774146258831024,-.030340036377310753,-.05280286446213722,-.028010504320263863,-.09127509593963623,.032353803515434265,-.13556665182113647,.14702536165714264,-.06770562380552292,.21550685167312622,-.04111330583691597,-.1386035829782486,-.12525945901870728,-.004926472902297974,.1419048309326172,-.15592578053474426,-.07829901576042175,-.11170084774494171,-.11796790361404419,.019149532541632652,-.0013100290670990944,.043135978281497955,.013385131023824215,-.054765187203884125,-.36812347173690796,-.08125486224889755,-.08413348346948624,.019837578758597374,-.035749368369579315,.03240620717406273,.02880019322037697,-.2578175365924835,-.14691044390201569,.003260101657360792,.056969739496707916,.0015355960931628942,-.0298475194722414,.15974895656108856,.06699896603822708,-.06775283068418503,.04186451435089111,.03280001878738403,.2669232189655304,.18962348997592926,.08025301247835159,-.0067398990504443645,-.0791763886809349,.13069075345993042,-.22983166575431824,-.005245591979473829,.04769231751561165,.07079580426216125,.032495517283678055,-.0016188806621357799,-.04289153218269348,.044926684349775314,.03279392793774605,-.20917393267154694,.013137461617588997,.024852590635418892,-.11223159730434418,-.10670540481805801,-.03802786394953728,.2454434335231781,.11978350579738617,-.056819431483745575,-.10474207252264023,.11145037412643433,-.11342231184244156,-.037410542368888855,-.054263509809970856,-.09292794018983841,-.1266375333070755,-.3107133209705353,.11467182636260986,.3751184940338135,.0765904039144516,-.1546602100133896,.030158666893839836,-.11046791076660156,.023286942392587662,.09432440251111984,.050035662949085236,-.021028924733400345,-.052341803908348083,-.07599922269582748,.028441142290830612,.15869978070259094,-.07996973395347595,-.06238115578889847,.19202207028865814,-.06409768760204315,.06998100876808167,.007646000012755394,.03681829199194908,-.1468317210674286,.058553241193294525,-.08492028713226318,-.035540178418159485,.15157723426818848,-.005278991535305977,.0828377977013588,.10773056745529175,-.1712060123682022,.1097610741853714,-.0652371272444725,-.030202502384781837,.09278854727745056,-.02334013767540455,-.04127299413084984,-.10349667072296143,.05596848204731941,-.16027574241161346,.23289625346660614,.20357409119606018,-.05786514654755592,.1710854172706604,.040608905255794525,.06653835624456406,-.0200483575463295,.1054716631770134,-.14311330020427704,-.047240305691957474,.04200729355216026,.07716769725084305,.018550274893641472,-.0021200014743953943],[-.10393144190311432,.04064740613102913,.005062927957624197,-.04170943796634674,-.009645399637520313,-.06828054785728455,-.0109621686860919,-.19079555571079254,.14630576968193054,-.08397001773118973,.20379789173603058,-.042180102318525314,-.13526563346385956,-.11586606502532959,-.02453281171619892,.17093808948993683,-.17247521877288818,-.0929776132106781,-.10498849302530289,-.09705551713705063,.05250346288084984,.02935737743973732,.08951642364263535,.017279798164963722,-.0786597952246666,-.34526047110557556,-.10407361388206482,-.09527921676635742,.04171515628695488,-.02314198575913906,.015618973411619663,.002603980479761958,-.23318295180797577,-.1021316796541214,.02636631578207016,.05323714017868042,.025164613500237465,-.06845136731863022,.16827838122844696,.04181230068206787,-.1225849837064743,.01896345429122448,.020347097888588905,.24701057374477386,.20177748799324036,.04069850221276283,-.019610397517681122,-.11321280896663666,.1389315128326416,-.2025405466556549,-.018547963351011276,.04398629069328308,.0530581921339035,.04736046865582466,.0037955925799906254,-.052712202072143555,.04894540086388588,.09185247123241425,-.19453474879264832,.011672461405396461,.007018338888883591,-.1269153505563736,-.0819336473941803,-.03764577955007553,.22537359595298767,.10651054233312607,-.0969124436378479,-.13376305997371674,.10790534317493439,-.07758644968271255,-.04211907833814621,-.019430574029684067,-.11773771792650223,-.13903719186782837,-.31835806369781494,.04337748885154724,.40440839529037476,.03813782334327698,-.2244752198457718,.021291116252541542,-.10041604191064835,.04148042947053909,.12084583938121796,.09921146184206009,.021330755203962326,-.03878970071673393,-.08444058150053024,-.0015599599573761225,.1661679744720459,-.11148262023925781,-.06737364083528519,.2166360318660736,-.07852290570735931,.08017398416996002,.006362305488437414,.09317796677350998,-.1441066712141037,.07592324912548065,-.1050422266125679,-.047664206475019455,.14052718877792358,.042490653693675995,.06532778590917587,.10927338898181915,-.15216362476348877,.13952572643756866,-.015355406329035759,-.011950616724789143,.10232684761285782,-.052426181733608246,-.04820628464221954,-.08610629290342331,.08542075008153915,-.19354134798049927,.23018388450145721,.21301546692848206,-.04802057892084122,.17378658056259155,.036833491176366806,.073499396443367,-.023120906203985214,.0849166139960289,-.16677621006965637,-.037710096687078476,.05990399047732353,.05347709730267525,.0007095403270795941,-.013965504243969917]]},{label:"ViceMayorAlvin",descriptors:[[-.036101218312978745,.09941209107637405,.07369709759950638,-.01792331598699093,-.061665117740631104,-.0362914502620697,-.0431063137948513,-.12741097807884216,.15772052109241486,-.03553071990609169,.10792974382638931,-.04324577376246452,-.15783695876598358,-.13046203553676605,-.039307136088609695,.16717761754989624,-.21294723451137543,-.1577669233083725,-.024741359055042267,-.026789572089910507,.08099308609962463,.007449162192642689,.052675046026706696,-.014950962737202644,-.05466948449611664,-.3873101472854614,-.09481198340654373,-.12431909143924713,.06349482387304306,-.05144190788269043,-.054520994424819946,.0513816736638546,-.14954286813735962,-.09320027381181717,.04662863537669182,.06263437122106552,-.0058685410767793655,.008178642950952053,.1451968252658844,.022339290007948875,-.18244652450084686,.01647946797311306,.0751040130853653,.23319633305072784,.22151030600070953,.15693050622940063,.03476371988654137,-.08225291967391968,.035695068538188934,-.16853143274784088,.07191617786884308,.12282998114824295,.10269733518362045,.09144987910985947,.049825482070446014,-.15702512860298157,-.002660759724676609,.010000060312449932,-.20067597925662994,.07646747678518295,.09219519793987274,-.10510285943746567,-.04528705030679703,.020008793100714684,.24950388073921204,.08957000076770782,-.05735062435269356,-.1983022838830948,.14736425876617432,-.14214450120925903,-.10144464671611786,.00869713444262743,-.11523766070604324,-.09760252386331558,-.26848238706588745,.0027731850277632475,.4043883979320526,.08768928796052933,-.1649802029132843,.02423028089106083,-.10191145539283752,.009778641164302826,.10429779440164566,.05547941476106644,-.044384993612766266,.005308595020323992,-.08724813908338547,-.0312664732336998,.1309404820203781,-.08669330924749374,-.07192974537611008,.12474250793457031,-.04086138308048248,.06106641888618469,-.007302902638912201,.010967272333800793,-.06277001649141312,.12673801183700562,-.16194434463977814,-.10563366115093231,.08400740474462509,-.001649282407015562,.06532921642065048,.09666548669338226,-.14922454953193665,.07866884022951126,.002069854876026511,-.01903286576271057,.009977167472243309,.03385038673877716,-.15485937893390656,-.05981400981545448,.15823613107204437,-.24144969880580902,.2771892845630646,.24352437257766724,.028733471408486366,.11778128892183304,.08769561350345612,.09062767773866653,.043167367577552795,-.03438001126050949,-.12994101643562317,-.03522875905036926,.07041026651859283,.03778432309627533,.055883053690195084,.059034351259469986],[-.11245845258235931,.05782462656497955,.03162045404314995,-.046056658029556274,-.09432341903448105,-.0580710731446743,-.0233108289539814,-.10718295723199844,.1476006954908371,-.032746728509664536,.18053531646728516,-.05977638065814972,-.22243632376194,-.1228725016117096,-.026048388332128525,.12329596281051636,-.20553646981716156,-.12185490876436234,-.03564382344484329,-.09565194696187973,.029340358451008797,-.03620399907231331,.03407825529575348,-.007362619042396545,-.04809259623289108,-.3598352372646332,-.09558068215847015,-.11086048930883408,.04834472015500069,-.055421747267246246,-.044865697622299194,.029119277372956276,-.14590995013713837,-.1301044523715973,.045832812786102295,.11202947050333023,.001990105025470257,.019380541518330574,.11762842535972595,.02733023278415203,-.12235119938850403,-.030044853687286377,.034235380589962006,.2329523265361786,.20420600473880768,.16669952869415283,.01759975217282772,-.0935676321387291,.06483325362205505,-.1927381455898285,.07982325553894043,.17708198726177216,.08474314957857132,.07392510771751404,.01631932705640793,-.12755686044692993,.006951684132218361,.07138301432132721,-.17907124757766724,.037234142422676086,.092788465321064,-.0991780161857605,-.07058785855770111,-.0022078927140682936,.2175622433423996,.12160815298557281,-.05285242199897766,-.19380857050418854,.1644105762243271,-.14116258919239044,-.10493607819080353,.019568106159567833,-.1219966858625412,-.12182606756687164,-.22253543138504028,.04608827084302902,.41698968410491943,.09453599900007248,-.1375909447669983,-.005166374146938324,-.15869411826133728,-.011735870502889156,.08811914920806885,.03139346465468407,-.019513387233018875,-.03230160102248192,-.12021417170763016,-.04731705039739609,.11144072562456131,-.09815407544374466,-.030731476843357086,.11872877925634384,-.024317627772688866,.060922760516405106,.03585256636142731,.05584409460425377,-.10990899801254272,.10909364372491837,-.1144968643784523,-.14671999216079712,.12061397731304169,-.05465028062462807,.06289659440517426,.05363466218113899,-.16709813475608826,.11602699756622314,-.0161602683365345,-.010588325560092926,.027094008401036263,-.036889269948005676,-.02421105094254017,-.0667286291718483,.16455206274986267,-.23619529604911804,.25168073177337646,.25436311960220337,-.0011137882247567177,.17380820214748383,.042436469346284866,.11246722936630249,.013788262382149696,-.040746647864580154,-.10194618254899979,-.06086714193224907,-.02834411896765232,.06526430696249008,.0022670768667012453,.030260207131505013]]},{label:"MayorAlexis",descriptors:[[.016361244022846222,.06125762686133385,.0016906881937757134,.04065428674221039,-.014987596310675144,-.06755148619413376,-.07246650755405426,-.19318370521068573,.10906871408224106,-.048417139798402786,.2503703236579895,-.06427150219678879,-.15579991042613983,-.12637577950954437,.011370385996997356,.12442410737276077,-.12045910209417343,-.08263029158115387,-.09100422263145447,.04618604853749275,-.015902599319815636,.007411761675029993,.07371991127729416,-.003536566160619259,-.03574827313423157,-.3412364423274994,-.14972177147865295,-.1266838014125824,.030819134786725044,-.09111089259386063,-.06875339150428772,.008168845437467098,-.22639071941375732,-.09974687546491623,.043498918414115906,.007132011465728283,-.05836569517850876,-.014795871451497078,.18067452311515808,.0318189412355423,-.1977984607219696,.020996594801545143,-.04189153388142586,.17956560850143433,.17453089356422424,.08989295363426208,.03628489002585411,-.1589113026857376,.13118934631347656,-.11089874804019928,.05299536511301994,.1059858575463295,.12404737621545792,.059676431119441986,-.006890467368066311,-.08445633202791214,.05436126887798309,.08369994908571243,-.1939682960510254,.010559099726378918,.11807556450366974,-.051559269428253174,-.019042950123548508,.04252374544739723,.19736942648887634,.06933886557817459,-.0625808835029602,-.17124627530574799,.11797170341014862,-.13568776845932007,-.034283347427845,.1096203550696373,-.08217853307723999,-.20285777747631073,-.3168902099132538,-.014711891300976276,.42406952381134033,.03711363673210144,-.21198032796382904,-.023843035101890564,-.11579184234142303,-.027573224157094955,.1382221281528473,.05361750349402428,-.005516737699508667,-.0028578457422554493,-.14138835668563843,-.046679407358169556,.23022857308387756,-.08197271823883057,-.030909843742847443,.15674731135368347,-.06302858144044876,.09033225476741791,.02070549875497818,.07588963210582733,-.06033303961157799,.042802393436431885,-.06455287337303162,-.02375822141766548,.014812727458775043,.019659651443362236,-.026650981977581978,.09691610187292099,-.12695083022117615,.19011947512626648,.008573935367166996,.01000882312655449,.012645845301449299,-.05405256524682045,-.041141945868730545,-.05771341547369957,.10069769620895386,-.274815171957016,.20128974318504333,.10492182523012161,-.01089861337095499,.09998534619808197,-.008522403426468372,.09667928516864777,-.09320779889822006,-.05636904761195183,-.25549814105033875,-.07733885943889618,.05378909781575203,.04999242722988129,.04595916345715523,-.027131104841828346],[-.04504326358437538,.0969020426273346,.002394329523667693,.07007686048746109,.0030878775287419558,-.10849391669034958,-.02662169374525547,-.1915966123342514,.12133987993001938,-.054903410375118256,.277236670255661,-.09251269698143005,-.19951610267162323,-.19550493359565735,-.012310514226555824,.16477173566818237,-.10270354151725769,-.12368018925189972,-.09955848008394241,.023430345579981804,.024111781269311905,.006094654090702534,.10521188378334045,.019223984330892563,.0008114244556054473,-.3752088248729706,-.10482428967952728,-.1514057219028473,.027717536315321922,-.06964434683322906,-.06605341285467148,.005622691474854946,-.1835166960954666,-.13896530866622925,.05657832697033882,.020580030977725983,-.05339983105659485,.02750444784760475,.20231366157531738,.007469425443559885,-.17747734487056732,-.03413942828774452,-.028137575834989548,.23284976184368134,.18671879172325134,.09384483098983765,.04063726216554642,-.1809048056602478,.06719554960727692,-.11851323395967484,.010053330101072788,.09964970499277115,.1367284208536148,.047728341072797775,.023549579083919525,-.08882930874824524,.022456133738160133,.07472649216651917,-.18787238001823425,-.0020190575160086155,.09664247184991837,-.07075860351324081,-.051689207553863525,.019146308302879333,.258693128824234,.03940693661570549,-.0989970937371254,-.12395989149808884,.13726596534252167,-.14186038076877594,-.031483039259910583,.07697233557701111,-.07817915827035904,-.17395825684070587,-.31416428089141846,-.030171647667884827,.4177854359149933,.007454825099557638,-.1925533264875412,-.02063421532511711,-.1037425696849823,-.005070217885077,.1125558391213417,.0657997727394104,-.049532655626535416,-.006636329926550388,-.1344936341047287,-.04739946126937866,.14296630024909973,-.09387736767530441,-.014805102720856667,.14252518117427826,-.08241533488035202,.0993114709854126,.03646109998226166,.05326017364859581,-.06051839143037796,.07255972176790237,-.07376058399677277,-.012412909418344498,.017016561701893806,-.01969921961426735,.03479466959834099,.054826900362968445,-.10132689028978348,.09029756486415863,-.00646247249096632,.031509675085544586,.03248843178153038,-.04094240069389343,-.05628826096653938,-.08670944720506668,.09392036497592926,-.2462519109249115,.20632462203502655,.13554085791110992,-.01586156152188778,.10752684623003006,.021312765777111053,.09586583077907562,-.07216106355190277,-.037383101880550385,-.23395144939422607,-.02357877418398857,.058145031332969666,.03367527574300766,.048764120787382126,-.032944511622190475]]},{label:"ViceMayorFelix",descriptors:[[-.04720621183514595,.08899739384651184,.007170437835156918,.03295411169528961,-.062414880841970444,-.06712394952774048,-.009715190157294273,-.20568160712718964,.12116200476884842,-.07190520316362381,.27719104290008545,.0009688747813925147,-.13805510103702545,-.11475294083356857,.021108044311404228,.13453151285648346,-.14971643686294556,-.16906391084194183,-.14597205817699432,.00038108686567284167,-.06329856812953949,-.05157582834362984,.0944087952375412,.011360445991158485,-.029623672366142273,-.29183635115623474,-.14511650800704956,-.07425781339406967,.1321355551481247,.001409620395861566,.017893850803375244,-.0024075820110738277,-.22840571403503418,-.13279612362384796,.08814404904842377,.029060447588562965,-.059573542326688766,-.03865200653672218,.24050168693065643,-.07252398133277893,-.1325896978378296,.061838578432798386,.03971053287386894,.1964602768421173,.1831723004579544,.04767020791769028,.054343465715646744,-.13764147460460663,.0738886371254921,-.1236652061343193,.0041368016973137856,.1072637215256691,.17203594744205475,.07437164336442947,.008587109856307507,-.11302744597196579,.04331072419881821,.12210235744714737,-.1582040786743164,.03214491158723831,.03446072340011597,-.02406340278685093,-.020213589072227478,.007863808423280716,.26575860381126404,.09480531513690948,-.09287359565496445,-.18911895155906677,.1691574901342392,-.1200994923710823,-.025037391111254692,.0748651996254921,-.11937133967876434,-.12787340581417084,-.2595849633216858,-.011913293041288853,.47934281826019287,.023386895656585693,-.17538043856620789,.02796400710940361,-.08931474387645721,-.032591093331575394,-.009842767380177975,.06828027963638306,-.1129515990614891,-.0429653599858284,-.09885841608047485,-.004300596192479134,.19922296702861786,-.04257740080356598,-.035344090312719345,.16607147455215454,-.01750311255455017,.07282013446092606,.04991986230015755,.023909378796815872,-.038114357739686966,.021341288462281227,-.09572333842515945,-.024843020364642143,-.0012863059528172016,-.011426330544054508,.06894171983003616,.10343329608440399,-.07929127663373947,.10680665820837021,-.026959100738167763,.06271831691265106,.036744292825460434,.07960899919271469,-.03829049691557884,-.10640300065279007,.097162164747715,-.2560071647167206,.23624415695667267,.13360321521759033,-.04932011663913727,.06854964047670364,.045840464532375336,.12705300748348236,-.018856560811400414,.06963032484054565,-.14845611155033112,-.04730847850441933,.001960264053195715,-.025810617953538895,.0764865130186081,.035042840987443924],[-.06490384042263031,.1018889769911766,.014834856614470482,.0009154862491413951,-.06338217854499817,-.04480847716331482,-.04214869812130928,-.19312845170497894,.13622409105300903,-.12144412845373154,.2746582329273224,-.003411154495552182,-.17092940211296082,-.11803606897592545,.003825085237622261,.19694189727306366,-.19500583410263062,-.18465881049633026,-.13643032312393188,.012149689719080925,.0009581365156918764,-.060844533145427704,.05848950520157814,.010704263113439083,-.0164451003074646,-.32793381810188293,-.11051010340452194,-.057582926005125046,.10455125570297241,-.003687991062179208,-.06440480053424835,-.01654001884162426,-.23185200989246368,-.11585216969251633,.07056530565023422,.03442049399018288,-.0582231767475605,-.05271507427096367,.19457735121250153,-.04709009826183319,-.16930489242076874,.04087906330823898,.016115481033921242,.1863594502210617,.24811023473739624,.04935695230960846,.04478967934846878,-.17140018939971924,.08898968994617462,-.19388629496097565,.030508115887641907,.10998206585645676,.1442168653011322,.052915360778570175,.02843320742249489,-.10404222458600998,.04642479494214058,.08847341686487198,-.1352253556251526,-.010773023590445518,.07482559233903885,-.06781268864870071,-.035732511430978775,-.002480176044628024,.24980096518993378,.08633758127689362,-.08702592551708221,-.21570903062820435,.14409908652305603,-.10775553435087204,-.04203026369214058,.04181798920035362,-.12049784511327744,-.13267837464809418,-.31042659282684326,-.007529553957283497,.5241153240203857,.034040044993162155,-.16989128291606903,.06789260357618332,-.09059660881757736,-.04060694947838783,.07893955707550049,.08583952486515045,-.07018573582172394,-.07777570188045502,-.12344717234373093,.01774902455508709,.19826839864253998,-.08503662049770355,-.03014465607702732,.15460020303726196,-.040722694247961044,.06351030617952347,.04166385531425476,.05268309265375137,-.04695930331945419,.06545504182577133,-.08709880709648132,-.034064847975969315,.022153440862894058,.01999024488031864,.043367281556129456,.11453288793563843,-.08222509920597076,.0658196434378624,-.04693170636892319,.06868620216846466,.07336128503084183,.0010688231559470296,-.07661547511816025,-.12376118451356888,.05487227067351341,-.2432110458612442,.19147013127803802,.15278974175453186,-.0284834373742342,.06302047520875931,.0662294328212738,.1091008111834526,.010081540793180466,.053116898983716965,-.20789696276187897,-.018847931176424026,.042793549597263336,.01294018980115652,.052910637110471725,.015344158746302128]]},{label:"MayorAaron",descriptors:[[-.133899986743927,.09617979824542999,.057181283831596375,.023760976269841194,-.06168167665600777,-.028641410171985626,-.008435074239969254,-.10771171748638153,.0815129429101944,-.07991022616624832,.2911324203014374,-.10741902142763138,-.22873590886592865,-.1283847689628601,-.07060351967811584,.18306253850460052,-.1955542266368866,-.10720399767160416,-.061473503708839417,.012852013111114502,.07667536288499832,-.05577573552727699,-.019168173894286156,-.019384652376174927,-.07230643182992935,-.3559075891971588,-.08193253725767136,-.02789919264614582,-.04319865256547928,-.061224307864904404,-.00840082298964262,.059222862124443054,-.25892361998558044,-.05736665800213814,-.0002570270444266498,.048219162970781326,-.030060460790991783,.004865838214755058,.16972973942756653,-.04187803715467453,-.1893959641456604,.007187339942902327,.03168440982699394,.23982679843902588,.12388230860233307,.0928133875131607,-.055962007492780685,-.02809666097164154,.06440255045890808,-.1949416697025299,-.010985576547682285,.18006734549999237,.0904540941119194,.06773091107606888,.00860731489956379,-.07266724109649658,.039091311395168304,.062086500227451324,-.11321187019348145,-.03959563374519348,.05866917595267296,-.11514680087566376,.030998971313238144,-.10092414915561676,.2260313481092453,.05200052633881569,-.09418868273496628,-.13943250477313995,.08701134473085403,-.11123356223106384,-.05420638248324394,.041461482644081116,-.11386436223983765,-.20337113738059998,-.3589688837528229,.047017693519592285,.39576205611228943,.1277793049812317,-.18156494200229645,.01455667708069086,-.018553081899881363,-.021387973800301552,.1599801927804947,.09795289486646652,-.01671886257827282,.07506522536277771,-.10600069910287857,-.005825927015393972,.20870091021060944,-.04013902693986893,-.10223957896232605,.18051880598068237,-.0644909143447876,.052470844238996506,.012959263287484646,-.06193308159708977,.025067593902349472,.013061114586889744,-.11188046634197235,.048327650874853134,-.0021127990912646055,-.04063238948583603,-.04332035779953003,.08838582783937454,-.07748273760080338,.06358776986598969,-.012191811576485634,.05879233404994011,-.07686544954776764,.009442877024412155,-.1489384025335312,-.012184628285467625,.07193762063980103,-.2637115716934204,.2542561888694763,.1565200388431549,-.01050188485532999,.09116460382938385,.11725255846977234,.0507064051926136,-.04305380955338478,.0006520564202219248,-.1526350975036621,-.10728824883699417,.1287148892879486,-.012365981936454773,.16154110431671143,-.025113437324762344],[-.12674516439437866,.06165924295783043,.07923194020986557,-.026205578818917274,-.06210984289646149,-.05074909329414368,-.008159295655786991,-.10777954757213593,.12612490355968475,-.13392037153244019,.2517834007740021,-.0966576337814331,-.2581564486026764,-.06343124061822891,-.06290660053491592,.14857153594493866,-.1784278154373169,-.15924708545207977,-.06633260101079941,-.01135363057255745,.08019980788230896,-.06365914642810822,-.01778598129749298,-.01665252260863781,-.08467918634414673,-.3335757255554199,-.11064302921295166,-.02963518723845482,.019879350438714027,-.04331439733505249,-.03982982411980629,.06604726612567902,-.21727624535560608,-.08374571055173874,-.0028673310298472643,.11361562460660934,-.052126701921224594,-.04047199338674545,.1876213401556015,-.07436543703079224,-.213822603225708,-.027290860190987587,.08787528425455093,.1984443962574005,.14988788962364197,.09254096448421478,-.006588343996554613,-.0820775181055069,.05263509973883629,-.20427794754505157,.0027166639920324087,.19760584831237793,.05441387742757797,.1481962949037552,-.02423664927482605,-.13536104559898376,.03649801015853882,.11181066185235977,-.11084616929292679,.027379723265767097,.08641546964645386,-.1373199224472046,-.015451345592737198,-.0721573606133461,.23953478038311005,.059304025024175644,-.12914057075977325,-.17627879977226257,.12071073800325394,-.16687068343162537,-.09948987513780594,.0737929493188858,-.1381342113018036,-.1850818395614624,-.31913304328918457,.030994320288300514,.39635998010635376,.12539342045783997,-.10326869785785675,.07334743440151215,-.04394425079226494,-.02558993734419346,.11746992915868759,.13390323519706726,-.035071708261966705,.09720718860626221,-.09593307971954346,-.0011963221477344632,.22318816184997559,-.02128622494637966,-.08263193070888519,.16472765803337097,-.04313923791050911,.09985104203224182,.03701873868703842,.033134106546640396,-.016142290085554123,-.016529839485883713,-.1693810373544693,-.01488710567355156,.04867152124643326,-.04859975352883339,-.03761831298470497,.07829197496175766,-.0663437694311142,.10173738747835159,-.02252751775085926,.07383023202419281,-.04085022583603859,-.01812591776251793,-.10939326137304306,-.02028382569551468,.12126992642879486,-.23975342512130737,.22518175840377808,.19807276129722595,.04838351160287857,.11019445955753326,.19175316393375397,.06954175233840942,.0013375842245295644,-.018408242613077164,-.18970254063606262,-.07105329632759094,.09743131697177887,.013631072826683521,.1621551811695099,.006819119676947594]]},{label:"ViceMayorFranklin",descriptors:[[-.10666614770889282,.035993196070194244,.0212441086769104,-.034325066953897476,.028174739331007004,-.13158679008483887,-.05510910600423813,-.1585618108510971,.12486280500888824,-.12094447761774063,.2668677568435669,-.047000717371702194,-.12576022744178772,-.21848417818546295,.02668863907456398,.13098089396953583,-.15816999971866608,-.08431597054004669,-.10758761316537857,-.09312640875577927,.08876094222068787,-.017436297610402107,.04686978459358215,.013549874536693096,-.13237476348876953,-.3566008508205414,-.15491433441638947,-.0907280445098877,.061323728412389755,-.035510577261447906,-.05584122985601425,-.015741122886538506,-.2402852177619934,-.11415184289216995,-.004634430166333914,.09917822480201721,.02771064266562462,-.0018137512961402535,.14095672965049744,.055703211575746536,-.13788893818855286,.04088033735752106,.0018525792984291911,.22319307923316956,.26875805854797363,.07243384420871735,-.003726990194991231,-.10279300063848495,.13628794252872467,-.2332807183265686,.03947286307811737,.11510010063648224,.10980420559644699,.09100021421909332,.0414225198328495,-.03848407790064812,.04869065806269646,.03744533285498619,-.21473446488380432,-.022816944867372513,.03819526731967926,-.10546744614839554,-.10476866364479065,-.00031985819805413485,.2158854752779007,.13520219922065735,-.12188819795846939,-.1004997119307518,.14502151310443878,-.16540780663490295,.0016017594607546926,.03681590408086777,-.11073511093854904,-.16288523375988007,-.35550352931022644,.09537661820650101,.4431610703468323,.10878515988588333,-.22303445637226105,.045122936367988586,-.1147175207734108,.028786221519112587,.16954517364501953,.08044864982366562,.004661790560930967,.0132284015417099,-.06810697168111801,.04858805984258652,.13122232258319855,-.08909840136766434,-.01961180381476879,.22576451301574707,-.019531825557351112,.14894795417785645,.06337814778089523,.0768185704946518,-.05999453738331795,-.005387616343796253,-.07052832096815109,.033152662217617035,.10549867153167725,-.003957570996135473,.04545688256621361,.0472705103456974,-.09378595650196075,.15684309601783752,.019345659762620926,-.016458893194794655,.04750122129917145,-.038521792739629745,-.035970091819763184,-.1098378524184227,.0489114448428154,-.2532151937484741,.20400354266166687,.20070572197437286,-.08224410563707352,.17339016497135162,.03201475366950035,.12462349981069565,-.0483999028801918,.0017878491198644042,-.11697260290384293,-.03129973262548447,.009005047380924225,.03207137808203697,.019984805956482887,-.03599810227751732],[-.0678953155875206,.035438138991594315,.06344952434301376,.007449659053236246,.030506473034620285,-.11274808645248413,-.006683708168566227,-.1799188256263733,.1493256539106369,-.1271420270204544,.27798113226890564,-.06719209998846054,-.15583038330078125,-.16861750185489655,.010430555790662766,.17282916605472565,-.17409265041351318,-.11629350483417511,-.14307694137096405,-.07440388202667236,-.003888992592692375,-.0518517903983593,.09778402000665665,-.0030242023058235645,-.10558156669139862,-.3413097560405731,-.1449110507965088,-.08181276172399521,.06869955360889435,-.06707044690847397,-.04710382595658302,-.016895612701773643,-.25927209854125977,-.09953030198812485,.0014515472576022148,.08221018314361572,-.007148992270231247,-.04107179865241051,.20639316737651825,.03375224396586418,-.15760158002376556,-.03217240050435066,-.0006108907982707024,.20013819634914398,.1978948563337326,.031929053366184235,-.01483754999935627,-.07903371751308441,.07713589817285538,-.202174112200737,.04427904263138771,.07062448561191559,.08961089700460434,.08628743886947632,.02656702697277069,-.03802362456917763,.016062302514910698,.12177550792694092,-.19726811349391937,-.01466733030974865,.04645542800426483,-.13261285424232483,-.07899729162454605,.014567626640200615,.27607131004333496,.1475915163755417,-.12014462798833847,-.12042628973722458,.13998784124851227,-.13766083121299744,.012056554667651653,.04200409725308418,-.062934510409832,-.13139858841896057,-.3675263524055481,.060087405145168304,.4501422643661499,.032177116721868515,-.19296231865882874,-.002394346287474036,-.10606188327074051,-.03395046293735504,.11919791251420975,.1119341179728508,-.036111414432525635,.07319767028093338,-.07452813535928726,.024868976324796677,.1460787057876587,-.059610459953546524,-.05277438461780548,.18448090553283691,-.07818475365638733,.09309394657611847,.047866564244031906,.025297366082668304,-.05585343390703201,-.021764636039733887,-.10307859629392624,-.00045869825407862663,.053986020386219025,.012816390953958035,.007359765004366636,.05318794399499893,-.06890802830457687,.08033618330955505,.014802567660808563,-.06171916052699089,.032063160091638565,-.030350783839821815,-.07081230729818344,-.14070521295070648,.0727531909942627,-.2930734157562256,.17536312341690063,.18067866563796997,-.0544864684343338,.13830441236495972,.03277929499745369,.10525365173816681,-.02815145254135132,.03254573792219162,-.11163518577814102,-.007174182683229446,.053989894688129425,.0260991882532835,.07942736148834229,-.03171120211482048]]},{label:"MayorDann",descriptors:[[-.09633199870586395,.057313621044158936,.0850556418299675,-.036325760185718536,-.14639979600906372,-.007863051258027554,-.06571146845817566,-.1482306867837906,.10840877145528793,-.1697186380624771,.2673003077507019,-.0798497423529625,-.19480742514133453,-.12378039956092834,-.03828021138906479,.20090362429618835,-.1790916919708252,-.17666445672512054,-.04472373053431511,-.03747871145606041,.04651181027293205,55450454965466633e-21,-.030831415206193924,.0024672886356711388,-.027674585580825806,-.3788262903690338,-.08593447506427765,-.07033488154411316,.04317409172654152,-.10792642086744308,-.1178155392408371,.018399592489004135,-.2344137281179428,-.11588984727859497,-.0028513811994343996,.11152822524309158,-.00972827896475792,-.04480841010808945,.10850989073514938,-.03282381594181061,-.16796381771564484,.0028977172914892435,.06378869712352753,.18153640627861023,.1037060096859932,.1431484818458557,.014933670870959759,-.08160850405693054,.06447165459394455,-.1724548488855362,.033184219151735306,.11251379549503326,.14740708470344543,.02497568354010582,-.006166308186948299,-.15187877416610718,.022761451080441475,.059064216911792755,-.11911637336015701,.038058869540691376,.11827478557825089,-.08706231415271759,-.030524758622050285,-.034197933971881866,.28459474444389343,.06479883193969727,-.03866346925497055,-.14552170038223267,.1674053966999054,-.09204217046499252,-.10693716257810593,-.011508866213262081,-.12405430525541306,-.13285328447818756,-.26457563042640686,.03269564360380173,.4386635422706604,.0667700245976448,-.19008369743824005,.013254787772893906,-.04207830876111984,-.0012834618100896478,.1194072812795639,.06330221891403198,-.0245205145329237,.009209559299051762,-.14470022916793823,.01017698459327221,.2154785543680191,-.057254303246736526,.009101584553718567,.1265745460987091,-.019827816635370255,.07043848931789398,.03898271545767784,-.0019643292762339115,-.05130154639482498,.06761354953050613,-.11459698528051376,-.01720544323325157,.05663611367344856,-.027652673423290253,-.03136252611875534,.11689616739749908,-.11652730405330658,.07755789160728455,-.05369782820343971,-.022063814103603363,-.0044013760052621365,.0034463712945580482,-.09890096634626389,-.08381007611751556,.1136760488152504,-.18453554809093475,.18993349373340607,.2220904380083084,.02317708171904087,.13563740253448486,.09226267039775848,.11069295555353165,.013316520489752293,-.026364095509052277,-.24678963422775269,-.1057654619216919,.10380346328020096,-.05933155491948128,.0716143548488617,.033046331256628036],[-.10023366659879684,.05855493247509003,.08263061195611954,-.048192162066698074,-.13639229536056519,-.029570449143648148,-.03287145867943764,-.1594170182943344,.15074074268341064,-.14586569368839264,.24780164659023285,-.11240537464618683,-.17304101586341858,-.1009892150759697,-.024776265025138855,.1974155753850937,-.16439670324325562,-.150570347905159,-.05043190345168114,.0014077179366722703,.049619778990745544,-.04277614504098892,-.029378477483987808,.029354974627494812,-.061669155955314636,-.4071614444255829,-.10255899280309677,-.10163000971078873,.03892526403069496,-.06680545955896378,-.09123396128416061,.07474034279584885,-.19847598671913147,-.10539679229259491,-.016155177727341652,.1014704778790474,-.009134016931056976,-.048619579523801804,.12843908369541168,-.03033815510571003,-.2173987478017807,-.00659674359485507,.041719235479831696,.15866145491600037,.09905235469341278,.10012144595384598,.07516954839229584,-.10697515308856964,.07560178637504578,-.18752412497997284,-.007207835093140602,.08277937024831772,.11891612410545349,.008572494611144066,.03166196867823601,-.14927950501441956,-.003958683926612139,.02674977295100689,-.12909388542175293,.02218337543308735,.10778947919607162,-.08422328531742096,-.0585281066596508,-.0752919390797615,.29665789008140564,.10189247131347656,-.054016754031181335,-.12354424595832825,.19232669472694397,-.09306874126195908,-.06423652172088623,.020468736067414284,-.10971624404191971,-.13767965137958527,-.27517396211624146,.028738651424646378,.450686514377594,.06734982132911682,-.1877089887857437,.0142097482457757,-.10083332657814026,.0209348164498806,.11635349690914154,.07965113967657089,-.012771881185472012,.026040762662887573,-.11252084374427795,-.008310040459036827,.2076006382703781,-.0961291715502739,.04159477353096008,.13915078341960907,-.01418263278901577,.0967273935675621,-.004591980017721653,-.020287368446588516,-.0706409215927124,.056475501507520676,-.09862032532691956,.00018034348613582551,.06699784100055695,.015244491398334503,.0045787375420331955,.10602940618991852,-.1276358664035797,.05530264601111412,-.04018186032772064,-.03146433085203171,.026989417150616646,.014883545227348804,-.08829617500305176,-.10754133015871048,.11562233418226242,-.21022632718086243,.13670317828655243,.18530160188674927,-.023385383188724518,.12815417349338531,.09001725167036057,.11357145011425018,-.0016669841716066003,-.0217596422880888,-.2272915244102478,-.043800756335258484,.13607542216777802,-.04372505843639374,.005380299873650074,-.0017505497671663761]]},{label:"ViceMayorMichelle",descriptors:[[-.15288223326206207,.05102980136871338,.019202610477805138,-.04130754992365837,-.09785286337137222,.0013429682003334165,.048922136425971985,-.18646684288978577,.20100538432598114,-.14032097160816193,.25753721594810486,-.06053691729903221,-.3078363835811615,-.016028236597776413,-.01777982898056507,.23144443333148956,-.11054675281047821,-.18439756333827972,-.09158883988857269,-.013675497844815254,.057733651250600815,-.05984773486852646,-.003700684756040573,.05161038041114807,-.06571550667285919,-.3551384210586548,-.08155298233032227,-.0787942036986351,-.012042837217450142,-.021142328158020973,-.03962869569659233,.06778283417224884,-.19198332726955414,-.04088699817657471,.050234969705343246,.10145596414804459,-.02630995772778988,-.12516717612743378,.1840401440858841,-.012048641219735146,-.24629905819892883,-.034183114767074585,.013600368984043598,.1877559870481491,.10405059903860092,.01642633229494095,.019863056018948555,-.1279899775981903,.03697732463479042,-.22379983961582184,.010903500951826572,.059430744498968124,.04034858196973801,.0387725904583931,.05277489125728607,-.2339688241481781,.03775333613157272,.09530265629291534,-.1829817146062851,-.03303825110197067,.041042737662792206,-.12337779253721237,-.09523633122444153,-.10778459906578064,.26173266768455505,.1583259254693985,-.1332511305809021,-.08572956919670105,.21232955157756805,-.06617829948663712,-.021780934184789658,.019736768677830696,-.14066652953624725,-.2165127694606781,-.24276964366436005,.027975117787718773,.4748821556568146,.12442336231470108,-.25278618931770325,.008614420890808105,-.023266324773430824,.06605014204978943,.15271435678005219,.1334269493818283,.019400129094719887,.005056572612375021,-.09558653086423874,-.04635006561875343,.16488711535930634,-.02840784750878811,-.058473534882068634,.2174377739429474,-.05023057013750076,.01956600695848465,.05440148338675499,.060111433267593384,-.041713647544384,-.03146011009812355,-.16921129822731018,-.08725456893444061,.04015859588980675,-.02358701266348362,-.03545559570193291,.0959850624203682,-.1619146317243576,.06766887754201889,.008565441705286503,-.004420453682541847,.0014007482677698135,-.027941929176449776,-.040970392525196075,-.0071223434060812,.08375859260559082,-.2811093330383301,.20141953229904175,.18469715118408203,-.02696794643998146,.17699231207370758,.057256679981946945,.05385131016373634,.01752559468150139,-.04881327599287033,-.2422681450843811,-.08092359453439713,.11919863522052765,.014546920545399189,.05389869213104248,.0032279121223837137],[-.08836595714092255,.02055630460381508,.057355884462594986,-.04920909181237221,-.15997213125228882,.05788257718086243,.01410295907407999,-.14225471019744873,.12726657092571259,-.12080281227827072,.24068386852741241,-.07685926556587219,-.3232063353061676,-.05949300155043602,.012368728406727314,.18276916444301605,-.015686748549342155,-.14511895179748535,-.11046343296766281,-.02595183067023754,.026576634496450424,-.04869501292705536,.02751569263637066,.010295342653989792,-.15277858078479767,-.3610122799873352,-.07978062331676483,-.05980289354920387,-.11584816873073578,-.060180578380823135,-.03775864467024803,.15090033411979675,-.18750886619091034,-.03169885277748108,.04935922101140022,.11531034857034683,-.08723647147417068,-.050809431821107864,.14335058629512787,-.027474740520119667,-.1990543156862259,-.0781756117939949,.03134935349225998,.14480656385421753,.14376194775104523,.06439109146595001,.042488791048526764,-.10674732178449631,.07819745689630508,-.2885896861553192,.05566002056002617,.1036432534456253,-.02236468717455864,.09051157534122467,.07766540348529816,-.17310884594917297,.04447561129927635,.13023407757282257,-.1586342751979828,-.016645733267068863,-.002853294601663947,-.12607766687870026,-.12448228895664215,-.1381566971540451,.25934699177742004,.1680869609117508,-.10823994874954224,-.11886798590421677,.1882922351360321,-.09558750689029694,-.05675654858350754,.05404839292168617,-.16261233389377594,-.2170296311378479,-.2714725732803345,.043027523905038834,.41134095191955566,.13089877367019653,-.24079416692256927,-.00889289565384388,-.021335342898964882,.048550087958574295,.11350023746490479,.06406956911087036,.0311189666390419,-.016240982338786125,-.061154816299676895,-.03929498791694641,.20296108722686768,-.09519228339195251,-.024967001751065254,.24397751688957214,-.0327928252518177,.03602040559053421,.07845144718885422,.04523472115397453,-.0417058989405632,-.020328979939222336,-.16963250935077667,-.053229931741952896,.052765339612960815,-.07283440977334976,-.027614561840891838,.06515470147132874,-.16187754273414612,.14282476902008057,-.04242995008826256,.012802411802113056,-.0015049228677526116,-.10334963351488113,-.09094743430614471,-.018062664195895195,.13564710319042206,-.299575537443161,.1933351755142212,.15709826350212097,-.03351758047938347,.17107146978378296,.07455331087112427,.10789541900157928,-.000711115775629878,-.03549402952194214,-.19364604353904724,-.07589396834373474,.15736010670661926,.0006453220848925412,-.022178657352924347,-.004812135361135006]]},{label:"MayorEdgar",descriptors:[[-.056452102959156036,.11566650867462158,.033904097974300385,-.018325023353099823,-.024887077510356903,-.015203642658889294,-.06348247826099396,-.11757565289735794,.10742194950580597,-.018005074933171272,.2521412670612335,-.026872605085372925,-.17356380820274353,-.15288729965686798,-.03559239208698273,.1656852513551712,-.1803707480430603,-.08043237775564194,-.14654763042926788,.023209644481539726,.02348729409277439,-.04583713412284851,.067642442882061,-.006141480058431625,-.13481107354164124,-.3559044301509857,-.08896926045417786,-.07795798778533936,.003844283288344741,-.0822659432888031,-.09258720278739929,-.012861142866313457,-.24194571375846863,-.09432648867368698,-.03881116583943367,.06673160195350647,-.03233978524804115,-.03637717291712761,.179891899228096,.06467936187982559,-.2287970632314682,.0610220693051815,-.0068621025420725346,.24841824173927307,.2084478735923767,.12647008895874023,.023711826652288437,-.0276504959911108,.11886153370141983,-.19874846935272217,.062457676976919174,.09590621292591095,.07460761815309525,.05871226638555527,.0016038089524954557,-.10656490176916122,.0006669408176094294,.15130873024463654,-.12176679074764252,-.034432169049978256,-.002519019413739443,-.0890696793794632,-.034889306873083115,-.034747250378131866,.25531619787216187,.15195858478546143,-.09234599769115448,-.10500232875347137,.1257009208202362,-.051728080958127975,-.044500675052404404,.03870195522904396,-.11213064193725586,-.14171944558620453,-.36565878987312317,.06303028017282486,.3844296336174011,.037832122296094894,-.21275635063648224,-.047712381929159164,-.07826072722673416,.01862030290067196,.1409776657819748,.09133175760507584,-.033829279243946075,.05611691623926163,-.11449741572141647,-.019277401268482208,.2202121615409851,-.07416747510433197,-.038315266370773315,.19873785972595215,-.026866279542446136,.06840017437934875,-.011701214127242565,.0407092422246933,-.05555925890803337,.06237354502081871,-.1009797751903534,.005927425343543291,.1619374305009842,.024767452850937843,-.010790436528623104,.10453330725431442,-.14743317663669586,.0688689723610878,.0397193618118763,.03114611841738224,.06733693927526474,-.04190279543399811,-.06551732867956161,-.08881799876689911,.10371357947587967,-.2589646279811859,.22472034394741058,.2158202826976776,-.04473242536187172,.0743929073214531,.11098595708608627,.03562937304377556,-.0253731831908226,.011445428244769573,-.21372251212596893,-.05103710666298866,.13787168264389038,.01810162514448166,.07110828906297684,.006700236350297928],[-.051512815058231354,.14769279956817627,-.0057271807454526424,-.012931418605148792,-.008087019436061382,-.043582990765571594,-.07095710188150406,-.1704574078321457,.08883126825094223,-.010963195003569126,.22564420104026794,-.058625318109989166,-.17173027992248535,-.15771903097629547,-.023833129554986954,.16290810704231262,-.1654185801744461,-.11520546674728394,-.13149972259998322,.03860366716980934,.06209832802414894,-.014361619018018246,.05540565773844719,.059678684920072556,-.12323348969221115,-.3177846074104309,-.08477550745010376,-.1333848387002945,-.002497229492291808,-.08146718889474869,-.14888924360275269,-.04789458215236664,-.22881586849689484,-.12819188833236694,.009743881411850452,.03530243784189224,-.021171310916543007,-.06391172856092453,.1790623664855957,.03668094053864479,-.2499493658542633,.06945259124040604,.018427206203341484,.22471509873867035,.226890429854393,.12951554358005524,.005762792192399502,-.08064223825931549,.1348446160554886,-.1683778017759323,.10911200940608978,.11085741221904755,.09208392351865768,.055522721260786057,.008533140644431114,-.12646576762199402,.004050425253808498,.14287813007831573,-.15943892300128937,-.0113585339859128,.05471126735210419,-.08718102425336838,-.023509927093982697,-.038481827825307846,.23779739439487457,.140361025929451,-.09645354747772217,-.10258592665195465,.1409844160079956,-.07520604133605957,-.07033565640449524,.02346387691795826,-.12016847729682922,-.17029394209384918,-.3568456470966339,.059553176164627075,.3652627468109131,.09985388070344925,-.21694113314151764,-.004851156380027533,-.08160076290369034,.056758131831884384,.15949676930904388,.09630554914474487,-.01075909473001957,.021934982389211655,-.09630908071994781,-.037154633551836014,.1985017955303192,-.04815559834241867,-.04563729092478752,.22243967652320862,-.0635087639093399,.05019291117787361,.013591413386166096,.05898188427090645,-.06690629571676254,.051231060177087784,-.07953057438135147,.008546868339180946,.14097964763641357,.03296404704451561,.00964381080120802,.14985013008117676,-.14894850552082062,.030757760629057884,.012694734148681164,.0561637319624424,.06984228640794754,-.0320310965180397,-.05991298332810402,-.10532723367214203,.07171490043401718,-.24786895513534546,.23956356942653656,.16738608479499817,-.027073102071881294,.06690854579210281,.09878372400999069,.048603471368551254,.0051339962519705296,-.02695484273135662,-.26839539408683777,-.05672130361199379,.18677553534507751,.03988512232899666,.0943928062915802,.02372572012245655]]},{label:"ViceMayorMark",descriptors:[[-.14103145897388458,.06356407701969147,.038845598697662354,.025996258482336998,-.06812422722578049,-.008106675930321217,.014216706156730652,-.08186989277601242,.03717191517353058,-.055786166340112686,.23930181562900543,-.08659721910953522,-.2270892709493637,-.17454451322555542,.03984660655260086,.13676200807094574,-.14723749458789825,-.10248294472694397,-.04821188002824783,-.04078248515725136,-.004246005788445473,.0019851699471473694,.05882764980196953,.0455673485994339,-.07626191526651382,-.39298152923583984,-.019397161900997162,-.15624965727329254,.004770725965499878,-.0763564333319664,.006787421181797981,.09202589839696884,-.1673191636800766,-.03849584609270096,.022221660241484642,.11007968336343765,-.008452105335891247,.00851034838706255,.18941284716129303,.018110163509845734,-.20204733312129974,-.09846588969230652,.006638901308178902,.2931332290172577,.12929844856262207,.09801298379898071,-.008472269400954247,.002525736577808857,.07783310115337372,-.23730848729610443,.006769119296222925,.10362058877944946,.12691830098628998,-.018656166270375252,.028752045705914497,-.150835320353508,.062192004173994064,.03977596014738083,-.21801970899105072,.03260907158255577,-.020647475495934486,-.11269677430391312,.010977455414831638,-.004423018544912338,.33973947167396545,.04560505598783493,-.1082293763756752,-.06766187399625778,.13208185136318207,-.10602966696023941,-.019997484982013702,.16727496683597565,-.10353986918926239,-.22904066741466522,-.2597389221191406,.04939791187644005,.4557316303253174,.12116994708776474,-.19378754496574402,-.025729427114129066,-.11064154654741287,-.040607139468193054,.1510835438966751,.1313018649816513,-.028718475252389908,.0071989321149885654,-.12321928143501282,-.04747754707932472,.18119491636753082,-.058471716940402985,-.11209555715322495,.1951463520526886,-.04257915914058685,.053570788353681564,.009228195063769817,-.05290784686803818,-.028758658096194267,.039115216583013535,-.07937691360712051,-.09695030748844147,.08258523046970367,-.0978894904255867,.0068403310142457485,.06675631552934647,-.20913998782634735,.07473940402269363,-.001479352475143969,-.007416056003421545,.0437656044960022,-.022385284304618835,-.11007675528526306,-.03449200838804245,.15167540311813354,-.3359624445438385,.20414263010025024,.21980483829975128,.011197284795343876,.1735709011554718,.08419788628816605,.03438868001103401,.006763767916709185,-.0742870345711708,-.14604894816875458,-.05593010410666466,.13938261568546295,-.03919102996587753,.09655999392271042,-.03688811883330345],[-.10056176036596298,-.009919966571033001,.05364853888750076,.025902042165398598,-.1134161651134491,-.02331392467021942,-.029075147584080696,-.12187208980321884,.09603696316480637,-.12542212009429932,.20611707866191864,-.03658903017640114,-.20995120704174042,-.12345103174448013,-.007854383438825607,.12286695837974548,-.10270640254020691,-.09342898428440094,-.07954510301351547,-.054058924317359924,.059254154562950134,-.05061836540699005,.043009210377931595,.06256578117609024,-.05670487880706787,-.32923439145088196,-.06518900394439697,-.11704620718955994,-.00029351009288802743,-.077019602060318,-.04792790859937668,.05149077624082565,-.1627875566482544,-.06399651616811752,-.07107096910476685,.10798671841621399,.018762808293104172,-.05612839758396149,.12815077602863312,-.028540397062897682,-.19769927859306335,-.04413904994726181,-.01865673065185547,.2059408277273178,.18418359756469727,.06014575809240341,.008597386069595814,-.04416482895612717,.11955258995294571,-.2648243010044098,.007621618919074535,.041359271854162216,.12143521010875702,-.0088149793446064,.05905000492930412,-.13705705106258392,.09328468143939972,.0759400874376297,-.17181843519210815,.033213935792446136,-.025018401443958282,-.11553573608398438,.024052225053310394,.03652277588844299,.2994575500488281,.1297137588262558,-.0577116422355175,-.07771134376525879,.1127736046910286,-.1444855034351349,-.03678441792726517,.12045975774526596,-.10234435647726059,-.1674838364124298,-.3085160553455353,.0323786698281765,.5226020216941833,.07810042053461075,-.207962766289711,-.009483758360147476,-.10617364943027496,.0011394013417884707,.2101394087076187,.07993220537900925,-.03924131393432617,-.04496623948216438,-.1836569905281067,-.016099045053124428,.21060077846050262,-.06642349809408188,-.06513233482837677,.2098894715309143,.01166575402021408,.05466707795858383,.05210087448358536,.046018101274967194,-.03104795701801777,.07250597327947617,-.06333436071872711,-.024733150377869606,.14468801021575928,-.07034201920032501,.019072161987423897,.0349726639688015,-.17619012296199799,.026003841310739517,-.03200560063123703,.010563240386545658,.08581102639436722,-.07040179520845413,-.13777941465377808,-.033011339604854584,.1434985101222992,-.29868024587631226,.1451207846403122,.18213781714439392,-.020199060440063477,.15083818137645721,.048392076045274734,.06923183798789978,-.015482882037758827,-.07770668715238571,-.14079461991786957,-.0014859632356092334,.11914234608411789,-.026731368154287338,.04282486066222191,.00542818196117878]]},{label:"MayorEric",descriptors:[[-.13810911774635315,.0986228957772255,.04715966433286667,.019594144076108932,-.07188862562179565,-.03037162311375141,-.03663930669426918,-.10538691282272339,.0979975014925003,-.03957952931523323,.25880980491638184,-.10304593294858932,-.20632770657539368,-.21681150794029236,-.024405499920248985,.18186737596988678,-.18396006524562836,-.1391124129295349,-.03857278823852539,.01617615669965744,.052884433418512344,-.09398499876260757,.01583009958267212,.08652258664369583,-.07161781191825867,-.40731021761894226,-.07080608606338501,-.15158727765083313,.047486789524555206,-.07361440360546112,-.11425703763961792,.0414060577750206,-.1829841434955597,-.11425221711397171,-.026486700400710106,.12319684028625488,.011064776219427586,-.0018393384525552392,.14816029369831085,-.1063111424446106,-.24318073689937592,.03733043745160103,.05502534657716751,.22324135899543762,.16532237827777863,.09415724128484726,.06198285520076752,-.11748212575912476,.09536532312631607,-.14530591666698456,.05978650972247124,.1527554839849472,.11975343525409698,.023423487320542336,.007936193607747555,-.1777336746454239,-.01980159431695938,.07420206069946289,-.15657085180282593,.01026267372071743,.053634896874427795,-.03607892990112305,-.039294131100177765,-.08343362808227539,.25263509154319763,.0935664102435112,-.1217196136713028,-.17899323999881744,.20448733866214752,-.12788628041744232,-.038858022540807724,.08070340752601624,-.12286502867937088,-.17679493129253387,-.34862250089645386,.059843502938747406,.43492358922958374,.07569889724254608,-.22389064729213715,.038100749254226685,-.12532944977283478,-.030445175245404243,.09652505069971085,.14262376725673676,-.005963893141597509,.024742593988776207,-.15675877034664154,-.03445355221629143,.14524470269680023,-.03863121569156647,.010746313259005547,.11755448579788208,.021225251257419586,.07527543604373932,.019329950213432312,.07718628644943237,-.10162734985351562,.0805542841553688,-.16114960610866547,.001973607111722231,.03537047281861305,-.025496840476989746,-.028605522587895393,.06851253658533096,-.11900468915700912,.11827487498521805,.04066837206482887,.02678026631474495,-.009477228857576847,-.003017632057890296,-.07397506386041641,-.04317210242152214,.13065214455127716,-.2709309458732605,.21237608790397644,.1639278531074524,.07455874234437943,.14615295827388763,.13158047199249268,.11039581894874573,-.004717486910521984,-.07690950483083725,-.25262054800987244,-.031097525730729103,.09809781610965729,-.08124110102653503,.05499285086989403,.046124402433633804],[-.1480143964290619,.17539763450622559,.05755634605884552,-.01582779362797737,-.07759691029787064,-.029232589527964592,-.020769383758306503,-.07304666936397552,.09670364856719971,-.005047967191785574,.2856743037700653,-.05427734553813934,-.22329466044902802,-.23289084434509277,.001503843697719276,.17480652034282684,-.19909057021141052,-.12493493407964706,-.05301355943083763,.009364998899400234,.05637509003281593,-.03304349258542061,.029619304463267326,.07762988656759262,-.047613535076379776,-.46773800253868103,-.05806277319788933,-.10578401386737823,.07350217550992966,-.08442544937133789,-.07905733585357666,.04095814377069473,-.19617150723934174,-.13255706429481506,-.011824102140963078,.11851725727319717,-.017753487452864647,.015205486677587032,.12846559286117554,-.008818188682198524,-.20385023951530457,-.005886779632419348,.042792610824108124,.2641889750957489,.19607073068618774,.09353582561016083,.052078794687986374,-.06658188253641129,.06553059071302414,-.1670953780412674,.02330225706100464,.13965660333633423,.13653653860092163,.02455705963075161,.009042338468134403,-.17617258429527283,-.02851995639503002,.07642441242933273,-.20904511213302612,-.016608592122793198,.008007582277059555,-.10128658264875412,-.07728350907564163,-.052932292222976685,.2513710856437683,.09226227551698685,-.11853291094303131,-.18507502973079681,.17411357164382935,-.11019504070281982,-.0180334635078907,.0876375362277031,-.10739430785179138,-.14337538182735443,-.32419735193252563,.10362855345010757,.4367116093635559,.06342003494501114,-.21576964855194092,-.008050424046814442,-.10649026930332184,-.039155591279268265,.0768989846110344,.1277046799659729,-.0443355068564415,.0004799769085366279,-.172703817486763,-.02208251878619194,.07009134441614151,-.03532533720135689,-.008623427711427212,.1356039047241211,.0012299716472625732,.12770166993141174,.03827556595206261,.06033169478178024,-.14087285101413727,.09328238666057587,-.14738599956035614,-.03789751976728439,.030902255326509476,-.0400436706840992,-.013162486255168915,.0730520486831665,-.07287817448377609,.09681719541549683,.04091066122055054,.014762752689421177,.003329099854454398,-.01692277006804943,-.07193435728549957,-.11130768805742264,.10081520676612854,-.2530043125152588,.20127810537815094,.19750314950942993,.011437300592660904,.15858528017997742,.13835397362709045,.09250032901763916,.00024079268041532487,-.05631178990006447,-.19060231745243073,-.006472000386565924,.09729041159152985,-.0849192887544632,.03840949386358261,-.028421686962246895]]},{label:"ViceMayorThaddeus",descriptors:[[-.09165331721305847,.06289983540773392,.028220077976584435,-.057731062173843384,-.06912122666835785,-.03212646767497063,-.044536568224430084,-.10724478960037231,.10010810941457748,-.07176034897565842,.22224166989326477,-.08911053836345673,-.10642404109239578,-.1635841727256775,.07453364133834839,.16549083590507507,-.12467991560697556,-.16436345875263214,-.05340644344687462,-.030450260266661644,.02466893009841442,-.017478041350841522,.030191875994205475,.007772265467792749,-.09419029951095581,-.3332732915878296,-.08469991385936737,-.09055659174919128,.047081563621759415,-.031345248222351074,-.09275300800800323,.013845503330230713,-.1831875592470169,-.10692895203828812,.04207676276564598,.16071286797523499,-.04403386265039444,-.09829860180616379,.12112603336572647,-.012122003361582756,-.16598017513751984,-.015717582777142525,.03525032848119736,.2712288200855255,.1586104929447174,.07653848826885223,.05796071141958237,-.08884134143590927,.10998322069644928,-.1481011062860489,.10396691411733627,.062182676047086716,.07953301817178726,.06061000004410744,.04233485832810402,-.11131816357374191,.06164652854204178,.12749339640140533,-.13671347498893738,-.015000402927398682,.06236054003238678,-.0026435425970703363,-.050134845077991486,-.11578425019979477,.2968014180660248,.14658695459365845,-.06262923777103424,-.15648168325424194,.1248733401298523,-.040949415415525436,-.13642404973506927,-.012819105759263039,-.1672237366437912,-.12047331035137177,-.3226158618927002,.028919797390699387,.33716902136802673,.04301515966653824,-.218153178691864,.01720871403813362,-.004063555970788002,.05147888883948326,.1649957150220871,.11372523754835129,-.020401500165462494,.036124035716056824,-.10844919830560684,-.03256669640541077,.2118379920721054,-.10426060855388641,-.04234492406249046,.09672089666128159,-.019822273403406143,.024322088807821274,.034451570361852646,.02423730306327343,-.03227904811501503,.10935032367706299,-.15163521468639374,-.03484845533967018,.12826095521450043,-.016910025849938393,-.01607355661690235,.13799747824668884,-.19475099444389343,.10846772789955139,.036253947764635086,.027042372152209282,.04164343327283859,-.05125502124428749,-.06138685345649719,-.06352674961090088,.08647312968969345,-.22374936938285828,.16559721529483795,.2094046026468277,.030158406123518944,.14871497452259064,.08733492344617844,.08829042315483093,.009513807483017445,.021022023633122444,-.23676374554634094,-.011061460711061954,.08602184057235718,.07091964036226273,.0018976936116814613,.08503390848636627],[-.12754206359386444,.04792492464184761,.024844447150826454,-.07307539135217667,-.10405220836400986,-.05208229273557663,-.05013071373105049,-.11126447468996048,.10427506268024445,-.07857033610343933,.212206169962883,-.077603280544281,-.10213426500558853,-.12593066692352295,.041304364800453186,.1357206255197525,-.13884636759757996,-.15108579397201538,-.0564764104783535,-.015887150540947914,.05826181918382645,-.003774354699999094,.016193518415093422,.028325598686933517,-.0556630901992321,-.3580860197544098,-.0752735435962677,-.08178532123565674,.03648318722844124,-.01716693677008152,-.06329946219921112,.00456993468105793,-.2005431354045868,-.10713817179203033,.030167201533913612,.16857005655765533,-.03861350193619728,-.04602522403001785,.13030940294265747,-.024371465668082237,-.20452246069908142,.013788175769150257,.023708131164312363,.2686893343925476,.17565099895000458,.10742098838090897,.03666448965668678,-.10108530521392822,.10247917473316193,-.1298261284828186,.11711963266134262,.09042001515626907,.1111561581492424,.013580569066107273,.03509032353758812,-.10965250432491302,.02599927969276905,.12539871037006378,-.10813651233911514,-.002007927978411317,.09089744836091995,-.03702891990542412,-.023372173309326172,-.13450972735881805,.28073811531066895,.09304938465356827,-.07553919404745102,-.15039363503456116,.12506556510925293,-.0502840131521225,-.132603257894516,.008773721754550934,-.16307662427425385,-.12504254281520844,-.3119339644908905,.04067835956811905,.39120766520500183,.029674649238586426,-.19826321303844452,.004151258151978254,-.04996587336063385,.03178538754582405,.1385112851858139,.0984610840678215,-.015439153648912907,.00495425658300519,-.11748182773590088,-.020381493493914604,.21455013751983643,-.08993589878082275,-.027479808777570724,.10733780264854431,-.0274164080619812,.02616407722234726,.0011372579028829932,.02269725129008293,-.050954654812812805,.13047349452972412,-.1287013292312622,-.03499634563922882,.11419487744569778,-.03438286855816841,.0023008936550468206,.14083318412303925,-.21693119406700134,.10355246067047119,.01245921291410923,.041918233036994934,.06336887925863266,-.026595380157232285,-.08135520666837692,-.0811915323138237,.109938845038414,-.2116764634847641,.1817309707403183,.2078831046819687,.05485805496573448,.14864887297153473,.09452171623706818,.08699942380189896,.010029652155935764,.01831418089568615,-.2705560028553009,-.0029711781535297632,.08571425080299377,.062026552855968475,.033493321388959885,.09666302055120468]]},{label:"MayorMeraluna",descriptors:[[-.051319316029548645,-.0013685878366231918,.060395497828722,-.059323500841856,-.04130427539348602,-.050477463752031326,.008279306814074516,-.18910053372383118,.21903425455093384,-.09104934334754944,.2045728713274002,-.03674092888832092,-.232656329870224,-.07281599938869476,-.06290459632873535,.19466537237167358,-.1681201010942459,-.1540364772081375,-.1218746080994606,.014559637755155563,-.01271117851138115,-.013518036343157291,.0400613397359848,-.018337439745664597,-.07550713419914246,-.3679245114326477,-.10844644904136658,-.03229469805955887,-.014137700200080872,.008495429530739784,-.040696289390325546,.14038711786270142,-.2263314425945282,-.06649591773748398,.044822245836257935,.06103164702653885,-.029182221740484238,-.13650663197040558,.14470738172531128,-.02927718497812748,-.2887546420097351,-.00016699418483767658,.014938211999833584,.20423166453838348,.14766427874565125,.009070223197340965,.022388016805052757,-.15618346631526947,.09841520339250565,-.162948340177536,-.012317433953285217,.14462947845458984,-.015281054191291332,.02877405285835266,-.02674691751599312,-.14832401275634766,.008586163632571697,.16981041431427002,-.15758740901947021,-.07081007212400436,.06942637264728546,-.07304775714874268,-.07862972468137741,-.15772853791713715,.1860015094280243,.14444708824157715,-.13181045651435852,-.1822817027568817,.14786145091056824,-.1080353781580925,.005786583758890629,.026105063036084175,-.2024669200181961,-.2040138989686966,-.27809906005859375,-.01561372447758913,.4088761806488037,.0399637445807457,-.1344505399465561,.03293574973940849,-.0950634628534317,.0684037134051323,.09580410271883011,.13100366294384003,-.008463972248136997,.07160758972167969,-.045266292989254,-.03990616649389267,.22312654554843903,-.04306885227560997,-.04868320748209953,.18687942624092102,-.0695275217294693,-.025620752945542336,-.016983941197395325,.006803795695304871,-.03050338290631771,.05767442286014557,-.16716375946998596,-.012461978942155838,.038184795528650284,-.0055417250841856,.007654889952391386,.13099850714206696,-.14011721312999725,.1047939658164978,.04182669147849083,.06939499080181122,.1260950267314911,-.048497095704078674,-.02604108303785324,-.12309317290782928,.11244136840105057,-.2426636517047882,.19088125228881836,.16904854774475098,.06187698245048523,.134287491440773,.03749104216694832,.11759009957313538,-.05929030478000641,.02065427228808403,-.2388841211795807,-.0018029126804322004,.1323634386062622,.023418469354510307,.0484866164624691,-.023917214944958687],[-.018800897523760796,.09953024238348007,.05344002693891525,-.03175414726138115,-.09514809399843216,-.02216869778931141,-.039413198828697205,-.16297151148319244,.17604729533195496,-.05938619747757912,.2157919555902481,-.0761449858546257,-.23120927810668945,-.02502201870083809,-.01686890982091427,.22467370331287384,-.1638568937778473,-.17148169875144958,-.10445810109376907,.015517577528953552,.0806613489985466,-.016886871308088303,.026844456791877747,.06459487974643707,-.05401314049959183,-.35298609733581543,-.09487395733594894,-.04518065229058266,.06606288254261017,-.07525034993886948,-.09017842262983322,.040127530694007874,-.23972049355506897,-.10962013155221939,.019912131130695343,.05325869843363762,-.05374865606427193,-.2144986093044281,.1880037635564804,-.02636665478348732,-.25390902161598206,.06698204576969147,.015366395935416222,.19101504981517792,.15822680294513702,.03402705118060112,.04002493992447853,-.19150790572166443,.09898538142442703,-.21513372659683228,-.04003898799419403,.17992116510868073,-.009758158586919308,.0379817932844162,-.05257921293377876,-.10267513990402222,.048893317580223083,.16383950412273407,-.23451650142669678,-.04375865310430527,.12130536139011383,-.06991875916719437,-.06500072032213211,-.1930616945028305,.24443840980529785,.15925072133541107,-.07818462699651718,-.16674283146858215,.13396553695201874,-.09940043091773987,-.08203000575304031,-.006211905274540186,-.15236401557922363,-.1792089343070984,-.2548074722290039,-.021699650213122368,.41552984714508057,.07565341889858246,-.17426437139511108,.11638133972883224,-.09745790809392929,.0482078455388546,.09536563605070114,.08858794718980789,-.012888142839074135,.0303041934967041,-.08413431793451309,.010055029764771461,.24450616538524628,-.06401167809963226,.055062420666217804,.22671230137348175,-.020633360370993614,.02413358725607395,.03931836411356926,.03289800137281418,-.0766722708940506,.04538062959909439,-.16812922060489655,-.03308386355638504,.04225364699959755,.01779419369995594,.04218846186995506,.11866521835327148,-.16790463030338287,.10473911464214325,.0029245305340737104,.032129835337400436,.11909949034452438,-.06669476628303528,-.05366140604019165,-.09631031006574631,.1356676071882248,-.22841183841228485,.17345722019672394,.14749601483345032,.030128933489322662,.08588071912527084,.08053141087293625,.15182501077651978,-.0651063472032547,-.017799803987145424,-.3098702132701874,.005523816216737032,.1771038919687271,.0032137464731931686,.04302285611629486,.002290167147293687]]},{label:"ViceMayorReynante",descriptors:[[-.17798911035060883,.1251721829175949,.03676258400082588,.01677984744310379,.024444719776511192,-.023406537249684334,-.0016085261013358831,-.14818570017814636,.13388018310070038,-.051050007343292236,.21842049062252045,-.002913380041718483,-.20869846642017365,-.15039828419685364,-.005887152161449194,.12130815535783768,-.1778784543275833,-.1791601926088333,-.06074810028076172,-.07136417925357819,.008612342178821564,-.04992825537919998,.03140529990196228,-.009066810831427574,-.14245180785655975,-.36353328824043274,-.11517120897769928,-.07861708849668503,.006541628856211901,.027565237134695053,.007006341125816107,.046306122094392776,-.257654070854187,-.04699799045920372,.002576603787019849,.09634038060903549,.04271714761853218,.02816341631114483,.16909505426883698,-.0031841883901506662,-.10689082741737366,-.0025379310827702284,.0013843337073922157,.2958635687828064,.13151513040065765,.07743440568447113,.0021581617183983326,-.04820866137742996,.06258217990398407,-.21675384044647217,.028502438217401505,.145501971244812,.028515689074993134,.02340749278664589,.0557674802839756,-.1826135665178299,.043370965868234634,.030202357098460197,-.12753766775131226,-.023867987096309662,-.025594351813197136,-.07891227304935455,-.07220929116010666,-.051710471510887146,.2553747296333313,.09829431027173996,-.10513648390769958,-.11971060186624527,.13914598524570465,-.069613516330719,.026421094313263893,.03262748196721077,-.11631926149129868,-.1576208919286728,-.39665043354034424,.09704066067934036,.45466747879981995,.0797044038772583,-.19790750741958618,.07205386459827423,-.09830600023269653,.0513889379799366,.1563175618648529,.035833824425935745,-.11861026287078857,.04941907525062561,-.16995902359485626,.004437260329723358,.15727029740810394,.011774113401770592,-.10923352092504501,.12933753430843353,-.049684789031744,.08710136264562607,.05746607109904289,.04702812060713768,-.04829271510243416,-.01639370806515217,-.16533520817756653,.02031674049794674,.08700882643461227,-.02452799491584301,-.04003167524933815,.11803408712148666,-.14386945962905884,.04069127142429352,.049597740173339844,-.014627475291490555,-.04233658313751221,.014979463070631027,-.14737887680530548,-.039410531520843506,.08123144507408142,-.32508718967437744,.2001582384109497,.198234423995018,-.08209580183029175,.18305017054080963,.12027312815189362,.04322672262787819,-.0849386528134346,.030886441469192505,-.14807337522506714,-.08142852783203125,.07949738204479218,.020969446748495102,.05503387004137039,.02394474484026432],[-.14859524369239807,.09274732321500778,.03370633348822594,.03463229537010193,.03772926703095436,-.03635689616203308,-.03206075355410576,-.12317413836717606,.0983734056353569,-.05934034660458565,.24002951383590698,-.003674754872918129,-.24221917986869812,-.1801447570323944,-.048215605318546295,.12501928210258484,-.1444871425628662,-.15053138136863708,-.09340866655111313,-.0660628080368042,.03354061394929886,-.034830596297979355,.049403976649045944,-.06145396828651428,-.1278790533542633,-.37649762630462646,-.07000567764043808,-.03903225064277649,-.015116117894649506,.008168846368789673,.009693427942693233,.05057968199253082,-.23901048302650452,-.04795432090759277,.003702049143612385,.05226902663707733,.05921723321080208,.0389360673725605,.2178279608488083,-.015877587720751762,-.1366889923810959,-.0066569168120622635,.03783183917403221,.23967096209526062,.16919147968292236,.04157593846321106,-.0205189548432827,-.05956459417939186,.051773689687252045,-.21582967042922974,-.0033696091268211603,.18209053575992584,.02915765531361103,.053284358233213425,.032851431518793106,-.11815235018730164,.037703029811382294,.04096696525812149,-.16996555030345917,-.06480567902326584,-.035912878811359406,-.08877530694007874,-.08374962210655212,-.02643556334078312,.2070193588733673,.12221881002187729,-.07375465333461761,-.19283856451511383,.14391987025737762,-.12733152508735657,.009195621125400066,.03648809716105461,-.10754269361495972,-.14722822606563568,-.37381550669670105,.06100594997406006,.3572600781917572,.08767928928136826,-.18143612146377563,.10537939518690109,-.0775759294629097,.004171142354607582,.15676933526992798,-.0032570883631706238,-.08690190315246582,.04763723164796829,-.11127003282308578,-.004312424920499325,.15249377489089966,.024057535454630852,-.13093844056129456,.1267060935497284,-.035419661551713943,.06578940153121948,.1154647096991539,.04771283268928528,-.039509303867816925,-.008764825761318207,-.1788633018732071,.02684929035604,.0818839818239212,-.03904835134744644,.029801510274410248,.09004197269678116,-.09069444239139557,.050858274102211,-.0007696141838096082,.00945565477013588,-.001373216393403709,.020556816831231117,-.11327259242534637,-.05334189906716347,.07126756757497787,-.26749688386917114,.25761762261390686,.14973433315753937,-.062093351036310196,.14914213120937347,.13410989940166473,.06638203561306,-.08000773191452026,.06324940919876099,-.1143656075000763,-.09355887025594711,.040800683200359344,.01563490368425846,.10950155556201935,.008268662728369236]]},{label:"MayorMugot",descriptors:[[-.06756093353033066,.11797083914279938,.0715935155749321,.025094788521528244,-.0166911780834198,-.12113531678915024,-.048067573457956314,-.16628773510456085,.15477900207042694,.018390340730547905,.26307424902915955,-.031524233520030975,-.12570299208164215,-.15480156242847443,-.04082233086228371,.15974225103855133,-.2588503062725067,-.09605229645967484,-.015076052397489548,-.03295289725065231,.10432953387498856,-.03711741790175438,.03679189831018448,.08831032365560532,-.05677153915166855,-.2505498230457306,-.08432462811470032,-.1397763192653656,.13626646995544434,-.027868155390024185,-.07342245429754257,.010433544404804707,-.20762205123901367,-.15061642229557037,.036201465874910355,.03119761124253273,.03180059790611267,-.09875394403934479,.15153074264526367,-.058515917509794235,-.18271282315254211,.09086686372756958,-.0076486836187541485,.20318365097045898,.19061358273029327,.0980551615357399,.019673960283398628,-.18633772432804108,.14276672899723053,-.13300113379955292,.03198178485035896,.16234064102172852,.11017201840877533,.0039300196804106236,.02125956304371357,-.20070430636405945,.020328663289546967,.050634268671274185,-.2236052006483078,.020214324817061424,.037055641412734985,-.024033449590206146,.05232354626059532,-.05671795457601547,.1776277720928192,.11886537075042725,-.061066336929798126,-.17341232299804688,.1844179928302765,-.11982370913028717,-.05432713031768799,.08649107813835144,-.10455667227506638,-.17086032032966614,-.31044670939445496,.0037268383894115686,.40133899450302124,.05048227310180664,-.2399393916130066,.04405290260910988,-.10907851904630661,.003048569429665804,.1264452338218689,.10668797791004181,-.03857310861349106,-.008543828502297401,-.1496822088956833,-.08926532417535782,.18364578485488892,-.05985555425286293,-.03364895284175873,.2062046080827713,-.015580371953547001,.007931998930871487,.03968920186161995,.05597188323736191,-.09407759457826614,.10027257353067398,-.13512082397937775,-.04673837125301361,.0632331371307373,.0007240273407660425,.003770033363252878,.11213725805282593,-.1544523388147354,.015500156208872795,.01614236831665039,-.0023319250904023647,-.016017107293009758,-.0329895056784153,-.09111817926168442,-.06034274399280548,.13156667351722717,-.24244490265846252,.2879703938961029,.15617386996746063,.03309636935591698,.12798041105270386,.04796324670314789,.10314274579286575,-.022290004417300224,-.08096937090158463,-.12633173167705536,-.03862524405121803,.07859430462121964,-.030764225870370865,.049480583518743515,.01464642584323883],[-.06909739971160889,.12766480445861816,.05624140053987503,.005335443187505007,.0030592274852097034,-.05592891201376915,-.017331497743725777,-.16863861680030823,.18035940825939178,-.037667229771614075,.2790440320968628,-.027946947142481804,-.1440107822418213,-.1769775003194809,-.03232267498970032,.17509186267852783,-.21463701128959656,-.09687101095914841,-.02935032919049263,-.05894063413143158,.06422268599271774,-.07896067947149277,.06645242869853973,.09903696924448013,-.04130925238132477,-.27748382091522217,-.1522137075662613,-.13195842504501343,.09711075574159622,-.06767336279153824,-.07943066209554672,.015355158597230911,-.1564820408821106,-.09552741795778275,.027255911380052567,.016696155071258545,.0015462785959243774,-.06655391305685043,.1828034222126007,-.01763319782912731,-.11677826941013336,.007989596575498581,-.004697977565228939,.21695135533809662,.20230793952941895,.14919006824493408,-.007480792701244354,-.15159429609775543,.1407492756843567,-.15905261039733887,.019516967236995697,.19176985323429108,.06048162654042244,.03822861611843109,.011601411737501621,-.13529400527477264,.06707150489091873,.0444004088640213,-.187009796500206,-.004316035192459822,.01318548247218132,-.11947175860404968,-60994956584181637e-21,.0036857244558632374,.20487943291664124,.128839373588562,-.07360554486513138,-.12801970541477203,.1379418820142746,-.11830372363328934,-.025154437869787216,.06571559607982635,-.1432007998228073,-.17255540192127228,-.2983030080795288,.014275654219090939,.4835430681705475,.09484115242958069,-.16047078371047974,.022941116243600845,-.14677555859088898,.0032566324807703495,.14346279203891754,.0734851062297821,-.1142035573720932,-.07878055423498154,-.16363127529621124,-.050597552210092545,.16255825757980347,-.07736289501190186,-.025871669873595238,.17772606015205383,-.05594708397984505,.07454097270965576,-.0009800310945138335,.05033423751592636,-.07043366879224777,.08255898207426071,-.08254016935825348,-.05717625841498375,.07128327339887619,-.014502144418656826,.02158229611814022,.07302685081958771,-.2067800760269165,.00482525210827589,.03161557391285896,-.018911099061369896,.007226686924695969,-.03788238763809204,-.13758735358715057,-.05311078205704689,.12917888164520264,-.2581304609775543,.23119351267814636,.2043406069278717,.001779990503564477,.13472667336463928,.08110073953866959,.13017036020755768,-.058978788554668427,-.12278904765844345,-.08177574723958969,-.018238643184304237,.09826924651861191,.03064170852303505,.0600895993411541,-.043445784598588943]]},{label:"ViceMayorRudy",descriptors:[[-.13024814426898956,.07779505848884583,.0638790875673294,-.045859452337026596,-.04623488336801529,-.10131973028182983,-.04790134355425835,-.25326359272003174,.08613688498735428,-.12140846997499466,.2666339874267578,-.09804493933916092,-.16257183253765106,-.16676615178585052,-.010496852919459343,.13177673518657684,-.18618109822273254,-.18225254118442535,-.04074467718601227,-.005500766448676586,.08739300072193146,-.048466119915246964,.018258485943078995,.031335022300481796,-.09356533735990524,-.36087602376937866,-.1407608687877655,-.08701489120721817,-.022028038278222084,.006678588688373566,-.01617722027003765,.023512069135904312,-.19567622244358063,-.03462376818060875,.006900737062096596,.10572220385074615,.013813246972858906,-.08962313830852509,.1372431218624115,-.010496971197426319,-.18382441997528076,-.010664069093763828,.022926397621631622,.19041168689727783,.17521804571151733,.01722930744290352,.035783801227808,-.10916507989168167,.10334155708551407,-.1379135102033615,-.04924462363123894,.13275930285453796,.06723242998123169,.04069449007511139,.030916918069124222,-.08697834610939026,.05125518888235092,.08790962398052216,-.1754494458436966,.007324235513806343,.04450971260666847,-.15817809104919434,-.08558216691017151,-.06322566419839859,.20592035353183746,.11767315119504929,-.1263909637928009,-.13731694221496582,.12790930271148682,-.09656809270381927,-.09412074834108353,.05424189195036888,-.1561308205127716,-.19334664940834045,-.2972477674484253,.040207039564847946,.486233115196228,.05511846765875816,-.2045729011297226,.024441787973046303,-.05154916271567345,.03069698065519333,.16472621262073517,.14231657981872559,.01052306778728962,.007390812039375305,-.1364176869392395,.002205614233389497,.16434046626091003,-.06531494110822678,-.0448690727353096,.19491419196128845,-.08284648507833481,.10191890597343445,.024949796497821808,.06535578519105911,-.018342191353440285,.09385591745376587,-.056439220905303955,.01986357942223549,.10369564592838287,-.035737670958042145,-.00285206432454288,.05229863151907921,-.08457769453525543,.02674640715122223,.016553431749343872,.03212818130850792,.02432289533317089,-.06613089889287949,-.06685704737901688,-.06189809367060661,.061871275305747986,-.3053140640258789,.1765395700931549,.20600704848766327,-.039940934628248215,.15842968225479126,.06376755237579346,.08450069278478622,-.009083101525902748,-.042888790369033813,-.16409382224082947,-.046480149030685425,.05956245958805084,.07104504108428955,.022972552105784416,-.0371411070227623],[-.08887999504804611,.04787663370370865,.05967186018824577,-.04933880642056465,-.01656366139650345,-.11945180594921112,-.042633235454559326,-.24559476971626282,.08139801025390625,-.11815917491912842,.2576129138469696,-.07519973069429398,-.14576920866966248,-.22100132703781128,.017907552421092987,.1564413607120514,-.15169461071491241,-.1837301403284073,-.08141384273767471,-.0567697174847126,.04300571233034134,-.057715728878974915,.01511876005679369,.045687414705753326,-.08793879300355911,-.3607847988605499,-.1448655128479004,-.06921864300966263,.0030889525078237057,-.003330592066049576,-.06424827128648758,.047424059361219406,-.2566149830818176,-.05046740546822548,.00789555348455906,.133687362074852,.03216128796339035,-.10334918648004532,.13441024720668793,.0004424389044288546,-.15843817591667175,.016936585307121277,.020228706300258636,.17511828243732452,.19835710525512695,.0046786959283053875,.057007815688848495,-.09636776149272919,.12727563083171844,-.10871055722236633,-.029939735308289528,.13261114060878754,.06608826667070389,.04905322194099426,.008103370666503906,-.09851092100143433,.026976896449923515,.10163801908493042,-.13290196657180786,-.005203666631132364,.017087001353502274,-.18352541327476501,-.09835178405046463,-.09080857783555984,.2430756539106369,.1042698547244072,-.12324663251638412,-.1308107227087021,.16265517473220825,-.08974908292293549,-.05771660432219505,.019777100533246994,-.17660388350486755,-.1411028504371643,-.34081533551216125,.07670094817876816,.42750638723373413,.048825111240148544,-.23076972365379333,.04698110744357109,-.09714704006910324,.054201722145080566,.13962170481681824,.134403258562088,.022677382454276085,.03278807923197746,-.13480758666992188,.010563849471509457,.21797190606594086,-.052418988198041916,-.025459615513682365,.185842826962471,-.09644977748394012,.11517021059989929,.009279998950660229,.025043917819857597,-.031336311250925064,.0388215035200119,-.06781084835529327,.027473339810967445,.08504842966794968,-.04277880862355232,-.016230449080467224,.07503104209899902,-.09869988262653351,.020325835794210434,.020743271335959435,.031173087656497955,.017380598932504654,-.05874837189912796,-.07005023956298828,-.08828361332416534,.058604102581739426,-.2776629328727722,.220582976937294,.20870362222194672,-.014204371720552444,.14839434623718262,.06903554499149323,.11217324435710907,-.04019934684038162,-.0556100495159626,-.15909215807914734,-.03616403415799141,.08459799736738205,.06403917819261551,.03987917676568031,-.014296645298600197]]},{label:"MayorMercy",descriptors:[[-.09681292623281479,.10128223150968552,.04074469581246376,-.1318282186985016,-.11182913929224014,-.0503280907869339,-.13853812217712402,-.14991866052150726,.1411219835281372,-.19706670939922333,.18222779035568237,-.004792532417923212,-.1433786302804947,.00430339528247714,.026026105508208275,.2178557813167572,-.22429874539375305,-.16503962874412537,-.0976422131061554,-.08280941098928452,.017588092014193535,.0014027367578819394,.08285936713218689,.08749152719974518,-.10228872299194336,-.3134605288505554,-.1325521171092987,-.03351059556007385,.12374137341976166,-.03737717121839523,-.10338202118873596,-.033630724996328354,-.23265375196933746,-.0056870547123253345,.05570468679070473,.1335507482290268,-.04439030960202217,-.15313537418842316,.1479472517967224,-.0949082225561142,-.20444262027740479,-.018703604117035866,.06436054408550262,.17719677090644836,.21417206525802612,.03088890202343464,.018989883363246918,-.1030871793627739,.10999156534671783,-.18276093900203705,.1337420493364334,.07062763720750809,.04837854951620102,.06827668100595474,.05977345257997513,-.19683429598808289,.0648234635591507,.18550768494606018,-.15910539031028748,-.05096898600459099,.034757353365421295,-.07049692422151566,-.015025170519948006,-.07300776243209839,.2828158438205719,.21094514429569244,-.10391995310783386,-.2260870784521103,.1922767609357834,-.10136404633522034,.0041706738993525505,.03430604562163353,-.1420462727546692,-.10996348410844803,-.29145723581314087,-.0550873689353466,.4040765166282654,.12404956668615341,-.15832336246967316,.060122355818748474,-.04888938367366791,-.007756420411169529,.08294134587049484,.08844096958637238,-.0744241401553154,-.012829557992517948,-.12725739181041718,.07298801094293594,.1962660700082779,-.06013072654604912,-.04239412397146225,.15191473066806793,-.007865102030336857,.012019484303891659,.03157702088356018,.08602926880121231,-.16962435841560364,.0009709728765301406,-.15729846060276031,-.04793023690581322,.006255009211599827,.035015854984521866,-.04797859489917755,.1986517310142517,-.12857016921043396,.1392606645822525,.002461126074194908,-.012672497890889645,-.023629214614629745,.04619358852505684,-.08022752404212952,-.13852061331272125,.06095240265130997,-.23169046640396118,.15446500480175018,.178220734000206,.011952029541134834,.18034179508686066,.04215069115161896,.11979742348194122,.007939551025629044,-.022135796025395393,-.22693172097206116,-.01790875755250454,.07660035043954849,-.005718787666410208,.08113902807235718,.09360072761774063],[-.10268978029489517,.05513107776641846,.003953134641051292,-.14325004816055298,-.12716089189052582,-.055864349007606506,-.1373596042394638,-.20114806294441223,.20625318586826324,-.2012796401977539,.17593640089035034,.05235418304800987,-.13500967621803284,-.012962405569851398,-.05225334316492081,.16948550939559937,-.213414266705513,-.20398472249507904,-.06166928634047508,-.08691293001174927,-.01021333783864975,-.0256764218211174,.09617103636264801,.08799885213375092,-.09813138842582703,-.31529030203819275,-.141571044921875,-.09895957261323929,.08445164561271667,-.0170742180198431,-.039589717984199524,-.00860724039375782,-.23644790053367615,-.0074078235775232315,.05104031786322594,.13870440423488617,-.03519916534423828,-.13327141106128693,.1902782917022705,-.06025314703583717,-.20685561001300812,-.07464366406202316,.08096472918987274,.1946050226688385,.18051975965499878,-.004845880437642336,.032185934484004974,-.10472092032432556,.09358125180006027,-.2411148101091385,.11218848824501038,.1516634225845337,.02209852635860443,.07210713624954224,.05445580184459686,-.15990324318408966,.08607775717973709,.10847693681716919,-.14719735085964203,-.025783054530620575,.062187448143959045,-.053423114120960236,-.05692894384264946,-.04115498438477516,.31779444217681885,.19682703912258148,-.13047781586647034,-.1477908194065094,.18029151856899261,-.12351996451616287,-.015066420659422874,.006514642853289843,-.1648022085428238,-.18154652416706085,-.2595115303993225,-.01784500479698181,.4440325200557709,.17346052825450897,-.10103783011436462,.12921994924545288,-.1446971744298935,-.009879217483103275,.024360598996281624,.07437875121831894,-.0593063086271286,.06340918689966202,-.09235835075378418,.10364822298288345,.19813884794712067,-.08392824232578278,-.018415508791804314,.18183010816574097,-.02737455815076828,.012915993109345436,.03732874244451523,.11028101295232773,-.12299980223178864,-.027403704822063446,-.19383658468723297,-.03325128182768822,.05397305637598038,.04269587621092796,.0011595692485570908,.11369901150465012,-.16791807115077972,.08798401057720184,.022591834887862206,-.09031344950199127,-.011228566989302635,.004138508345931768,-.11017701029777527,-.15345841646194458,.10659527033567429,-.21783381700515747,.22809350490570068,.17429938912391663,.05702171474695206,.23375974595546722,.09435064345598221,.0853939950466156,.01691579259932041,-.0845029428601265,-.10527341067790985,-.04857107996940613,.04027238115668297,.034771014004945755,.057591136544942856,.06358472257852554]]},{label:"ViceMayorEnerito",descriptors:[[-.11901219189167023,.07582511752843857,.06112435832619667,-.04993128404021263,-.02049875073134899,-.063990518450737,-.10397536307573318,-.10831146687269211,.10438071936368942,-.10316860675811768,.1528606116771698,-.0029442941304296255,-.17020247876644135,-.07180170714855194,-.05869517847895622,.16216568648815155,-.2037937492132187,-.2211093306541443,-.018299587070941925,-.06282107532024384,.08853299170732498,-.04779786616563797,-.06244194135069847,-.019021734595298767,-.12660326063632965,-.28220227360725403,-.15415187180042267,-.08874765038490295,.04384278133511543,-.0807647779583931,-.05192483589053154,-.05633216351270676,-.21982157230377197,-.08987172693014145,.022479185834527016,.09321995824575424,-.01772131398320198,-.09982649236917496,.11685247719287872,.010138758458197117,-.10250451415777206,.02536104992032051,.06059303879737854,.27571332454681396,.17958161234855652,.09622983634471893,.029880288988351822,-.12450236827135086,.10453629493713379,-.23029915988445282,.0999264046549797,.14313720166683197,.09708882123231888,.17052440345287323,.05527528002858162,-.1368727833032608,.14198046922683716,.08875162899494171,-.15823569893836975,.05346495658159256,.1008637547492981,.04434917867183685,.026275839656591415,.0099804000928998,.2921762466430664,.07624071091413498,-.10296115279197693,-.1670689433813095,.1753143072128296,-.08953094482421875,-.09368237107992172,-.03458487614989281,-.12556461989879608,-.14354844391345978,-.31128400564193726,.10114140808582306,.44910454750061035,.14258138835430145,-.17714329063892365,.0832522064447403,-.12339895963668823,-.011368782259523869,.12887604534626007,.01989835314452648,-.0972638726234436,-.0061704302206635475,-.1218409463763237,-.005169830750674009,.2378595620393753,.007684981916099787,-.04369519278407097,.12163455039262772,.009055263362824917,.03004174493253231,.074827641248703,.07693543285131454,-.11393681913614273,.05363830551505089,-.14592604339122772,-.04778934642672539,.061305299401283264,-.019455375149846077,-.022198937833309174,.22688475251197815,-.10656925290822983,.12368077784776688,.004572909325361252,-.008523492142558098,-.0407266691327095,.07284252345561981,-.17243365943431854,-.10641094297170639,.06318443268537521,-.22707460820674896,.18817409873008728,.21713091433048248,.06577171385288239,.08319832384586334,.12706857919692993,.09572502970695496,-.0016847923398017883,.014475890435278416,-.19969137012958527,-.04662218689918518,.05852064490318298,.050457026809453964,.008308612741529942,.07849111407995224],[-.044053465127944946,.04161316156387329,.056923504918813705,-.08291430026292801,-.06552878022193909,-.01192804891616106,-.04314373806118965,-.1160445436835289,.09300923347473145,-.07120952010154724,.14746388792991638,.008926439099013805,-.12099380046129227,-.021904025226831436,-.0228019617497921,.08734558522701263,-.2263268381357193,-.15851376950740814,-.02935270220041275,-.05991338938474655,.06367618590593338,.0118596525862813,-.06634832918643951,-.046882130205631256,-.12468922138214111,-.2906925678253174,-.13868805766105652,-.09477997571229935,.08122888952493668,-.07622566819190979,.00637346925213933,-.026328764855861664,-.21213595569133759,-.021372634917497635,.05118937790393829,.033421553671360016,-.007948415353894234,-.05999450758099556,.15041948854923248,.01485791988670826,-.12701517343521118,.10415016114711761,.040536269545555115,.2702047824859619,.18115511536598206,.09371920675039291,-.02977105602622032,-.14505060017108917,.1300027221441269,-.23332345485687256,.10841380804777145,.1244840994477272,.05306701362133026,.12497001886367798,.03331389278173447,-.13361705839633942,.12040378898382187,-.015195561572909355,-.20584997534751892,.006583391223102808,.08500262349843979,.007607618346810341,.01546990592032671,-.012638075277209282,.23013411462306976,.06120681390166283,-.07598059624433517,-.15796469151973724,.10397879034280777,-.13875985145568848,-.08898060768842697,-.04345112293958664,-.09589206427335739,-.11041778326034546,-.3071935176849365,.07894258201122284,.46989011764526367,.14985941350460052,-.22839854657649994,.0780739113688469,-.12053437530994415,-.016309121623635292,.1724557876586914,.00938394758850336,-.12151394039392471,.029482029378414154,-.08037251979112625,.05107279121875763,.22576814889907837,-.03803695738315582,-.04214370623230934,.17090429365634918,.02369861491024494,.06589408218860626,.08478812873363495,.0520382896065712,-.08660642802715302,.027071163058280945,-.16484855115413666,-.04010508954524994,.07738593220710754,.009124059230089188,.028568822890520096,.251214861869812,-.22069306671619415,.22380149364471436,.016707705333828926,-.07910764962434769,-.012465040199458599,.0278799869120121,-.11690504103899002,-.05801643803715706,.09721734374761581,-.2639347016811371,.1853557676076889,.1941944807767868,.05620191618800163,.12481251358985901,.07633457332849503,.03281843662261963,-.05652837082743645,.01760481484234333,-.20480859279632568,-.030602993443608284,.06336773186922073,.05135828256607056,.02617010474205017,.06027904897928238]]},{label:"MayorRedentor",descriptors:[[-.04689595848321915,.1289481669664383,.005703288596123457,-.04166990518569946,-.019403371959924698,-.07291470468044281,.04518433287739754,-.07404616475105286,.1107911542057991,-.07114697992801666,.25308242440223694,-.05627647787332535,-.2788451313972473,-.03303675726056099,-.015876518562436104,.10842575877904892,-.22807852923870087,-.09947451949119568,-.10162606090307236,.02427932806313038,.11178988963365555,.021010855212807655,.06686079502105713,-.0026876714546233416,-.04403781518340111,-.30640673637390137,-.09048589318990707,-.08732140809297562,.048821821808815,-.03702281787991524,.01409487146884203,-.011048663407564163,-.20927880704402924,-.13387681543827057,.02814093977212906,.012187491171061993,-.05206209793686867,-.014646635390818119,.20740848779678345,.049701351672410965,-.19676417112350464,.004948798567056656,.0738440677523613,.26216211915016174,.1296941190958023,.09459368884563446,.03564793989062309,-.15206380188465118,.022845322266221046,-.2493983954191208,.04945579171180725,.12387140095233917,.11316552013158798,.08765528351068497,.03506360948085785,-.18745267391204834,.04587051272392273,.08812964707612991,-.10307826101779938,.04522183537483215,.13383981585502625,-.031128298491239548,.036176133900880814,-.021520651876926422,.20818451046943665,-.03618188947439194,-.10847016423940659,-.07173444330692291,.12043724209070206,-.08655353635549545,-.0928943082690239,.07021206617355347,-.09419316798448563,-.1692458689212799,-.31037437915802,.016829771921038628,.4362542927265167,.07830309867858887,-.09057415276765823,.021405482664704323,-.12562908232212067,-.006453446578234434,.10583345592021942,.08906319737434387,-.07134831696748734,.021751899272203445,-.11055678129196167,.05425577610731125,.16585828363895416,-.08667412400245667,-.04513699933886528,.14322689175605774,-.012387096881866455,.09342891722917557,.03744596615433693,.03826700896024704,-.07238548994064331,.029996337369084358,-.18601757287979126,.033509936183691025,-.028828993439674377,-.08375971019268036,-.04603920131921768,.1087372675538063,-.15942105650901794,.04211604222655296,.03450465202331543,-.08924488723278046,-.032558806240558624,.0013991533778607845,-.08237874507904053,-.034860190004110336,.07500631362199783,-.2393193244934082,.1962258666753769,.24836021661758423,.022060243412852287,.11742913722991943,.11569224298000336,.039796583354473114,7053690933389589e-20,-.0224917009472847,-.2361813634634018,-.057572029531002045,.06970618665218353,.0631069540977478,.051024578511714935,-.02134513668715954],[-.0223013274371624,.11718618869781494,-.0019270704360678792,-.09289349615573883,-.003909765277057886,-.11921513080596924,.019435783848166466,-.1397315412759781,.13798688352108002,-.01647506095468998,.21557778120040894,-.051448430866003036,-.25268518924713135,-.025524171069264412,-.019252033904194832,.08105585724115372,-.22383597493171692,-.09579448401927948,-.11233024299144745,-.0427573136985302,.07108115404844284,-.04969879984855652,.1182543933391571,.061003390699625015,-.08505202829837799,-.29821187257766724,-.1336379498243332,-.1101788729429245,.022652642801404,.001964034978300333,.06428124010562897,-.0054349289275705814,-.22398121654987335,-.11225999891757965,.02909659780561924,.018170420080423355,-.08739123493432999,-.054848022758960724,.2234039604663849,.05459624528884888,-.1689053773880005,.07828978449106216,-.0009922933531925082,.25622257590293884,.17784380912780762,.10084118694067001,.042584579437971115,-.11507715284824371,.03560587391257286,-.2078302949666977,.0803971141576767,.18248488008975983,.08020332455635071,.08476144820451736,.04584832116961479,-.15652057528495789,.121442511677742,.11525293439626694,-.18914948403835297,.006371838506311178,.11820867657661438,-.024090122431516647,.03011397272348404,.014234744943678379,.2271089255809784,.08185967803001404,-.1468936800956726,-.045718513429164886,.14934159815311432,-.07892413437366486,-.04604199156165123,.06133761256933212,-.14075787365436554,-.1764484941959381,-.26989156007766724,.041585732251405716,.48422086238861084,.10998201370239258,-.12657132744789124,-.006032796576619148,-.17262491583824158,.046861693263053894,.09373484551906586,.06162695959210396,-.12960229814052582,-.003976644016802311,-.09516853094100952,.040622081607580185,.09222383052110672,-.015777472406625748,-.11912110447883606,.21987538039684296,-4713675025413977e-21,.07709164917469025,.05375443026423454,.0495615117251873,-.0745702013373375,.0247418861836195,-.14629797637462616,.018307816237211227,.027812287211418152,-.06026940047740936,-.028815967962145805,.10394206643104553,-.18049375712871552,.10523194819688797,.04463023692369461,-.04000629112124443,-.04460141062736511,.03863408789038658,-.06903199106454849,-.022301236167550087,.08339826762676239,-.32691916823387146,.22770971059799194,.24106530845165253,.014827849343419075,.10908057540655136,.07419741153717041,.007993149571120739,-.009063796140253544,-.05567234009504318,-.2019287347793579,-.05405987799167633,.046801988035440445,.07844502478837967,.08860281109809875,.026132160797715187]]},{label:"ViceMayorJannus",descriptors:[[-.14276619255542755,.12438513338565826,.03085852600634098,-.02016673982143402,-.026427660137414932,-.02306012064218521,-.07158373296260834,-.13456811010837555,.09506023675203323,-.0694025307893753,.24521471560001373,-.08027730137109756,-.17586976289749146,-.17873139679431915,.06715017557144165,.10350623726844788,-.2157382369041443,-.15560369193553925,.016003675758838654,-.013152533210814,.09151206165552139,-.11037100106477737,-.012647752650082111,.0606730654835701,-.20221666991710663,-.337630957365036,-.0975918099284172,-.10874798148870468,.04537411406636238,-.05370364338159561,-.041116900742053986,-.048862654715776443,-.24766208231449127,-.06224847212433815,-.040198616683483124,.11294011026620865,-.015616574324667454,-.07594648003578186,.14643895626068115,.02691545896232128,-.10021129995584488,-.03663982078433037,-.08811299502849579,.25698474049568176,.1384679079055786,.05254138633608818,.040270984172821045,-.05513723939657211,.09530365467071533,-.22212129831314087,.02406129613518715,.1702479124069214,.1056661456823349,.04040861129760742,.024480031803250313,-.09209103137254715,.08165991306304932,.07516887784004211,-.22879604995250702,.008502827025949955,.03986046090722084,-.036599598824977875,-.009036058560013771,-.07550924271345139,.2927914261817932,.12263191491365433,-.12171054631471634,-.10489097237586975,.10472999513149261,-.05702497810125351,-.05230915546417236,.041756920516490936,-.10727716237306595,-.2048415094614029,-.3726445734500885,.08519257605075836,.39202865958213806,.15942947566509247,-.25526320934295654,-.026068557053804398,-.117936871945858,.002716407645493746,.15537233650684357,.08878949284553528,-.033301666378974915,.017384717240929604,-.15253593027591705,.023557737469673157,.13325804471969604,-.033837415277957916,-.048583440482616425,.16720376908779144,-.007723548915237188,.06699496507644653,.009453442879021168,.02244190312922001,-.10720627009868622,.029558628797531128,-.052815746515989304,-.011447085067629814,.08061283826828003,.03771714121103287,.005069531034678221,.16720637679100037,-.11221733689308167,.11231907457113266,.01655326783657074,-.0454401858150959,-.03293747082352638,-.05177897959947586,-.12667366862297058,-.08033952116966248,.05677393823862076,-.3127238154411316,.11183628439903259,.19085454940795898,-.01330699771642685,.1317932903766632,.06424758583307266,.044020332396030426,-.061111778020858765,.004049052018672228,-.17817558348178864,-.029906265437602997,.05371209979057312,.011309602297842503,.04079163819551468,-.02818313241004944],[-.12354543060064316,.12411408871412277,.019368387758731842,-.03535611182451248,.014076745137572289,-.06280594319105148,-.04659072682261467,-.13985754549503326,.10570357739925385,-.055284302681684494,.2637348175048828,-.07130372524261475,-.21759161353111267,-.21414443850517273,.02866283431649208,.15431079268455505,-.24142490327358246,-.18315671384334564,-.022712208330631256,-.019508881494402885,.09960810840129852,-.05758492648601532,.026535384356975555,-.0008496198570355773,-.12855079770088196,-.3958853483200073,-.08809470385313034,-.08161288499832153,.08861800283193588,-.0047627659514546394,-.031570758670568466,-.024969011545181274,-.24926850199699402,-.07479915022850037,.016957739368081093,.10392799973487854,-.012165170162916183,-.07218911498785019,.18058516085147858,.01801624894142151,-.12947744131088257,-.05969558283686638,-.0343986339867115,.26446396112442017,.16990512609481812,.05620080605149269,.06661174446344376,-.11471351981163025,.09666862338781357,-.21192686259746552,.0004004797665402293,.1706969290971756,.09093151986598969,.07623977214097977,-.027125760912895203,-.10548560321331024,.054465074092149734,.07575137913227081,-.2160925567150116,-.014082701876759529,.021854212507605553,-.08697033673524857,-.05078701302409172,-.07711957395076752,.2722013592720032,.05906995013356209,-.12207533419132233,-.14980506896972656,.11955780535936356,-.09043244272470474,-.037450071424245834,.04650779068470001,-.13010410964488983,-.17509756982326508,-.3668852150440216,.04222767800092697,.41495394706726074,.06646770238876343,-.18749602138996124,.026192890480160713,-.09835661202669144,-.01070698257535696,.13233058154582977,.10191649198532104,-.04499856382608414,.04802168533205986,-.14783477783203125,.030147390440106392,.1980035901069641,-.10990071296691895,-.05477654188871384,.1426393836736679,-.03976641595363617,.11031979322433472,.02624039724469185,.051393281668424606,-.06094936653971672,.053048405796289444,-.07102575898170471,-.015099923126399517,.08932850509881973,-.01766970567405224,.017769236117601395,.1122995987534523,-.1025010496377945,.09182805567979813,.03161704167723656,-.010509068146348,.011793463490903378,-.07639242708683014,-.08661447465419769,-.124073825776577,.07783897966146469,-.2551540732383728,.1854606717824936,.24430444836616516,.010856065899133682,.1566280871629715,.062188468873500824,.07251501828432083,-.06314603984355927,.005895955488085747,-.16636523604393005,-.020415784791111946,.04786963388323784,.06507894396781921,.05158688500523567,-.0406205952167511]]},{label:"MayorDanilo",descriptors:[[-.11025591939687729,.03229654207825661,.0022223994601517916,-.04668034240603447,-.05602032318711281,-.0812462866306305,.0551115982234478,-.09409376233816147,.19554029405117035,-.05640411376953125,.2619622051715851,-.030550619587302208,-.18201032280921936,-.12191081792116165,-.03366713598370552,.16211402416229248,-.14304344356060028,-.12831391394138336,-.07248368859291077,-.11343269050121307,.05603235214948654,-.022926971316337585,-.07016482204198837,.08791148662567139,-.01523525919765234,-.2989175319671631,-.08784908056259155,-.15735171735286713,.027589326724410057,-.02835463359951973,.0530400387942791,.044294390827417374,-.17157576978206635,-.13618463277816772,.030151426792144775,.009383228607475758,-.034666579216718674,-.047181300818920135,.17847788333892822,-.06149863451719284,-.10710688680410385,-.06235811859369278,.06446696817874908,.26701119542121887,.16749827563762665,.07176517695188522,-.0012314282357692719,-.08427480608224869,.07833504676818848,-.19319535791873932,-.01199154369533062,.13046827912330627,.13609959185123444,.06619948148727417,.014037626795470715,-.1432308852672577,.059800777584314346,.116584911942482,-.2971472144126892,-.0018275908660143614,-.04213974252343178,-.07621031999588013,-.08168070763349533,-.006771101150661707,.3313518464565277,.15889951586723328,-.09067488461732864,-.12578663229942322,.2630447447299957,-.16163291037082672,-.06347928941249847,-.013487156480550766,-.15892267227172852,-.17097873985767365,-.26191362738609314,.024179939180612564,.41846606135368347,.07979077100753784,-.20197910070419312,.06164409965276718,-.1268259584903717,.0272070225328207,.10140998661518097,.021856753155589104,-.07119682431221008,-.06338462233543396,-.0856848657131195,-.04935312271118164,.14916011691093445,-.035974834114313126,-.05026303604245186,.15296651422977448,-.016939502209424973,-.0630984678864479,.07071433216333389,-.002885382389649749,-.04440359026193619,.02109668403863907,-.16312670707702637,-.09452013671398163,.062180742621421814,-.027705827727913857,.048821378499269485,.10971862822771072,-.20007917284965515,.09472988545894623,.023737389594316483,-.014083793386816978,-.01141637284308672,-.01555181760340929,-.07461600005626678,-.06844113022089005,.16744539141654968,-.17363667488098145,.2596133351325989,.12816524505615234,.011670809239149094,.18763239681720734,.012398197315633297,.07593926787376404,-.04108177125453949,-.08868616074323654,-.17235027253627777,-.014673312194645405,.0787598043680191,-.001090441714040935,.08104182779788971,.01408191118389368],[-.10247500985860825,.05711491405963898,.07825321704149246,.02567843347787857,.014699396677315235,-.1192651242017746,.02688342146575451,-.16458265483379364,.15505385398864746,-.034492127597332,.24123841524124146,-.06696135550737381,-.17446647584438324,-.09176553040742874,-.010014801286160946,.14934346079826355,-.14985154569149017,-.10392153263092041,-.05657578632235527,-.06770160794258118,.018772896379232407,-.00027556464192457497,-.03412998467683792,.06110897287726402,.0069382647052407265,-.3361731767654419,-.07087337970733643,-.14357079565525055,.05913255736231804,-.005980929359793663,.03153059259057045,.04656165465712547,-.18471850454807281,-.07899011671543121,.0511946827173233,.05372370406985283,-.05476123467087746,-.036420490592718124,.17380324006080627,-.052837442606687546,-.1386040598154068,-.05316566303372383,.0025374172255396843,.24739491939544678,.14185857772827148,.14341144263744354,.03952154889702797,-.10223954170942307,.09851627796888351,-.166669562458992,-.0009094626293517649,.10208117961883545,.10557473450899124,.054987695068120956,-.013209613040089607,-.18818724155426025,.0384649895131588,.030931364744901657,-.280665785074234,.08665121346712112,.050933171063661575,-.14725974202156067,-.07084120064973831,.01782095618546009,.27068954706192017,.10283293575048447,-.089551642537117,-.09079921245574951,.2182607501745224,-.19948701560497284,-.026478415355086327,.030621420592069626,-.10722994059324265,-.2324940264225006,-.25364986062049866,.03505962714552879,.4173661172389984,.09007280319929123,-.16352717578411102,.03207412362098694,-.0188662800937891,.0590578056871891,.16421747207641602,.10800732672214508,-.05570554733276367,-.0041184392757713795,-.07881325483322144,-.03526596352458,.19556209444999695,-.04455075412988663,-.07765559107065201,.17483587563037872,-.08530568331480026,.0023950946051627398,-.0001541728706797585,-.02511027827858925,.02497093565762043,.053426481783390045,-.1088203713297844,-.04659208282828331,.0972282737493515,.0008585933828726411,.05888640135526657,.04478013142943382,-.16350029408931732,.09710925817489624,.001946896780282259,.02097433991730213,.018498757854104042,-.0215521939098835,-.10649394243955612,-.04690978303551674,.1758037656545639,-.21526192128658295,.30823686718940735,.18246932327747345,.0295634176582098,.18102020025253296,.0036854250356554985,.0697534829378128,.03120846301317215,-.08604511618614197,-.1747339516878128,-.05015745386481285,.09643063694238663,.023562142625451088,.1054619625210762,-.004551720339804888]]},{label:"ViceMayorTomas",descriptors:[[-.0807337760925293,.17298097908496857,.057026322931051254,.032604433596134186,.003785335924476385,-.018727440387010574,.05476368963718414,-.1318189948797226,.14840495586395264,-.050415463745594025,.24284391105175018,-.07523249089717865,-.149417445063591,-.12436065077781677,-.0031510659027844667,.15415599942207336,-.1978163719177246,-.15127280354499817,-.11428911238908768,-.022000618278980255,.03579896315932274,.04060491919517517,-.04092578589916229,-.023114854469895363,.0008158689015544951,-.320404976606369,-.08496735990047455,-.11450786888599396,.11270207911729813,-.07658454030752182,-.03378911316394806,.003064410760998726,-.20985537767410278,-.10335768014192581,-.0024855167139321566,.012712912634015083,-.040909308940172195,-.027962760999798775,.15828390419483185,.011076632887125015,-.20366354286670685,.039311207830905914,.06222260743379593,.25547829270362854,.21236354112625122,.07784997671842575,-.0688752606511116,-.10670880973339081,.0400606244802475,-.12829408049583435,.053253114223480225,.15214604139328003,.13577857613563538,.11993812024593353,.006509827915579081,-.1410331279039383,.009832840412855148,-.018318047747015953,-.14856642484664917,-.014010746031999588,.14651229977607727,-.07004169374704361,-.0003880770527757704,-.006699236575514078,.18629339337348938,.03848515823483467,-.04342703893780708,-.1557701677083969,.13117936253547668,-.15033762156963348,-.046773429960012436,.06189876049757004,-.08437503129243851,-.11907438933849335,-.24798817932605743,.07968880981206894,.4636913239955902,.07039909809827805,-.16340020298957825,-.011077587492763996,-.09667889773845673,-.048906125128269196,.15119732916355133,.08429896831512451,-.05265985056757927,-.052309948951005936,-.10431161522865295,-.03938677906990051,.1724795401096344,-.01488861721009016,-.04002093896269798,.13591143488883972,-.05666644871234894,-.013921711593866348,.021014707162976265,-.0043709175661206245,-.02912510558962822,.0797165110707283,-.09560541063547134,-.05186859518289566,-.009406931698322296,-.07754512131214142,-.037458449602127075,.13303205370903015,-.1335190087556839,.11781755089759827,.057319846004247665,.03385069593787193,.041958071291446686,.025399500504136086,-.05933999642729759,-.06021843105554581,.1295335590839386,-.18639415502548218,.21667270362377167,.13723360002040863,-.01895528845489025,.09571774303913116,.06769964098930359,.17681105434894562,-.048136256635189056,-.020888881757855415,-.22584663331508636,-.0431123822927475,.06064361706376076,.020833473652601242,.05682927742600441,.01663031056523323],[-.14419950544834137,.09998296946287155,.06718700379133224,-.03643978759646416,-.02380427159368992,-.08140656352043152,.07178862392902374,-.16698689758777618,.14052501320838928,-.041582632809877396,.26378390192985535,-.10055698454380035,-.13362093269824982,-.18366222083568573,.0549292117357254,.15114109218120575,-.18862740695476532,-.17291294038295746,-.11790766566991806,-.0657537654042244,-.030628519132733345,.0011981460265815258,.016944872215390205,.0008373641758225858,-.005801526829600334,-.35084590315818787,-.1082509458065033,-.1167151927947998,.08588427305221558,-.07392462342977524,-.0046761310659348965,-.01031824667006731,-.23775170743465424,-.064944788813591,-.006899719126522541,.06518985331058502,-.039968300610780716,-.04030688852071762,.15690407156944275,-.032153110951185226,-.19216027855873108,-.01915614865720272,.08716579526662827,.17794044315814972,.21170850098133087,.056163158267736435,-.045990604907274246,-.06520217657089233,.031088808551430702,-.10490595549345016,.08127035200595856,.13821808993816376,.1216970682144165,.06011606752872467,.05758190155029297,-.09401195496320724,-.021930236369371414,.02316185086965561,-.062193483114242554,.012540505267679691,.13887766003608704,-.09820263832807541,-.05001267418265343,-.04163796827197075,.182485431432724,.0384361706674099,-.06174822151660919,-.1564827412366867,.07715314626693726,-.16102813184261322,-.07741668820381165,.07064519077539444,-.08051083236932755,-.11479804664850235,-.282852441072464,.07414168119430542,.4384678602218628,.06696003675460815,-.19463293254375458,-.014727160334587097,-.11369434744119644,-.033103540539741516,.11435578018426895,.08263769000768661,-.054859358817338943,-.011757580563426018,-.18379878997802734,-.07721096277236938,.1719287484884262,-.02283494547009468,-.005380218382924795,.1560794562101364,-.09248721599578857,.036220137029886246,-.02088293433189392,-.027768520638346672,-.033988531678915024,.044519416987895966,-.03159762918949127,-.08796937763690948,.04558046907186508,-.07992241531610489,-.05015571787953377,.09203982353210449,-.15122060477733612,.09207293391227722,.03462797775864601,.05085667595267296,.036797117441892624,.04801008105278015,-.0189267098903656,-.10195628553628922,.10163670033216476,-.19090139865875244,.17836156487464905,.1725001037120819,-.054543521255254745,.11767803132534027,.07255773991346359,.19468684494495392,-.06998396664857864,.010809235274791718,-.14663711190223694,-.028475986793637276,.0040296511724591255,.05229433625936508,.06039576232433319,.051697153598070145]]},{label:"MayorJay",descriptors:[[-.06009148433804512,.09043693542480469,.010251975618302822,-.08117831498384476,-.02050166018307209,-.012354809790849686,.041074883192777634,-.11510360240936279,.22786879539489746,-.08148731291294098,.2560860216617584,-.08676739782094955,-.15402498841285706,-.14617830514907837,.05942035838961601,.11141057312488556,-.16547651588916779,-.10755252838134766,-.10049886256456375,-.053145524114370346,.029890883713960648,-.06782082468271255,-.010557512752711773,.025223447009921074,-.07303564250469208,-.3839244246482849,-.12203662842512131,-.10694891214370728,.06191257759928703,-.023666732013225555,.04931751266121864,.0287498626857996,-.22510705888271332,-.11976771056652069,-.04958988353610039,.0466938354074955,-.07196332514286041,-.03472859784960747,.17277410626411438,-.003105787793174386,-.1758846640586853,.05123865604400635,-.009233453311026096,.24654939770698547,.18370755016803741,.01615208573639393,.00342554016970098,-.046214617788791656,.07432160526514053,-.20802311599254608,.05732991546392441,.1636999100446701,.12335312366485596,.05873622000217438,.10335219651460648,-.0035209855996072292,.009953083470463753,.10479160398244858,-.2349565029144287,.03580327704548836,.06692052632570267,-.01893790066242218,-.07431036233901978,-.04928279668092728,.2261955291032791,.2027193009853363,-.09357018768787384,-.13942348957061768,.16404908895492554,-.08598797023296356,-.05244388058781624,.05525682494044304,-.12544859945774078,-.1808089017868042,-.26223865151405334,.09308195114135742,.45112374424934387,.10012710094451904,-.18588262796401978,.02338208071887493,-.13436101377010345,-.018574947491288185,.13595013320446014,.05962986871600151,-.013828244060277939,-.02296748012304306,-.03734327852725983,.06763378530740738,.10649000853300095,-.03602687641978264,-.07316911220550537,.2296440154314041,-.04974767565727234,.02042156457901001,-.017368758097290993,.02516232058405876,-.018748698756098747,.06089654192328453,-.1266639232635498,-.04861735552549362,.16326431930065155,.006165261846035719,.03654459863901138,.07829846441745758,-.1569783091545105,.15224213898181915,.05533411353826523,.0549895316362381,.09099188446998596,.01532148290425539,-.051398638635873795,-.013645749539136887,.13333125412464142,-.28263646364212036,.22957807779312134,.10465586930513382,-.08394390344619751,.0840664654970169,.04391593858599663,.04714706167578697,.02448001503944397,-.08285266906023026,-.18969161808490753,-.023297198116779327,.026396652683615685,.06277944147586823,.033437393605709076,.02212442085146904],[-.0899338498711586,.049716539680957794,.026544595137238503,-.023359311744570732,.00261938595212996,-.05493773892521858,.06843576580286026,-.15112923085689545,.16157570481300354,-.1292617917060852,.24862992763519287,-.13336080312728882,-.1414063423871994,-.17560097575187683,-.01031949557363987,.20942482352256775,-.15739776194095612,-.12391704320907593,-.11247804015874863,-.06823357939720154,.01925911009311676,-.0736103355884552,.04283462092280388,.08430216461420059,-.059034548699855804,-.3484020531177521,-.14588838815689087,-.10775801539421082,.016942109912633896,-.05191829428076744,-.052689265459775925,.04692694544792175,-.199771910905838,-.10810408741235733,-.038031551986932755,.0049229771830141544,-.014810151420533657,-.032213155180215836,.16262978315353394,-.026627250015735626,-.15725046396255493,.06606443226337433,.030722426250576973,.26602697372436523,.17614105343818665,.03345983847975731,-.05681266263127327,-.0966453105211258,.10698966681957245,-.12961256504058838,.01921006478369236,.0842692106962204,.13606102764606476,.03958703577518463,.038310520350933075,.022459134459495544,.05077420547604561,.06679291278123856,-.2118474841117859,.007081012241542339,.037541043013334274,-.07690110057592392,-.05545707046985626,-.042318616062402725,.2132481187582016,.1389094740152359,-.06994877755641937,-.16516859829425812,.17088912427425385,-.11946748197078705,-.007099116686731577,.03120424970984459,-.1358088105916977,-.1658228188753128,-.31585583090782166,.06464070826768875,.3879960775375366,.10602876543998718,-.18726564943790436,.023908929899334908,-.08895760029554367,.011117174290120602,.1565212607383728,.11377043277025223,-.04750635847449303,-.026315638795495033,-.08694355189800262,.04102201387286186,.09195512533187866,-.06935857236385345,-.08097745478153229,.2327936440706253,-.02928224578499794,.037684082984924316,.0012964624911546707,-.0003915351117029786,-.05810433253645897,.09266920387744904,-.13722926378250122,.0036528236232697964,.10816565155982971,.049071602523326874,.0429709330201149,.09312000125646591,-.09104430675506592,.07104342430830002,.004621825646609068,.046587150543928146,.060351986438035965,.04438530653715134,-.11269991844892502,-.11243689060211182,.051943227648735046,-.23401087522506714,.12568406760692596,.13702185451984406,-.02563294768333435,.049429308623075485,.05475112795829773,.07890196889638901,-.002618516096845269,-.02136800065636635,-.19617800414562225,.048970598727464676,.15985007584095,.012957417406141758,.05440919101238251,.011851919814944267]]},{label:"ViceMayorMarita",descriptors:[[-.12963081896305084,.08251701295375824,.05162959545850754,-.06904731690883636,-.15843252837657928,-.055749520659446716,-.10199888050556183,-.11759378015995026,.15968067944049835,-.14292731881141663,.1826590746641159,-.005851234309375286,-.23653708398342133,-.013366557657718658,-.051189303398132324,.178640678524971,-.12959444522857666,-.08488243073225021,-.07873748987913132,-.03812144324183464,.044537704437971115,-.015981564298272133,.0650196522474289,.04790688678622246,-.02787054143846035,-.3540915548801422,-.11950993537902832,-.09289096295833588,.03381964936852455,-.028343230485916138,-.031123334541916847,.03553617745637894,-.17246748507022858,-.08006995171308517,.025876807048916817,.08873453736305237,-.045777443796396255,-.10170871019363403,.20876653492450714,-.08349571377038956,-.19651110470294952,-.066280297935009,.07273554801940918,.16047769784927368,.14941412210464478,.03297753259539604,.04265174642205238,-.13911907374858856,.11740868538618088,-.21509131789207458,.02568688988685608,.1408996284008026,.045256320387125015,.08593180775642395,.0732458084821701,-.11899952590465546,.13071821630001068,.12359800934791565,-.17291571199893951,-.0653722882270813,.054365646094083786,-.06943181902170181,-.05994754657149315,-.033367324620485306,.31503263115882874,.12850013375282288,-.09530815482139587,-.12282711267471313,.1770026534795761,-.10307696461677551,-.02403196133673191,.042016927152872086,-.1598026007413864,-.16222873330116272,-.2619384527206421,.0328153632581234,.40490061044692993,.14122003316879272,-.13605917990207672,.0761033296585083,-.10528881847858429,-.03539407625794411,.08072212338447571,.07316355407238007,-.06267832219600677,-.03289830684661865,-.06343033909797668,.04943777993321419,.18567071855068207,-.09716823697090149,.022677050903439522,.1778545081615448,.04768168553709984,.05129050835967064,.028732091188430786,.05913247540593147,-.10688523948192596,-.021009042859077454,-.1779022514820099,-.006504260469228029,.111176036298275,.005514261778444052,.0052931341342628,.09709203988313675,-.17241276800632477,.05021459981799126,-.008555280044674873,-.07254794985055923,.017877670004963875,-.06082689389586449,-.1152823269367218,-.09024316817522049,.12500515580177307,-.18118223547935486,.22727902233600616,.1371578723192215,.007601513992995024,.15808497369289398,.10826211422681808,.08480954170227051,.0019572556484490633,-.08138494193553925,-.14162394404411316,-.04973671957850456,.15925444662570953,.0033920016139745712,.03039701096713543,-.015068198554217815],[-.15915463864803314,.13451172411441803,.045562077313661575,-.06883617490530014,-.13527724146842957,-.06988409906625748,-.10261990875005722,-.1399298757314682,.16962163150310516,-.12219320237636566,.19010888040065765,.01353825256228447,-.2142932265996933,-.014623661525547504,-.07886090874671936,.17471401393413544,-.1553390473127365,-.08717349171638489,-.06645757704973221,-.023366771638393402,.06039781868457794,-.017871761694550514,.06138168275356293,.03171150013804436,-.03170859068632126,-.3287471532821655,-.12125403434038162,-.07736621052026749,-.0004025634843856096,-.04325051233172417,-.03486664965748787,.01914428360760212,-.19536074995994568,-.10685540735721588,.03202810510993004,.06221535801887512,-.04338560253381729,-.11185251176357269,.17780902981758118,-.05850610509514809,-.1760983020067215,-.036875560879707336,.09379040449857712,.182521253824234,.1540248841047287,.025563284754753113,.02349374070763588,-.15095265209674835,.1475081592798233,-.1833774894475937,-.005355295725166798,.1270371377468109,.0583781898021698,.08811984211206436,.07372386753559113,-.11755049228668213,.11495839804410934,.0733531042933464,-.21385376155376434,-.08758832514286041,.04164567589759827,-.033965591341257095,-.07524891942739487,-.06898077577352524,.27115118503570557,.15111294388771057,-.10386338829994202,-.14877629280090332,.19493156671524048,-.0884850025177002,-.019090205430984497,.04824649170041084,-.14157913625240326,-.17796143889427185,-.24942320585250854,.01770327053964138,.38567522168159485,.1398269087076187,-.11955981701612473,.05752585083246231,-.11674296110868454,-.0682188868522644,-.0013680232223123312,.07475730031728745,-.05903945863246918,.024398112669587135,-.04571642726659775,.03937486931681633,.1713140904903412,-.06857845932245255,-.013615274801850319,.18719756603240967,.0470145158469677,.016069291159510612,.034966841340065,.08994200080633163,-.14467363059520721,-.021639922633767128,-.20646557211875916,-.03421661630272865,.06128283590078354,-.013141412287950516,-.013534953817725182,.11535661667585373,-.15816272795200348,.068763367831707,-.0015419573755934834,-.06666938215494156,-.04687412828207016,-.05158146470785141,-.10345388948917389,-.07232214510440826,.07520288228988647,-.19977247714996338,.21416042745113373,.12000684440135956,.015401785261929035,.1549205332994461,.0772838443517685,.06003865227103233,-.0011124898446723819,-.06052333116531372,-.10998532176017761,-.10417668521404266,.12010013312101364,.019884027540683746,.03988046944141388,-.009146551601588726]]},{label:"MayorDiosdado",descriptors:[[-.1428399235010147,.10153365135192871,.059984829276800156,.0056406669318675995,-.07383750379085541,-.08982282876968384,.012525893747806549,-.19001410901546478,.08775567263364792,-.016396677121520042,.26425600051879883,-.08033101260662079,-.22395601868629456,-.1230354830622673,.054227933287620544,.1211005449295044,-.14774298667907715,-.15644600987434387,-.1066913828253746,-.05004126578569412,.03965284302830696,-.07654447853565216,.03240838274359703,.001659649657085538,-.08051806688308716,-.32577744126319885,-.10164471715688705,-.08965393900871277,.04785516485571861,-.032051391899585724,.04607819393277168,-.008453281596302986,-.2163398563861847,-.1412356197834015,.051928047090768814,.1363648772239685,-.09061094373464584,-.10221078246831894,.19193100929260254,-.06921222805976868,-.1833033710718155,-.051739707589149475,.031241262331604958,.2017521858215332,.1892327219247818,.07851484417915344,.05965163931250572,-.08439601212739944,.0876571461558342,-.18914933502674103,.05270334333181381,.10425247251987457,.10755553841590881,.04482518509030342,.10223639011383057,-.13701309263706207,.03254961967468262,.14951977133750916,-.16144640743732452,-.0321299247443676,.06690890341997147,-.08940166980028152,.005520379636436701,-.06815849244594574,.20709766447544098,.12760838866233826,-.022138768807053566,-.11761847883462906,.24253961443901062,-.07401873916387558,-.10028191655874252,.09272728860378265,-.11081419885158539,-.13896556198596954,-.31514236330986023,-.011713225394487381,.5139150023460388,.044383611530065536,-.14405657351016998,-.0639287605881691,-.06990295648574829,.011527024209499359,.09514760226011276,-.008134754374623299,-.060471706092357635,-.04612431302666664,-.15230175852775574,-.01797138713300228,.23914192616939545,-.035770662128925323,-.08059925585985184,.0763484314084053,-.03448132053017616,-.005871892906725407,.06833411753177643,.0077988505363464355,-.0374172180891037,.0489424392580986,-.14419923722743988,-.0893864780664444,.06856705993413925,-.06097235530614853,.01622038148343563,.126739501953125,-.16302640736103058,.057111598551273346,.02759290114045143,-.004100225865840912,-.041203904896974564,-.0327274389564991,-.07618483155965805,.03057362511754036,.136830672621727,-.2559455931186676,.22833433747291565,.18665936589241028,-.05793600156903267,.10917282104492188,.029027273878455162,.049777641892433167,-.0340917743742466,-.06066577509045601,-.1952858418226242,-.10282665491104126,.02667817287147045,.08812674880027771,.08363083004951477,.042260754853487015],[-.12820251286029816,.057247746735811234,.057371556758880615,.04742869734764099,-.021535202860832214,-.04410846531391144,.07049154490232468,-.14610116183757782,.14102786779403687,-.019449738785624504,.26150843501091003,-.06032375991344452,-.22687138617038727,-.1545177698135376,-.01585765928030014,.15347100794315338,-.1881616860628128,-.13325659930706024,-.09953285753726959,-.03662131354212761,-.018369203433394432,-.11858855932950974,.03546569123864174,-.03503561019897461,-.039933960884809494,-.35609960556030273,-.06973771750926971,-.1109282374382019,.028518380597233772,-.007527881767600775,.0022186569403856993,.05196721479296684,-.22979037463665009,-.1269194483757019,-.019169233739376068,.0695563331246376,-.04320894926786423,-.06157004088163376,.18783503770828247,-.06369204819202423,-.16076268255710602,-.017024705186486244,.04531164467334747,.19206249713897705,.23543475568294525,.06747502833604813,-.01699226349592209,-.00882513727992773,.06372404098510742,-.24509558081626892,.004256687127053738,.09615448117256165,.1027180477976799,.06841497868299484,.020741859450936317,-.14014260470867157,.004431245382875204,.0875367522239685,-.16755326092243195,-.005750551819801331,-.006479374133050442,-.13043169677257538,.008539656177163124,.010119851678609848,.23903320729732513,.16353556513786316,-.04034558683633804,-.12125970423221588,.23697303235530853,-.1160249412059784,-.0361449271440506,.021153438836336136,-.11611735820770264,-.1395302563905716,-.33317217230796814,.038162413984537125,.42632174491882324,.0500744953751564,-.1324520707130432,-.04679979756474495,-.11892133206129074,.0006925392081029713,.0628182590007782,.030380524694919586,-.036048781126737595,-.0814795270562172,-.15868854522705078,-.07611029595136642,.21023347973823547,-.01846696436405182,-.11489468067884445,.13090357184410095,-.07227366417646408,-.018337689340114594,.02455674670636654,.019056707620620728,-.02458210662007332,.03860732913017273,-.1682368665933609,-.07362725585699081,.058844104409217834,-.06178698688745499,.006011578254401684,.13156747817993164,-.14745144546031952,.015788108110427856,-.012111768126487732,.026462553068995476,.010184722021222115,-.040203772485256195,-.049476541578769684,.018537085503339767,.12323294579982758,-.21756769716739655,.2887181341648102,.18749116361141205,-.013065188191831112,.11731786280870438,.042001873254776,.02785700373351574,-.021050594747066498,-.027047308161854744,-.16818884015083313,-.08838613331317902,.008604989387094975,.05380146577954292,.06855206191539764,.07274690270423889]]},{label:"ViceMayorRoy",descriptors:[[-.07004639506340027,.043293289840221405,.03666345030069351,-.009147006087005138,.002475256100296974,-.03045406937599182,.010716657154262066,-.15770520269870758,.17916974425315857,-.10094177722930908,.30302953720092773,-.00927753932774067,-.2164536416530609,-.18324410915374756,.0666721984744072,.134140744805336,-.1424495279788971,-.166340172290802,-.13282175362110138,-.001964339753612876,.025882499292492867,-.06067301332950592,.0911167711019516,-.0042366040870547295,-.10275737941265106,-.3339177668094635,-.11347128450870514,-.12252805382013321,.08311198651790619,-.09042022377252579,-.016830608248710632,-.011769145727157593,-.1757916510105133,-.10090371966362,-.007375672459602356,.0704277902841568,-.07621963322162628,-.04501497745513916,.30386143922805786,-.007708349730819464,-.20270952582359314,-.02331063523888588,-.04288768395781517,.2529571056365967,.20201033353805542,.008986582048237324,.07289094477891922,-.06093241646885872,.0665971115231514,-.2458682358264923,.06992170214653015,.12084785848855972,.1337299346923828,.08469683676958084,.046752750873565674,-.12668801844120026,-.014257373288273811,.19090084731578827,-.1374872475862503,.028296969830989838,.04532231390476227,-.11095182597637177,-.03006671369075775,.020063824951648712,.28121399879455566,.10410719364881516,-.13399042189121246,-.0943664014339447,.14737281203269958,-.027921661734580994,-.047896187752485275,.0935627743601799,-.17214271426200867,-.14604097604751587,-.306278795003891,.008475481532514095,.48911720514297485,-8956455712905154e-20,-.21633905172348022,-.03686849772930145,-.1613369584083557,.001907000900246203,.08639386296272278,.07028872519731522,-.007951970212161541,-.03364338353276253,-.1297164410352707,.025978200137615204,.159806489944458,-.06709028780460358,-.05433864891529083,.11999169737100601,-.00791007187217474,.06947928667068481,.008655496872961521,.06135915592312813,-.020130593329668045,.003677870612591505,-.11141306906938553,-.03932880237698555,.04241734370589256,.032080862671136856,.023312941193580627,.0936904102563858,-.13024164736270905,.1673271358013153,.07079292833805084,.005756928585469723,.0342903733253479,-.042974360287189484,-.0069919247180223465,-.017851153388619423,.10023500770330429,-.29179468750953674,.19790512323379517,.18872115015983582,-.025994837284088135,.12756392359733582,.010987658984959126,.04886268079280853,-.04564996063709259,-.005177749320864677,-.22810162603855133,-.015949595719575882,.021190356463193893,.0889364704489708,.08564451336860657,.017994921654462814],[-.10916177183389664,.12858937680721283,.05865372344851494,-.007456068880856037,.004664308857172728,-.05973049998283386,.0033334745094180107,-.15449659526348114,.14665544033050537,-.08186118304729462,.2792985141277313,-.01125138159841299,-.18921469151973724,-.15363316237926483,.0012609026161953807,.13195793330669403,-.20416584610939026,-.12684184312820435,-.13615332543849945,.011839596554636955,.0341026708483696,-.0189577117562294,.07595129311084747,-.010733231902122498,-.0819171592593193,-.3718523681163788,-.08417181670665741,-.08667726069688797,.04784450680017471,-.07385457307100296,-.019946113228797913,-.05413356423377991,-.23629237711429596,-.10450447350740433,-.006729667540639639,.0228340532630682,-.07656490802764893,-.08155910670757294,.2619164288043976,.0035670737270265818,-.17969846725463867,-.05110607296228409,.027022287249565125,.2195611149072647,.18149533867835999,.011685068719089031,.014756783843040466,-.08025677502155304,.08487699925899506,-.24820305407047272,.054822370409965515,.10647258907556534,.10016898810863495,.09448500722646713,.024596530944108963,-.10184042900800705,.05266844481229782,.1413934826850891,-.17634277045726776,-.010769465938210487,.05435092747211456,-.1345583200454712,-.03813990578055382,.07155227661132812,.26165705919265747,.15322282910346985,-.06008207052946091,-.12059427052736282,.11848302185535431,-.0882599800825119,-.006138200405985117,.06598754972219467,-.08341295272111893,-.14278244972229004,-.30021318793296814,.014693615958094597,.4638591706752777,.04033229872584343,-.16196976602077484,-.04310690239071846,-.1564030796289444,-.01512368954718113,.1510028839111328,.04624277353286743,-.08442912995815277,-.03252830356359482,-.12154430150985718,.04036350175738335,.2011001855134964,-.014474600553512573,-.08347469568252563,.14750340580940247,-18853545043384656e-21,.030447453260421753,.06324270367622375,-.009165746159851551,-.0311118271201849,.006630440708249807,-.08974530547857285,.004422857891768217,.05005507543683052,-.01178007759153843,-.0035866000689566135,.11190588772296906,-.14660602807998657,.06384337693452835,.05179152265191078,-.038486119359731674,.07809288054704666,-.05678986385464668,-.05452730879187584,-.09521693736314774,.06085215136408806,-.24539218842983246,.21932417154312134,.1520334631204605,-.029524218291044235,.14869248867034912,.019520550966262817,.0559939406812191,-.04287096485495567,-.003497352357953787,-.15632517635822296,-.00702039897441864,.07944683730602264,.0670485645532608,.1152166947722435,-.041350170969963074]]},{label:"Nico",descriptors:[[-.15217570960521698,.11922149360179901,.010594637133181095,-.06306355446577072,.08766791224479675,-.10824646055698395,-.03915639594197273,-.09423752874135971,.15134352445602417,-.06304772198200226,.2419002503156662,.016970133408904076,-.1898578256368637,-.07779529690742493,.03733348101377487,.08623379468917847,-.18030518293380737,-.14309820532798767,-.08433391153812408,-.0625327080488205,.07268182933330536,-.0566406212747097,.022513005882501602,.0958726555109024,-.16157476603984833,-.29676368832588196,-.13682864606380463,-.10589531064033508,.0486331544816494,-.024838866665959358,.024705007672309875,-.040244121104478836,-.267450213432312,-.05278894305229187,.028355000540614128,.04357679933309555,-.037676215171813965,-.06224363297224045,.17977195978164673,-.014929301105439663,-.10101205855607986,-.04613052308559418,.06702222675085068,.23324836790561676,.13770560920238495,.0678284764289856,.047930072993040085,-.043967247009277344,.040309540927410126,-.244253471493721,.08641449362039566,.11874112486839294,.16561004519462585,.11701542884111404,.11354289203882217,-.16213437914848328,.06549401581287384,.10566532611846924,-.1771308183670044,.10869267582893372,-.008738504722714424,-.04572848230600357,-.03080574795603752,-.021398555487394333,.2979475259780884,.14940647780895233,-.16871538758277893,-.08096111565828323,.18949510157108307,-.10880780220031738,-.014796577394008636,.0902433693408966,-.07235594838857651,-.2165701538324356,-.30498120188713074,.07430057227611542,.39031511545181274,.17162373661994934,-.16555358469486237,.05388270691037178,-.12185563147068024,.0003518800949677825,.044086750596761703,.03727831691503525,-.15097671747207642,.005424464121460915,-.07146811485290527,.04613518342375755,.2224465161561966,.05981844291090965,-.09011399745941162,.17925706505775452,-.04976149648427963,.04263217747211456,.00583710428327322,.008558828383684158,-.053240690380334854,-.07024659216403961,-.09529765695333481,.024011200293898582,.0034545548260211945,-.041591934859752655,-.04803987219929695,.12758956849575043,-.14468760788440704,.036400217562913895,.046280425041913986,-.0629754513502121,-.042577214539051056,.1426328718662262,-.1644124686717987,-.09475603699684143,.030570823699235916,-.32663407921791077,.2526443302631378,.18838320672512054,.02511977031826973,.12541961669921875,.04916904866695404,.050152942538261414,.034619275480508804,-.03219057247042656,-.11337049305438995,-.07775052636861801,.07886601239442825,.007714531384408474,.07714661210775375,.007386407349258661],[-.14245451986789703,.10141071677207947,.0065190428867936134,-.05815510079264641,-.00923310685902834,-.05257556214928627,-.02609233558177948,-.07786265015602112,.21712155640125275,-.13442598283290863,.21582989394664764,.004641952458769083,-.21917590498924255,-.09309361129999161,-.0293017216026783,.0932253748178482,-.13860361278057098,-.10109494626522064,-.0568355992436409,-.10523126274347305,.08600752800703049,.006687459535896778,.05486144870519638,.06407783925533295,-.17483384907245636,-.30693545937538147,-.11461683362722397,-.13217484951019287,.018993142992258072,-.04562947899103165,.004905573558062315,.033752571791410446,-.2305031418800354,-.09044579416513443,.006401901599019766,.08053576201200485,-.038433901965618134,.026477588340640068,.1605546772480011,.034046728163957596,-.1530866026878357,-.036668017506599426,.014296078123152256,.30472317337989807,.12464100122451782,.08474455773830414,.014057056047022343,-.025098681449890137,.050783123821020126,-.23497658967971802,.051301509141922,.12763363122940063,.09863896667957306,.06934191286563873,.12858040630817413,-.18860900402069092,.04340560734272003,.11530924588441849,-.1551489233970642,.07197093218564987,-.004363475367426872,-.06552322208881378,-.023353785276412964,-.0017801208887249231,.28288841247558594,.11393282562494278,-.15541766583919525,-.060281332582235336,.1849544793367386,-.09168792515993118,.03140782564878464,.14896142482757568,-.10838856548070908,-.19707895815372467,-.2568819224834442,.0744316577911377,.48993396759033203,.1405716985464096,-.11000435054302216,-.0010740868747234344,-.10900935530662537,.005125411786139011,.07505806535482407,.05864004045724869,-.11574182659387589,.02569274604320526,-.0478292778134346,.07033108174800873,.1361471265554428,.02259846031665802,-.09899065643548965,.17050954699516296,-.044089145958423615,.043967731297016144,.00482062716037035,.03003007173538208,-.10886742174625397,-.024678552523255348,-.10364051908254623,-.0006657834746874869,.05153321847319603,-.11598873883485794,-.03246511146426201,.09686388075351715,-.17342744767665863,.08359148353338242,.02867826446890831,-.06610135734081268,-.06271108239889145,.09205027669668198,-.1246715635061264,.008645511232316494,.09069368988275528,-.32701632380485535,.2624957859516144,.2014590948820114,-.010881972499191761,.18462765216827393,.055215656757354736,.01695084385573864,.006604847963899374,-.05766519904136658,-.11284063011407852,-.11373265087604523,.059907738119363785,-.031844645738601685,.1065681055188179,-.035141825675964355]]},{label:"Mark",descriptors:[[-.1839330792427063,.11347508430480957,.10340774059295654,-.02210056595504284,-.04502351954579353,-.07988779246807098,.0010356033453717828,-.1060810461640358,.11355162411928177,-.10344325006008148,.342314749956131,-.01833786629140377,-.20664522051811218,-.14036333560943604,.06792626529932022,.1604432463645935,-.1803700178861618,-.17458650469779968,-.038077227771282196,-.08959142118692398,.06147707626223564,-.01758924126625061,-.006087456364184618,.05836140736937523,-.10142801702022552,-.32402876019477844,-.09526554495096207,-.16470330953598022,.14146780967712402,-.0777614489197731,-.034572433680295944,-.06158079206943512,-.2835768163204193,-.050140198320150375,-.04608600214123726,.028008893132209778,.03958013653755188,-.06845863163471222,.16566206514835358,-.03181453049182892,-.15653462707996368,-.053573038429021835,.02805914916098118,.1943492293357849,.11280028522014618,.02368786931037903,.04386761039495468,-.03300406411290169,.05000226944684982,-.1929510533809662,.06853202730417252,.05650116503238678,.2205110788345337,.049877624958753586,.015275889076292515,-.24509023129940033,.011573728173971176,.06112810596823692,-.21561071276664734,.08574900031089783,.015134579502046108,-.07247329503297806,-.04781373590230942,-.005102790426462889,.3608434498310089,.10120102018117905,-.13581432402133942,-.10715702921152115,.1783427596092224,-.07502192258834839,-.003324335440993309,.09484238177537918,-.1137615367770195,-.13518299162387848,-.3241100609302521,.09851521998643875,.40220266580581665,.06540608406066895,-.22059966623783112,.05567973107099533,-.1509218066930771,.007477419916540384,.018444862216711044,.08840875327587128,-.08652663230895996,.051615308970212936,-.14888961613178253,.04411701858043671,.14890031516551971,-.02396639622747898,-.016231145709753036,.21613189578056335,-.06415139883756638,.09701889753341675,-.00738372839987278,.03149807080626488,-.07581955194473267,-.05822815001010895,-.010490155778825283,-.024958256632089615,.030538197606801987,-.037763599306344986,-.03317185863852501,.11009464412927628,-.1770322620868683,.05803784728050232,.002475569723173976,-.0072231655940413475,-.05467785894870758,.032308198511600494,-.04701467603445053,-.06263867765665054,.052937645465135574,-.28887811303138733,.24357055127620697,.1793004423379898,-.018087660893797874,.17240934073925018,.05621786415576935,.037942852824926376,-.013175100088119507,-.06970707327127457,-.18435464799404144,-.01957937888801098,.09845171123743057,-.09419964998960495,.08231667429208755,.05982215330004692],[-.1930667757987976,.14177179336547852,.1256123185157776,-.024257808923721313,-.014070430770516396,-.07525449991226196,.03960442915558815,-.03351284936070442,.1046479120850563,-.04621388763189316,.34323447942733765,-.00633197370916605,-.23730887472629547,-.17652393877506256,.10142947733402252,.13053222000598907,-.11793435364961624,-.1202770546078682,-.06832782179117203,-.058667462319135666,.05909202620387077,-.007009535562247038,-.0008590911747887731,.0872204452753067,-.11825665086507797,-.3375821113586426,-.0733562558889389,-.1448892205953598,.09395582228899002,-.11492816358804703,-.01683933474123478,-.029708489775657654,-.2673373222351074,-.07926908135414124,-.05954776331782341,.08792436122894287,-.048480674624443054,-.04250229522585869,.1565370112657547,-.029112493619322777,-.1644483506679535,-.03918064758181572,.026011884212493896,.23312488198280334,.1233556717634201,-.036791473627090454,.10374880582094193,.010749203152954578,-.004170291591435671,-.22497034072875977,.036960676312446594,.09117230772972107,.20660604536533356,.08345390856266022,.024436118081212044,-.2331114411354065,-.045870255678892136,.08643977344036102,-.13222284615039825,.10139366239309311,-.008677826263010502,-.08895664662122726,-.09237116575241089,.0014258434530347586,.3063476085662842,.07841655611991882,-.17650800943374634,-.11114518344402313,.14020085334777832,-.06698165088891983,-.0029488333966583014,.15440209209918976,-.11768563091754913,-.15357105433940887,-.2830633223056793,.15363338589668274,.3871312439441681,.04588181897997856,-.24295896291732788,.04091622680425644,-.21614208817481995,.02267981506884098,-.03606397658586502,.09054414927959442,-.04976093769073486,.07558868080377579,-.15357501804828644,.07891837507486343,.12688636779785156,-.036850880831480026,.0022037143353372812,.18456093966960907,-.014678913168609142,.0968434140086174,-.009732075966894627,.022970037534832954,-.07311134785413742,-.06714152544736862,-.04474051296710968,-.03779427334666252,.06034539267420769,-.09153152257204056,-.054273977875709534,.06630198657512665,-.17999275028705597,.13646483421325684,.07081097364425659,-.002916439203545451,-.010498066432774067,.05390963703393936,-.06346166133880615,-.034945935010910034,.08331706374883652,-.28302329778671265,.2666425406932831,.19251224398612976,-.02768797241151333,.16103675961494446,.10877219587564468,.05543411895632744,-.0029818813782185316,-.06214556097984314,-.1238199770450592,-.02519798092544079,.07854538410902023,-.05093419924378395,.06102875992655754,.0006370955379679799]]},{label:"Alvin",descriptors:[[-.13524460792541504,.10046545416116714,.047915782779455185,.005402038339525461,-.04671493545174599,-.17548249661922455,.025470830500125885,-.17477275431156158,.07743646949529648,-.07874995470046997,.26683512330055237,-.028651637956500053,-.19222794473171234,-.20694488286972046,.06697309762239456,.15317898988723755,-.2211027890443802,-.1389957219362259,-.057156629860401154,-.053684819489717484,.046286776661872864,-.059074245393276215,.08829842507839203,.07092099636793137,-.013805788941681385,-.32206904888153076,-.12064436823129654,-.1359599381685257,.10507573932409286,-.004415434785187244,-.06247042119503021,.060745228081941605,-.15809527039527893,-.08840887248516083,-.001647304859943688,.07099971175193787,.02173970453441143,-.023505330085754395,.18728585541248322,-.033255189657211304,-.13958732783794403,-.05034193769097328,.005306619685143232,.23240400850772858,.19577625393867493,.033795326948165894,.046797849237918854,-.005453373305499554,.09772989153862,-.19473373889923096,.01100540068000555,.10276640206575394,.16184230148792267,.012421111576259136,.026217391714453697,-.17006851732730865,.00403604656457901,.0823841467499733,-.17503447830677032,.05097823590040207,.027166904881596565,-.15482480823993683,-.07132524251937866,-.027005599811673164,.2691178023815155,.10742286592721939,-.09298817068338394,-.10462597757577896,.20226654410362244,-.12483547627925873,-.04371786490082741,.04318855330348015,-.17003056406974792,-.13289809226989746,-.25531935691833496,.04816361144185066,.3544378876686096,.07830234616994858,-.1604154258966446,.013279024511575699,-.09916811436414719,.010442730039358139,.045092105865478516,.0898260548710823,-.07693076133728027,.018382729962468147,-.18921883404254913,-.010191519744694233,.11648602783679962,-.0935416892170906,.0008223960758186877,.23883135616779327,-.034168682992458344,.11782017350196838,.01807774230837822,-.04730689898133278,-.014608419500291348,.017423145473003387,-.1141851395368576,-.012849580496549606,.06879432499408722,-.12088377773761749,-.003878585994243622,.06320449709892273,-.1124439463019371,-.015892304480075836,-.01927073858678341,.05195709690451622,-.02760624885559082,-.02783457189798355,-.08226913213729858,-.10123159736394882,.09041536599397659,-.17924541234970093,.21029815077781677,.24592669308185577,-.0015516224084421992,.12264647334814072,.035551223903894424,.07017453759908676,.0005875274073332548,-.07568913698196411,-.14061875641345978,.006591503974050283,.11183210462331772,-.021257905289530754,-.016620654612779617,.022435510531067848],[-.13524460792541504,.10046545416116714,.047915782779455185,.005402038339525461,-.04671493545174599,-.17548249661922455,.025470830500125885,-.17477275431156158,.07743646949529648,-.07874995470046997,.26683512330055237,-.028651637956500053,-.19222794473171234,-.20694488286972046,.06697309762239456,.15317898988723755,-.2211027890443802,-.1389957219362259,-.057156629860401154,-.053684819489717484,.046286776661872864,-.059074245393276215,.08829842507839203,.07092099636793137,-.013805788941681385,-.32206904888153076,-.12064436823129654,-.1359599381685257,.10507573932409286,-.004415434785187244,-.06247042119503021,.060745228081941605,-.15809527039527893,-.08840887248516083,-.001647304859943688,.07099971175193787,.02173970453441143,-.023505330085754395,.18728585541248322,-.033255189657211304,-.13958732783794403,-.05034193769097328,.005306619685143232,.23240400850772858,.19577625393867493,.033795326948165894,.046797849237918854,-.005453373305499554,.09772989153862,-.19473373889923096,.01100540068000555,.10276640206575394,.16184230148792267,.012421111576259136,.026217391714453697,-.17006851732730865,.00403604656457901,.0823841467499733,-.17503447830677032,.05097823590040207,.027166904881596565,-.15482480823993683,-.07132524251937866,-.027005599811673164,.2691178023815155,.10742286592721939,-.09298817068338394,-.10462597757577896,.20226654410362244,-.12483547627925873,-.04371786490082741,.04318855330348015,-.17003056406974792,-.13289809226989746,-.25531935691833496,.04816361144185066,.3544378876686096,.07830234616994858,-.1604154258966446,.013279024511575699,-.09916811436414719,.010442730039358139,.045092105865478516,.0898260548710823,-.07693076133728027,.018382729962468147,-.18921883404254913,-.010191519744694233,.11648602783679962,-.0935416892170906,.0008223960758186877,.23883135616779327,-.034168682992458344,.11782017350196838,.01807774230837822,-.04730689898133278,-.014608419500291348,.017423145473003387,-.1141851395368576,-.012849580496549606,.06879432499408722,-.12088377773761749,-.003878585994243622,.06320449709892273,-.1124439463019371,-.015892304480075836,-.01927073858678341,.05195709690451622,-.02760624885559082,-.02783457189798355,-.08226913213729858,-.10123159736394882,.09041536599397659,-.17924541234970093,.21029815077781677,.24592669308185577,-.0015516224084421992,.12264647334814072,.035551223903894424,.07017453759908676,.0005875274073332548,-.07568913698196411,-.14061875641345978,.006591503974050283,.11183210462331772,-.021257905289530754,-.016620654612779617,.022435510531067848]]},{label:"DICTMisOr.PD-Nideliza",descriptors:[[-.04948747530579567,.13704454898834229,.1166793629527092,-.07147523760795593,-.12973690032958984,-.030423479154706,-.08338122069835663,-.08113933354616165,.21314072608947754,-.11504636704921722,.2490246295928955,-.025083085522055626,-.24619920551776886,-.03777023032307625,.007274214178323746,.18891219794750214,-.1544676423072815,-.1344119757413864,-.07399441301822662,-.03387515991926193,-.0077562713995575905,.019951993599534035,.09381993114948273,.01701737381517887,-.1503855586051941,-.42882588505744934,-.08538995683193207,-.08491324633359909,.020866557955741882,-.020659299567341805,-.08334671705961227,-.022517170757055283,-.16766910254955292,-.058487195521593094,.04900127276778221,.11317529529333115,-.1003132313489914,-.1450638473033905,.21785171329975128,-.01831599697470665,-.2679511308670044,-.04329913854598999,.05344756320118904,.17600424587726593,.18968762457370758,.050200268626213074,.07694954425096512,-.13936029374599457,.1822877675294876,-.15626606345176697,-.001176116056740284,.14696331322193146,.04567207023501396,.05669759213924408,.06879831850528717,-.08438566327095032,.02604362741112709,.19727279245853424,-.18948206305503845,-.12220024317502975,.04924609139561653,-.06206481158733368,-.013520189560949802,-.10198307037353516,.27205923199653625,.10867225378751755,-.10822196304798126,-.1605122834444046,.1619545966386795,-.14418545365333557,-.07797931134700775,.06841006129980087,-.12861871719360352,-.14775961637496948,-.3181191682815552,-.020150449126958847,.36286595463752747,.06847968697547913,-.10342104732990265,.010495495982468128,-.05954374000430107,-.023793591186404228,.05723445117473602,.0914347842335701,-.054074838757514954,.0063750552944839,-.11451482027769089,-.039994485676288605,.2862432897090912,-.11523456126451492,.03269810229539871,.12477080523967743,.0024850841145962477,.0878143459558487,-.004711545538157225,.045102640986442566,-.1905769258737564,.05075202137231827,-.1683104932308197,.010520102456212044,.004522157367318869,.02671962045133114,-.008840388618409634,.08188031613826752,-.1964862048625946,.0724969357252121,.014250868000090122,-.07807005196809769,.0027629202231764793,-.03868160769343376,-.09896279126405716,-.13087035715579987,.1270439326763153,-.24132497608661652,.17221759259700775,.1698533445596695,.031240476295351982,.15705953538417816,.11685818433761597,.036892153322696686,-.05178811028599739,-.03526733070611954,-.1881825476884842,-.07324232161045074,.09438207000494003,-.0088731087744236,.07527945935726166,-.02224513329565525],[-.10075211524963379,.13015131652355194,.0766550824046135,-.060520343482494354,-.11957520991563797,-.08206202834844589,-.14340946078300476,-.1690034121274948,.15052691102027893,-.1419387310743332,.23599687218666077,-.09004703164100647,-.20126499235630035,-.07998446375131607,-.05431532859802246,.1780005842447281,-.20180228352546692,-.14646464586257935,-.050994616001844406,.021001720800995827,.07935407757759094,-.020597312599420547,.09061360359191895,.05639391019940376,-.11911921203136444,-.4295167922973633,-.10171568393707275,-.09132694453001022,.006040739361196756,-.02553708665072918,-.11463358253240585,.010379786603152752,-.19063767790794373,-.11539168655872345,.03887300565838814,.03154143691062927,-.010227671824395657,-.10727360099554062,.19717106223106384,-.026963137090206146,-.26161134243011475,-.045702166855335236,.045223891735076904,.19786730408668518,.17628952860832214,.01399894617497921,.0771542564034462,-.1417664885520935,.20060408115386963,-.16718626022338867,.02390371821820736,.10456325858831406,.10929439216852188,.013290798291563988,.06794236600399017,-.10826288163661957,.029656119644641876,.20760571956634521,-.14738324284553528,-.027422532439231873,.08962308615446091,-.09414692223072052,-.027728574350476265,-.0874788910150528,.24680842459201813,.12933561205863953,-.06173988804221153,-.1756216138601303,.1775408536195755,-.04632532596588135,-.018858609721064568,.07989845424890518,-.139149472117424,-.15717390179634094,-.28633034229278564,-.05516553297638893,.37148067355155945,.06511220335960388,-.16786430776119232,-.005174027290195227,-.09165513515472412,.02973228693008423,.0949198454618454,.069118432700634,-.049166467040777206,.031677111983299255,-.11487529426813126,-.012172941118478775,.23578956723213196,-.07406207919120789,-.005439361557364464,.17601236701011658,-.000262328190729022,.0585993155837059,.06608585268259048,.016414528712630272,-.16454899311065674,.028409961611032486,-.17092165350914001,.013131926767528057,.009714249521493912,.01891917735338211,-.021892715245485306,.09151426702737808,-.15250812470912933,.02922581136226654,-.020043084397912025,-.013390988111495972,-.01063891127705574,-.07050730288028717,-.06456626206636429,-.10800506174564362,.07594107836484909,-.20829404890537262,.11708058416843414,.1223539188504219,.06869316846132278,.1661311686038971,.059813838452100754,.012018335983157158,-.034444354474544525,-.04657981917262077,-.18571659922599792,-.028925927355885506,.1650417596101761,-.008990410715341568,.05843181163072586,-.0473007969558239]]},{label:"DICT10RD-Ms.Sittie",descriptors:[[-.044561609625816345,.07436881959438324,.08176025003194809,-.03572539612650871,-.1292719542980194,-.029096456244587898,-.07596778869628906,-.14026136696338654,.1459789127111435,-.12395787984132767,.16835588216781616,-.08719366043806076,-.2553344964981079,-.03296399861574173,.0019834621343761683,.2097426950931549,-.13939762115478516,-.1300637573003769,-.06650163978338242,-.008133760653436184,.003471027361229062,-.02500925399363041,.06337182968854904,.07945264875888824,-.06037667393684387,-.3492766320705414,-.13234438002109528,-.1143914982676506,-.038145966827869415,-.07850388437509537,-.12365081906318665,.027236640453338623,-.10511388629674911,-.01920139044523239,.026742197573184967,.12632551789283752,-.023471765220165253,-.11587020754814148,.12156683206558228,-.08846211433410645,-.2953832447528839,.02338038571178913,.052843958139419556,.1740933209657669,.2364182472229004,.08016776293516159,-.00726960739120841,-.13876627385616302,.15328437089920044,-.18462495505809784,.07583725452423096,.11291195452213287,.009465591982007027,.026126563549041748,.011624537408351898,-.15975792706012726,.01958269625902176,.15702207386493683,-.1403842270374298,-.05659179016947746,.09042392671108246,-.08515247702598572,-.016877079382538795,-.08279242366552353,.25275301933288574,.14833885431289673,-.1427830457687378,-.15629051625728607,.11907374858856201,-.20223022997379303,-.05984794348478317,.0231988076120615,-.19781549274921417,-.1804308146238327,-.2945766746997833,-.0027789948508143425,.4075669050216675,.08566202223300934,-.15668123960494995,.048758212476968765,-.05354586988687515,.031814515590667725,.10556364804506302,.1849832981824875,.008504941128194332,-.01544200535863638,-.11684828251600266,-.04271543771028519,.23619681596755981,-.12452644854784012,.03653992339968681,.22080190479755402,-.03743333742022514,.09374731779098511,-.01576417312026024,.02700081840157509,-.07739986479282379,.03951118141412735,-.1687699258327484,-.010267316363751888,-.0023560128174722195,.005921971518546343,-.04560214653611183,.08587919920682907,-.19273898005485535,.08906369656324387,.020308125764131546,.03578498959541321,.04533200338482857,-.05906211584806442,-.08787184208631516,-.09343520551919937,.1840294897556305,-.2375388890504837,.15509770810604095,.19078177213668823,.09641816467046738,.12156538665294647,.10552272945642471,.1013483852148056,.02462136186659336,-.06860984116792679,-.2728899121284485,.04635774716734886,.1569971889257431,-.04381031170487404,.0119598638266325,.031008251011371613],[-.03687131032347679,.04323788359761238,.06547622382640839,-.05279054492712021,-.10697019100189209,.04186451435089111,-.09282369166612625,-.11647101491689682,.10353126376867294,-.18238286674022675,.18018174171447754,-.09607937932014465,-.2088325321674347,-.0397554449737072,-.025593912228941917,.2298387736082077,-.19227899610996246,-.14862218499183655,-.028386415913701057,-.022325018420815468,.02138449251651764,-.024879658594727516,-.02284594252705574,.04675246402621269,-.08245175331830978,-.3529592752456665,-.13877186179161072,-.08857231587171555,-.023001573979854584,-.07730545103549957,-.16289262473583221,.007872927002608776,-.12793613970279694,-.006990957073867321,.025705942884087563,.0710778683423996,-.0027255199383944273,-.11380567401647568,.16988596320152283,-.029378356412053108,-.23751671612262726,.0364721305668354,.11250689625740051,.1723719835281372,.2207280546426773,.04918723925948143,.005989158526062965,-.14667591452598572,.11976969242095947,-.18137772381305695,.055382028222084045,.12454093992710114,.044266920536756516,.08120249956846237,-.039452534168958664,-.12779371440410614,-.0034495415166020393,.1257697194814682,-.12399308383464813,-.008177351206541061,.10292861610651016,-.06314048171043396,-.02807721123099327,-.05136754736304283,.2785056531429291,.14110274612903595,-.13351191580295563,-.21968857944011688,.1448376178741455,-.19306281208992004,-.0812375545501709,-.0015494973631575704,-.1457027941942215,-.17200586199760437,-.2595691680908203,.017659394070506096,.37515076994895935,.1073211133480072,-.19258424639701843,.05133066326379776,-.0721910297870636,-.044618070125579834,.1706688106060028,.18666690587997437,.02324521914124489,-.003886875929310918,-.05190815031528473,-.019891731441020966,.2791702151298523,-.06412962824106216,.042326029390096664,.21895341575145721,-.0019158945651724935,.0699378252029419,.03733697533607483,.05887521058320999,-.06646350771188736,.03662722185254097,-.17002169787883759,-.0011663654586300254,-.02503138966858387,-.0066044810228049755,-.02270500734448433,.1370304375886917,-.17339150607585907,.12450124323368073,-.027516786009073257,-.004943832755088806,.031768787652254105,-.048552099615335464,-.09367851167917252,-.08607430011034012,.16699360311031342,-.23270747065544128,.08274433016777039,.17389310896396637,.09450199455022812,.11411655694246292,.13513566553592682,.13190968334674835,.02710300125181675,-.0686575323343277,-.3041979670524597,.04347914829850197,.13080812990665436,-.05347352847456932,.03192295879125595,.017262335866689682]]},{label:"Sarah",descriptors:[[-.025772927328944206,.025137754157185555,.08266998827457428,-.05903521552681923,-.14313851296901703,-.03933454677462578,-.048097163438797,-.11631891131401062,.1305294781923294,-.12289503216743469,.2966286838054657,-.09093386679887772,-.21600410342216492,-.07099589705467224,-.07731319963932037,.21967735886573792,-.21160614490509033,-.11982591450214386,-.028829000890254974,.04597330093383789,.040174879133701324,-.012816128320991993,.006196622736752033,.025529665872454643,-.1586131900548935,-.3494558334350586,-.07994600385427475,-.07245955616235733,-.10648791491985321,-.07778047025203705,-.03963007032871246,.14683979749679565,-.18949384987354279,-.05419141799211502,-.025992538779973984,.06437477469444275,-.04234405979514122,-.07855916023254395,.16159306466579437,.06743988394737244,-.30845049023628235,.019625931978225708,.03958124667406082,.28012681007385254,.14180035889148712,-.014983377419412136,-.0009120928589254618,-.06984156370162964,.07785665988922119,-.24802441895008087,.020365390926599503,.08359742909669876,.08079752326011658,.016587361693382263,-.005243183579295874,-.12476357072591782,.007777075283229351,.11530593782663345,-.15254610776901245,.013061248697340488,.06332642585039139,-.11380762606859207,.008977300487458706,-.13914696872234344,.2308233380317688,.12785601615905762,-.12078921496868134,-.08571282774209976,.10426988452672958,-.06362400949001312,-.10943075269460678,.06396986544132233,-.16644741594791412,-.21865008771419525,-.38247716426849365,-.00718721654266119,.4662090837955475,.06988157331943512,-.22112378478050232,-.034765854477882385,-.007069917395710945,-.02575996331870556,.14783920347690582,.21794544160366058,.06109609827399254,.06411902606487274,-.08213099837303162,.025982899591326714,.20010341703891754,-.09817365556955338,-.07751993089914322,.22375014424324036,-.03930099681019783,.06757066398859024,.00790469441562891,.013455145061016083,-.03300980478525162,.06024516001343727,-.1585799902677536,.020710963755846024,.0021004367154091597,-.016605013981461525,-.051307763904333115,.11432435363531113,-.09562939405441284,.09080605208873749,.05699905380606651,-.00865962915122509,.022748015820980072,-.011212647892534733,-.07023338973522186,-.08313320577144623,.11837131530046463,-.23454062640666962,.13880261778831482,.16712985932826996,.046626172959804535,.12474378198385239,.089088574051857,.04225405305624008,-.048055656254291534,-.033306241035461426,-.22256238758563995,.006233267020434141,.12323320657014847,-.027244932949543,.10620203614234924,-.005260803271085024],[-.10328751057386398,.06082586199045181,.09807775914669037,-.0864066481590271,-.0751151517033577,-.0382266528904438,-.027269216254353523,-.1676846146583557,.11657166481018066,-.12654981017112732,.30096369981765747,-.11283276975154877,-.2094070166349411,-.06114634871482849,-.06961484998464584,.2124500423669815,-.2373456358909607,-.10256162285804749,-.0928569957613945,.020053815096616745,.06713149696588516,-.010441283695399761,.0015124368946999311,.016730479896068573,-.1639673411846161,-.34388014674186707,-.07611339539289474,-.06950076669454575,-.04485679417848587,-.041524339467287064,-.06471807509660721,.05681336671113968,-.1783781796693802,-.03171271085739136,-.006731903180480003,.09221990406513214,-.014348026365041733,-.10992839932441711,.12839236855506897,-.01869170553982258,-.2994219958782196,.03919629007577896,.05107445642352104,.2511412501335144,.1843453198671341,-.006332553923130035,-.02268275059759617,-.12411732971668243,.12459857761859894,-.1803835779428482,-.04915759339928627,.07295253872871399,.04902895912528038,.030766328796744347,.009507599286735058,-.11306795477867126,.0251120924949646,.1283840835094452,-.16981087625026703,-.05873170122504234,.05384537950158119,-.11016532778739929,.011467112228274345,-.16163136065006256,.17398808896541595,.09112896770238876,-.1491873860359192,-.10261964052915573,.11272864043712616,-.0761287733912468,-.05044880136847496,.05320851504802704,-.18034817278385162,-.2154237926006317,-.3731335401535034,-.043275605887174606,.4304582476615906,.07532383501529694,-.17998331785202026,-.026081513613462448,-.012171130627393723,.0042356280609965324,.15648113191127777,.17313502728939056,.023628225550055504,.06952039897441864,-.07250094413757324,.05376151204109192,.21395429968833923,-.09009260684251785,-.039031967520713806,.20961634814739227,-.058128371834754944,.03377661481499672,-.02387445606291294,.04518363997340202,-.07431899756193161,.07478474825620651,-.1463160365819931,.044980961829423904,.023822586983442307,-.012401130050420761,-.001510639674961567,.12531161308288574,-.13681289553642273,.09296070039272308,.05916470289230347,.029106544330716133,.028655219823122025,-.050797611474990845,-.05432828515768051,-.04095203056931496,.12302430719137192,-.24070735275745392,.1335432231426239,.22474496066570282,.05891333520412445,.10125859081745148,.07958932220935822,-.010406643152236938,-.05900180712342262,.0018951534293591976,-.2599727213382721,.0077939722687006,.11772295832633972,-.041200123727321625,.11749352514743805,-.020896684378385544]]},{label:"PGMOBMD2Bliss",descriptors:[[.03611762449145317,.10236989706754684,.10888762772083282,.013133320026099682,-.07597658038139343,.004009689204394817,-.07774979621171951,-.1547137349843979,.052312202751636505,-.09580923616886139,.17319771647453308,-.01004925649613142,-.11915994435548782,-.05220543593168259,-.011655330657958984,.13728751242160797,-.2018076479434967,-.15975381433963776,-.020301593467593193,-.04601390287280083,.10468194633722305,-.017766883596777916,-.0036025180015712976,.002060237806290388,-.09776005893945694,-.3362826108932495,-.15029548108577728,-.05361918359994888,.1661025881767273,-.04144454002380371,-.05646425485610962,.00044425050145946443,-.17548930644989014,-.06781584769487381,.04617802053689957,.05522606149315834,-.024916131049394608,-.11593477427959442,.10944627225399017,.0014309707330539823,-.13982872664928436,.20239348709583282,-.022845592349767685,.26895925402641296,.18971145153045654,.1112842708826065,.05948491021990776,-.07196506857872009,.11663712561130524,-.1620175838470459,.024792924523353577,.1410367786884308,.12159895151853561,.08818834275007248,.013877184130251408,-.12143439799547195,.08881940692663193,.08036080002784729,-.1692012995481491,.04521946609020233,.0859963446855545,-.07538604736328125,.10119325667619705,-.04130708798766136,.1862136721611023,-.006301595829427242,-.05976361408829689,-.12222815304994583,.12301409989595413,-.0690605640411377,-.05221054330468178,-.05257250741124153,-.16794845461845398,-.11750911921262741,-.2255803942680359,.10884557664394379,.46476665139198303,.14679215848445892,-.18793070316314697,.0949317216873169,-.048785071820020676,.07565770298242569,.10989987850189209,.0505831241607666,-.05618835985660553,-.04997246339917183,-.10543473064899445,.011890008114278316,.1876954287290573,-.06360100954771042,-.026081141084432602,.1755627989768982,-.024404603987932205,.06634397804737091,.06000741198658943,-.005340060219168663,-.10990172624588013,.09785377979278564,-.1098632737994194,-.008066704496741295,.0019864607602357864,-.047382257878780365,.03223823755979538,.1441299021244049,-.16048890352249146,.1700482815504074,-.038480404764413834,.016982587054371834,.022557787597179413,.06392393261194229,-.15621605515480042,-.0342756025493145,.11424406617879868,-.275140643119812,.21448369324207306,.27589544653892517,.06326168030500412,.10926836729049683,.11039188504219055,.07249083369970322,1838970092649106e-20,.009602276608347893,-.19968143105506897,-.08264823257923126,.10940967500209808,-.02807929739356041,.009429395198822021,.0303796473890543],[-.026727594435214996,.13319796323776245,.09356469660997391,-.022065939381718636,-.10811831057071686,.008600763976573944,-.04756653681397438,-.10371626913547516,.06969520449638367,-.0803244337439537,.15088193118572235,-.019926872104406357,-.1297919899225235,-.06903644651174545,-.016753682866692543,.12690232694149017,-.20409274101257324,-.1870427429676056,-.014279293827712536,-.07079844176769257,.09753362834453583,-.005825413390994072,-.0007300979923456907,.015453378669917583,-.1388782411813736,-.3472873866558075,-.11556126922369003,-.058898404240608215,.1668591946363449,-.03982161357998848,-.04953518882393837,-.01744162291288376,-.21113468706607819,-.06458885222673416,.005779710598289967,.06757862120866776,-.029288744553923607,-.10917103290557861,.10264195501804352,.012712189927697182,-.14511176943778992,.16886666417121887,-.0033028647303581238,.2918546199798584,.1961604654788971,.14765138924121857,.04154771938920021,-.030151259154081345,.08960774540901184,-.17228882014751434,.02564084343612194,.12230753898620605,.08957065641880035,.0832735002040863,-.01231217011809349,-.1266181468963623,.08756795525550842,.05099900811910629,-.18212772905826569,.03163950890302658,.033800628036260605,-.10321526974439621,.10068587213754654,-.03176826238632202,.24377857148647308,.003430795157328248,-.0282985158264637,-.10142134130001068,.14058208465576172,-.11652062833309174,-.04962991550564766,-.027506554499268532,-.12088384479284286,-.08112829178571701,-.22764188051223755,.11250952631235123,.43266093730926514,.14680229127407074,-.1447574347257614,.08675273507833481,-.032786622643470764,.06936314702033997,.114630788564682,.053429875522851944,-.09444604068994522,-.03660980984568596,-.1259007304906845,.017045438289642334,.23329031467437744,-.06606022268533707,-.040131933987140656,.1802249401807785,.013814340345561504,.04972564056515694,.0733315721154213,-.019355954602360725,-.10300817340612411,.09427814930677414,-.07833776623010635,.003411922138184309,.051487453281879425,-.0706760361790657,.01854538731276989,.13086824119091034,-.17771457135677338,.130044087767601,-.03181784972548485,-.015833666548132896,-.00317155453376472,.049209628254175186,-.14150676131248474,-.054793450981378555,.1104809045791626,-.26595109701156616,.23337693512439728,.29233410954475403,.051672764122486115,.14491048455238342,.11332292854785919,.04655740037560463,.0015026479959487915,.008250339888036251,-.1453482061624527,-.08689817041158676,.1306835263967514,-.04952908679842949,.07076670974493027,.05727814510464668]]},{label:"PGMOBMD2Dexter",descriptors:[[-.13848114013671875,.06522589176893234,.09816105663776398,.0006267845164984465,-.11046842485666275,-.09651114791631699,-.07064814120531082,-.10840070992708206,.11382261663675308,-.046846844255924225,.255254328250885,-.05708320066332817,-.23706306517124176,-.12859153747558594,-.0083547905087471,.17838826775550842,-.23142790794372559,-.15413635969161987,-.041620731353759766,-.0047053564339876175,.030232533812522888,-.05401492491364479,.09094230085611343,-.01828562468290329,-.07647362351417542,-.39494794607162476,-.12001918256282806,-.12345348298549652,.03007701225578785,-.07062770426273346,-.04637081176042557,-.02789665199816227,-.2055969387292862,-.10475952923297882,.024343768134713173,.09562193602323532,-.06033121794462204,-.04748036339879036,.18498997390270233,-.036566827446222305,-.22630789875984192,-.11766917258501053,.05144602060317993,.22094064950942993,.14237818121910095,.13607825338840485,.028194881975650787,-.07643153518438339,.0726792961359024,-.17075364291667938,.09876135736703873,.12433476746082306,.13518421351909637,.018520236015319824,.021715711802244186,-.09232284873723984,.03460979089140892,.1837884783744812,-.2041543871164322,.01986151933670044,.11887319386005402,-.09186241030693054,-.04784392938017845,-.02455807477235794,.32547828555107117,.1535155177116394,-.08795793354511261,-.13560344278812408,.21316109597682953,-.10509571433067322,-.07447654008865356,.06571833044290543,-.12262566387653351,-.16177299618721008,-.31644150614738464,-.04880523681640625,.4535101056098938,-.00607086718082428,-.13967670500278473,-.06490276008844376,-.057531535625457764,-.0262269489467144,.10058672726154327,.12671048939228058,-.08851899951696396,.05186961218714714,-.1530284285545349,-.01846897229552269,.19801518321037292,-.07934212684631348,-.012815415859222412,.12060500681400299,.0011072122724726796,.055702924728393555,.043677832931280136,-.008503133431077003,-.026969002559781075,.023690389469265938,-.1568169742822647,-.052962157875299454,.029259169474244118,-.012064189650118351,-.030392488464713097,.08452358096837997,-.06993306428194046,.005076454021036625,.04607302322983742,-.025592034682631493,-.016908029094338417,-.054186929017305374,-.07039288431406021,-.16461004316806793,.11352305114269257,-.2231438159942627,.1692458838224411,.19369842112064362,.024530276656150818,.10919594764709473,.029061349108815193,.08860853314399719,-.02275223657488823,-.06544795632362366,-.21305951476097107,.006771676242351532,.08413862437009811,-.014447348192334175,.08466851711273193,.00914532970637083],[-.17890244722366333,.11516418308019638,.043482694774866104,-.013341032899916172,-.08872521668672562,-.10601359605789185,-.05995284393429756,-.11737094074487686,.12071734666824341,-.049878790974617004,.2716822624206543,-.06817575544118881,-.24952703714370728,-.15345266461372375,-.00817854329943657,.1686660200357437,-.18677572906017303,-.12029649317264557,-.06880122423171997,-.02613772079348564,.059877391904592514,-.026117822155356407,.10461173951625824,-15648522094124928e-21,-.044451795518398285,-.40312010049819946,-.1533125936985016,-.1010630801320076,.015056966803967953,-.0924973264336586,-.04035021364688873,-.0036398451775312424,-.20411130785942078,-.1642538160085678,.025383353233337402,.0850517600774765,-.07523298263549805,-.04985795542597771,.18659092485904694,-.012475177645683289,-.13864541053771973,-.1253979653120041,.06702352315187454,.2648979425430298,.1387747824192047,.10022830218076706,.051455412060022354,-.0488612987101078,.05914611741900444,-.16384828090667725,.07652460783720016,.08237648755311966,.16637146472930908,.06564347445964813,.05330227315425873,-.13462115824222565,.052486903965473175,.16971823573112488,-.16684968769550323,.0017041268292814493,.060379453003406525,-.10001756995916367,-.058584511280059814,.009626231156289577,.33518853783607483,.14123108983039856,-.07425025850534439,-.14379018545150757,.18462404608726501,-.060811035335063934,-.03665972501039505,.06753668189048767,-.1287412941455841,-.14529754221439362,-.29321005940437317,-.02297370880842209,.41502687335014343,-.022340446710586548,-.1379632204771042,-.033695951104164124,-.07884830981492996,-.05758243054151535,.04974822327494621,.09556268900632858,-.09841185808181763,.06419708579778671,-.14971639215946198,.01228122878819704,.17522183060646057,-.07966575771570206,-.0351581871509552,.15644459426403046,.004434972070157528,.08102799952030182,.07695747911930084,-.019990885630249977,-.03654709830880165,.024075644090771675,-.11676199734210968,-.018067121505737305,.03835904225707054,-.07530946284532547,-.05781516060233116,.04889338091015816,-.10494540631771088,.029334288090467453,.04985334351658821,.005776123609393835,-.07340677082538605,-.09728337079286575,-.08733971416950226,-.08844080567359924,.10439659655094147,-.25911441445350647,.17043709754943848,.19234228134155273,.0023370878770947456,.15538766980171204,.03420345112681389,.04773101583123207,.011866750195622444,-.053156331181526184,-.18658199906349182,.0072454544715583324,.09816214442253113,.0010921527864411473,.04662332311272621,.020759321749210358]]},{label:"PGMOBMD1Fredrick",descriptors:[[-.0438804030418396,.08665025234222412,.0942021906375885,.029072925448417664,-.04852798208594322,-.06693167239427567,-.05134625360369682,-.07758874446153641,.03809889405965805,.03751518577337265,.23397471010684967,-.05410667508840561,-.2088833749294281,-.09644944220781326,.004607980139553547,.19918715953826904,-.15628176927566528,-.12751272320747375,-.08375920355319977,-.036483705043792725,.046476587653160095,-.04023826867341995,.043330103158950806,-.01734604313969612,-.054534394294023514,-.3525925576686859,-.11885630339384079,-.005697989370673895,.11304482817649841,-.06304890662431717,-.05491243675351143,.030726879835128784,-.17334076762199402,-.061707690358161926,.06811761856079102,.06674589961767197,-.02912617288529873,-.10504519194364548,.20413975417613983,-.010910404846072197,-.15970467031002045,.10188698023557663,.07264907658100128,.2274387776851654,.17259494960308075,.07604740560054779,.10359678417444229,-.07103776186704636,.04671841114759445,-.15565606951713562,.05331692099571228,.1507858783006668,.09716559201478958,.0755581259727478,.04796002432703972,-.12008512765169144,-.024998506531119347,.07741563767194748,-.1177375540137291,.02201109565794468,.0711304321885109,-.05464668944478035,-.00505869323387742,-.14344924688339233,.16543743014335632,.06494128704071045,-.07853830605745316,-.18864159286022186,.12219816446304321,-.0798930674791336,-.10412463545799255,-.008954518474638462,-.1330130249261856,-.08325794339179993,-.37453457713127136,.03719506040215492,.36602139472961426,.05818668007850647,-.1712293177843094,.07512251287698746,-.029443178325891495,-.012859908863902092,.026202458888292313,.02579336054623127,-.10314348340034485,.05069030076265335,-.13524191081523895,.018108543008565903,.21334199607372284,-.05674540996551514,-.04259226471185684,.08774671703577042,-.026470215991139412,.08491115272045135,.023845940828323364,.056985076516866684,-.05590303614735603,.009269215166568756,-.1521555334329605,-.019203387200832367,.03545068949460983,-.06813028454780579,.03729010745882988,.09775163978338242,-.13041065633296967,.08224107325077057,.012778457254171371,.011364401318132877,-.05152583494782448,.09167400002479553,-.16206982731819153,.0034654741175472736,.10184924304485321,-.2385415881872177,.24188414216041565,.22107619047164917,.042630597949028015,.04054230451583862,.1462411880493164,.08537965267896652,-.04782230406999588,.013723603449761868,-.1129845678806305,-.09675965458154678,.034053023904561996,.06235995888710022,.08388947695493698,.10499490052461624],[-.10124938935041428,.024199213832616806,.06949961185455322,-.03509189561009407,-.04868501052260399,-.06540418416261673,-.037120070308446884,-.1141798123717308,.03186580166220665,-.0398140624165535,.23933951556682587,-.05902143567800522,-.2175605148077011,-.12415169924497604,-.010370663367211819,.19580258429050446,-.17621654272079468,-.15380439162254333,-.10145654529333115,-.057404860854148865,.03298621624708176,-.04940575361251831,.041109923273324966,-.01710924506187439,-.058632977306842804,-.3823840022087097,-.1299942582845688,-.037211574614048004,.06819098442792892,-.000551148783415556,-.04047362506389618,.02631463296711445,-.19664020836353302,-.04853912815451622,.06732504814863205,.08296534419059753,-.005167834926396608,-.07152952998876572,.17807070910930634,.001806613989174366,-.18055875599384308,.10840658098459244,.07888278365135193,.21560269594192505,.15498602390289307,.09537800401449203,.08175003528594971,-.1184859648346901,.044714443385601044,-.10512001812458038,.06020665913820267,.1230834573507309,.09102654457092285,.030523626133799553,.05368594825267792,-.09049394726753235,.03003079816699028,.09469401836395264,-.1538902372121811,-.035512134432792664,.0741683840751648,-.0640551820397377,-.062219467014074326,-.1044762060046196,.1853681355714798,.10342974215745926,-.06931785494089127,-.21576525270938873,.15745942294597626,-.10122792422771454,-.08986365795135498,.00017800621571950614,-.1257646679878235,-.07612811028957367,-.32367175817489624,.040109939873218536,.402826726436615,.05613081529736519,-.15659962594509125,.10801952332258224,-.026714876294136047,.0014228920917958021,.13386070728302002,.06730400025844574,-.10485479980707169,.054627351462841034,-.09189041703939438,.006729714572429657,.15940162539482117,-.03356289491057396,-.030288532376289368,.10298608988523483,-.004896920174360275,.06571437418460846,.07516037672758102,.006724101956933737,-.045969415456056595,.046591877937316895,-.14039334654808044,-.027638321742415428,.05225168168544769,-.030399257317185402,.05543450266122818,.05176621675491333,-.12109390646219254,.03785451129078865,-.0036354002077132463,.004506333731114864,.003586821025237441,.05810725316405296,-.09303253144025803,-.055201344192028046,.04239495098590851,-.2959734797477722,.18632403016090393,.21641434729099274,.009888360276818275,.07122760266065598,.15375995635986328,.08462153375148773,-.025818755850195885,.018332362174987793,-.18161945044994354,-.04563327878713608,.08717460930347443,.05205101519823074,.0964585393667221,.05601080134510994]]},{label:"PGMOBMD2Gerardo",descriptors:[[-.01737171784043312,.033012863248586655,.02786429412662983,-.08645512163639069,-.05826336517930031,-.10206996649503708,-.075590118765831,-.17140324413776398,.10482573509216309,-.09572269022464752,.2566644251346588,-.08806402236223221,-.2144506722688675,-.09693865478038788,.016623008996248245,.16422438621520996,-.17512403428554535,-.0968671664595604,-.026811398565769196,-.055154018104076385,.04215085878968239,-.01551918126642704,.09007395803928375,.04760323464870453,-.06821905076503754,-.3512486517429352,-.1471809446811676,-.06941980123519897,.07518920302391052,-.038724612444639206,-.07308212667703629,.03430238738656044,-.22840239107608795,-.14770157635211945,.0595511719584465,.06016184017062187,-.050648391246795654,-.10591860860586166,.18408693373203278,.03252580389380455,-.13161112368106842,-.009484823793172836,.012221002951264381,.2616308331489563,.1255265325307846,.06571592390537262,.09132037311792374,-.1464129537343979,.0895349532365799,-.16726495325565338,.07926242798566818,.12760253250598907,.0686175748705864,.028394848108291626,-.011856191791594028,-.11692896485328674,.06509687006473541,.1523825228214264,-.1803646683692932,.06515774875879288,.1653314232826233,-.009689750149846077,-.03919633477926254,-.05834057182073593,.284932017326355,.07585068047046661,-.13389059901237488,-.1101011410355568,.12879176437854767,-.023044941946864128,-.04276609420776367,-.008298362605273724,-.19862715899944305,-.19443589448928833,-.29120030999183655,.0411217100918293,.3714810609817505,.07014425098896027,-.17622525990009308,.024878405034542084,-.09533181041479111,.03804921358823776,.13932272791862488,.09483710676431656,-.02500295639038086,.045522596687078476,-.0947178527712822,.07528278231620789,.1652136743068695,-.09322434663772583,-.04409553483128548,.20144903659820557,-.038882963359355927,.08353271335363388,.04194966331124306,.08369745314121246,-.12289503216743469,.031197670847177505,-.19175590574741364,-.016373276710510254,.09743134677410126,.005504231434315443,.01653873175382614,.1477544903755188,-.12952496111392975,.13525642454624176,.006774583365768194,-.02679860033094883,.008403454907238483,-.06725190579891205,-.10082309693098068,-.09840178489685059,.09022587537765503,-.1922406256198883,.1741759479045868,.19893674552440643,.09294408559799194,.12244832515716553,.08934364467859268,.041582975536584854,.00573962926864624,-.03972010686993599,-.21844381093978882,-.010172806680202484,.09610147029161453,.04441671818494797,.06934014707803726,-.0069165644235908985],[-.06866738200187683,.06351678818464279,.03831867873668671,-.07806678861379623,-.10889882594347,-.1303815394639969,-.039913516491651535,-.12895408272743225,.1209513321518898,-.07035069167613983,.28795942664146423,-.0647759810090065,-.22683565318584442,-.09098930656909943,-.004789168015122414,.15596719086170197,-.18318726122379303,-.048639144748449326,-.037301696836948395,-.05498114973306656,.04773465916514397,-.0014254756970331073,.07368160784244537,.044228002429008484,-.02150941640138626,-.36749401688575745,-.09407912194728851,-.09201883524656296,.042273346334695816,-.04412052407860756,-.057620298117399216,.050811201333999634,-.24397927522659302,-.1524132639169693,.06507328897714615,.016213010996580124,-.060330577194690704,-.056668635457754135,.17436468601226807,.02300228364765644,-.11008652299642563,-.030235417187213898,-.025427740067243576,.2562389671802521,.12114732712507248,.08437145501375198,.054099392145872116,-.11178401857614517,.08403284102678299,-.2184729427099228,.058872807770967484,.10945341736078262,.03302857652306557,.014832690358161926,-.026711590588092804,-.1570422500371933,.026108980178833008,.09464260190725327,-.19686803221702576,.04163788631558418,.11697819083929062,-.09219976514577866,-.08663691580295563,-.06610394269227982,.3113613426685333,.1197502613067627,-.12222912162542343,-.10441222041845322,.13052386045455933,-.05938718840479851,-.01584276556968689,-.04292222112417221,-.1708095520734787,-.17079377174377441,-.27544593811035156,.08010108023881912,.33631837368011475,.03449598327279091,-.17092165350914001,-.016217553988099098,-.10728458315134048,.05716094747185707,.10661878436803818,.05217764526605606,-.044871989637613297,.020601967349648476,-.06674331426620483,.052557121962308884,.16381803154945374,-.13455328345298767,-.04705258831381798,.22475473582744598,-.06560054421424866,.0625525563955307,.05069277063012123,.017957136034965515,-.07219229638576508,.010273544117808342,-.1694689244031906,.04687786102294922,.09172873198986053,-.08733593672513962,-.0038601921405643225,.1108613908290863,-.1759866178035736,.04671617969870567,-.018700428307056427,-.05716017261147499,-.00949835404753685,-.09500180184841156,-.15221472084522247,-.11492399871349335,.10216499865055084,-.18859809637069702,.3134903609752655,.2151746153831482,.10599299520254135,.17726877331733704,.05889534577727318,.0035998732782900333,.019701333716511726,-.03071305900812149,-.13021430373191833,-.03395800665020943,.13779586553573608,.05329021438956261,.0279421154409647,-.03733249753713608]]},{label:"PGMOGovernorUnabia",descriptors:[[-.13263097405433655,.08436433970928192,.08823083341121674,-.01800544187426567,-.05538260191679001,-.07391513139009476,.054596126079559326,-.1702197939157486,.03100140579044819,-.043768059462308884,.27133867144584656,-.11263623088598251,-.16110774874687195,-.1724264770746231,-.03194260969758034,.18541622161865234,-.1774870604276657,-.1745360642671585,-.11002129316329956,-.03989015892148018,.024663684889674187,-.046732109040021896,.005286091472953558,.05323246866464615,.016675669699907303,-.3745400905609131,-.14437267184257507,-.07026959955692291,.07372825592756271,-.08976612985134125,-.005770915187895298,.02468498982489109,-.21742649376392365,-.09351864457130432,-.005520969163626432,.08047708123922348,-.07029114663600922,-.14830631017684937,.1542195826768875,-.023822026327252388,-.14724569022655487,.08358471095561981,.10265238583087921,.21604232490062714,.17078913748264313,.06305645406246185,-.021942084655165672,.0003554402501322329,.07242727279663086,-.18881115317344666,-.01535051129758358,.1419849991798401,.14500808715820312,.0843961164355278,.059472933411598206,-.08145816624164581,.0872611403465271,.0763198509812355,-.16609717905521393,.005513621959835291,.02683839201927185,-.15597614645957947,-.001679978216998279,-.05075661465525627,.15280386805534363,.11315231770277023,-.047832440584897995,-.12299422919750214,.10270556807518005,-.11901158094406128,-.07190745323896408,.0031370508950203657,-.11198703944683075,-.13119739294052124,-.25571751594543457,.09066079556941986,.4110872149467468,.1299559623003006,-.1674095243215561,.0536365732550621,-.03041337989270687,.02645566500723362,.10591359436511993,.0857236459851265,-.05843709409236908,-.050994161516427994,-.17448054254055023,-.04346686601638794,.09615538269281387,-.010272249579429626,-.04240315407514572,.17008693516254425,-.08087404817342758,.07143030315637589,.04409385472536087,-.024197321385145187,-.05330301821231842,.07408121973276138,-.03921002894639969,.0031869004014879465,.05005193129181862,-.061398912221193314,-.021495623514056206,.03319801017642021,-.08273881673812866,.04374308884143829,-.02368566207587719,.05969896540045738,-.0045554619282484055,-.008349679410457611,-.06498069316148758,.010576928965747356,.03812504932284355,-.2654787003993988,.24322381615638733,.2155921459197998,-.10974252969026566,.11109940707683563,.1307658851146698,.08943724632263184,-.019919509068131447,-.04089361056685448,-.14872154593467712,-.08722689002752304,.09969797730445862,.014595035463571548,.04769410938024521,.004808078519999981],[-.09256762266159058,.09275853633880615,.01783965714275837,.022602315992116928,-.021117305383086205,-.06586496531963348,.008358330465853214,-.20592448115348816,.08040241152048111,-.049898337572813034,.2328711450099945,-.09162163734436035,-.18851050734519958,-.1314712017774582,-.015645505860447884,.17591480910778046,-.18936601281166077,-.17519617080688477,-.13149286806583405,-.043118011206388474,-.0215850081294775,-.04014164209365845,-.01911739446222782,.03117113932967186,-.001808321918360889,-.3040967285633087,-.1501791924238205,-.06883813440799713,.07826709747314453,-.0025767318438738585,-.0551091767847538,.05129535496234894,-.24647271633148193,-.09021688252687454,.05643047019839287,.030499199405312538,-.044361986219882965,-.11112400144338608,.20377665758132935,-.009891770780086517,-.1633145809173584,.06542498618364334,.08810409158468246,.204563707113266,.19727513194084167,.055830493569374084,-.05804351717233658,-.02223006635904312,.06523314118385315,-.16455739736557007,.020723940804600716,.18453200161457062,.17820344865322113,.09347893297672272,.048814255744218826,-.13374389708042145,.028406962752342224,.07065887004137039,-.11785203218460083,-.017839688807725906,.03711973503232002,-.13029246032238007,-.002087945118546486,-.07919517904520035,.20066361129283905,.1375010758638382,-.0789855495095253,-.1416475921869278,.11408421397209167,-.10823804885149002,-.06209927797317505,.027572456747293472,-.12950849533081055,-.13203106820583344,-.28929027915000916,.05971822887659073,.4397009015083313,.120538130402565,-.1900220811367035,.03039214387536049,-.041195936501026154,-.028925718739628792,.12185365706682205,.0880531296133995,-.06343996524810791,-.06177619472146034,-.09716827422380447,-.043841078877449036,.18209046125411987,-.0041026100516319275,-.08943261951208115,.15264803171157837,-.11507701873779297,.05779606103897095,-.010898447595536709,-.04289386048913002,.00348824355751276,.006540832109749317,-.05309126153588295,-.011945621110498905,.028086675330996513,-.023664424195885658,-.02263069339096546,.1049271747469902,-.08616884797811508,.007433867081999779,.018333349376916885,.063496433198452,-.007412624545395374,.014912714250385761,-.08347019553184509,.012898240238428116,.06355689465999603,-.27402985095977783,.28591448068618774,.13615916669368744,-.0982380360364914,.06736800819635391,.08904258906841278,.08128061145544052,-.022934742271900177,-.035130757838487625,-.17196857929229736,-.12033334374427795,.12283143401145935,.027868028730154037,.10500562191009521,.0077293748036026955]]},{label:"PGMOViceGovernorJeremy",descriptors:[[-.08871345221996307,.04715767502784729,.05316793918609619,.0509025901556015,-.11332403123378754,-.1432318091392517,-.061433617025613785,-.12556949257850647,.12716421484947205,-.06365509331226349,.2276589721441269,-.043718066066503525,-.24220317602157593,-.06368117779493332,-.027729248628020287,.16761906445026398,-.08494190871715546,-.12628759443759918,-.1322477012872696,-.04461314156651497,.02804831974208355,-.018593471497297287,.05238818749785423,-.000596740108449012,-.002274818252772093,-.4019266963005066,-.08599770814180374,-.018580583855509758,.10571017861366272,-.04701980948448181,-.08103130012750626,.053863395005464554,-.1592010110616684,-.15850894153118134,.11862902343273163,.12587490677833557,.02637372352182865,-.0909174382686615,.20978230237960815,.004494313150644302,-.18789984285831451,-.08349152654409409,-.011126374825835228,.22457994520664215,.17442357540130615,.0987948328256607,.05812385678291321,-.11508599668741226,.06635037064552307,-.2108488380908966,.06247532367706299,.08991639316082001,.1258925050497055,-.007355934474617243,.07915575057268143,-.15469664335250854,.029227865859866142,.15796548128128052,-.22907087206840515,-.018175935372710228,.07653458416461945,-.11870937794446945,-.07159662246704102,-.10034873336553574,.2317049652338028,.13149410486221313,-.054717712104320526,-.1371629536151886,.17787156999111176,-.17578163743019104,-.018297770991921425,.003532104194164276,-.04113941639661789,-.13478215038776398,-.2751123607158661,-.04576671123504639,.4044479429721832,.11391759663820267,-.23166318237781525,-.004138460382819176,-.01458535622805357,-.04305865243077278,.1114673987030983,.018018370494246483,-.0820130929350853,.028929254040122032,-.1345188319683075,-.07630474120378494,.21006497740745544,-.009943416342139244,-.004410865250974894,.16190963983535767,-.05260081961750984,.02299664169549942,.0960196927189827,.0034639514051377773,-.10340040922164917,-.0007255827076733112,-.12209635227918625,-.08703173696994781,.0797685757279396,-.09793154895305634,.035104572772979736,.053629640489816666,-.17901983857154846,.052188314497470856,-.08774500340223312,-.0011108219623565674,.03807191550731659,-.09841404855251312,-.08077194541692734,-.06380996108055115,.18752223253250122,-.20050595700740814,.17427919805049896,.19184614717960358,-.010615500621497631,.16276800632476807,.0502934455871582,.07594170421361923,.0029774922877550125,-.03976532071828842,-.16876313090324402,-.08112190663814545,.02888367511332035,-.061167679727077484,.07444433122873306,.00978043582290411],[.01775745302438736,.1165388971567154,.04265601187944412,-.023042259737849236,-.09442536532878876,.008004064671695232,-.0407714806497097,-.07765568047761917,.13396675884723663,-.043419983237981796,.2761614918708801,-.07390101999044418,-.2268674373626709,-.08087751269340515,.03472684696316719,.11315833777189255,-.1698334962129593,-.15077663958072662,-.03535305708646774,.028932251036167145,.0490095280110836,.013391710817813873,.015113767236471176,.03195461630821228,-.10650746524333954,-.44204261898994446,-.07150284945964813,-.06667733937501907,.08307210355997086,-.05340132862329483,-.11738793551921844,.045612823218107224,-.20509174466133118,-.0769973173737526,.06441698968410492,.08283785730600357,-.03987228870391846,-.055128734558820724,.11535973101854324,.06552611291408539,-.2191837728023529,.018371064215898514,-.05108601972460747,.28617799282073975,.18065281212329865,.07557956129312515,.06599483639001846,-.08264348655939102,.02742261439561844,-.19770565629005432,.11199184507131577,.16493314504623413,.11305033415555954,.007812894880771637,.04017285630106926,-.17496198415756226,-.042290546000003815,.14213965833187103,-.2006114423274994,.10064520686864853,.09461342543363571,-.0540379174053669,-.015019319951534271,-.13146843016147614,.1771126091480255,.0847337394952774,-.10424545407295227,-.16725993156433105,.1657210886478424,-.13270758092403412,-.08273518085479736,.043426018208265305,-.13364700973033905,-.21887263655662537,-.3397146165370941,.01600218191742897,.38853129744529724,.13675233721733093,-.24990782141685486,-.04556068405508995,-.01805538684129715,.04137050732970238,.13248848915100098,.08625245839357376,-.020987289026379585,.011995146051049232,-.15716372430324554,-.013741608709096909,.1947435885667801,-.023214735090732574,-.07437914609909058,.19621138274669647,-.08582789450883865,.024652542546391487,.05001244693994522,.07228923588991165,-.05909465625882149,.03055756166577339,-.1692061573266983,-.02910236455500126,-.013414444401860237,-.12331752479076385,-.07587579637765884,.15956073999404907,-.19257816672325134,.11804353445768356,-.005834001116454601,-.006614805199205875,.002720516175031662,-.025662541389465332,-.09729797393083572,-.04979661479592323,.1736845076084137,-.2965998947620392,.18592697381973267,.2537602484226227,.10206031799316406,.14154589176177979,.037240590900182724,.023580551147460938,-.00038894134922884405,-.09781862050294876,-.2610081434249878,-.08583325147628784,-.015080288052558899,-.02835003286600113,.0037391416262835264,.028834570199251175]]},{label:"PGMOBMD1Jabi",descriptors:[[-.10974489152431488,.12683255970478058,.012074017897248268,-.03256836161017418,.03310179337859154,-.0798269733786583,-.04812823235988617,-.2198256105184555,.12048168480396271,-.06874167174100876,.21703951060771942,-.05123678967356682,-.18392625451087952,-.19641612470149994,-.060705844312906265,.18747730553150177,-.2212304174900055,-.20695514976978302,-.06360387802124023,-.054218098521232605,.08297451585531235,-.028723929077386856,.0777251124382019,.0019045814406126738,-.08635829389095306,-.31081122159957886,-.12632377445697784,-.12766554951667786,.033236756920814514,-.008876628242433071,-.02249862812459469,-.012588940560817719,-.23826855421066284,-.07487896829843521,.045842062681913376,.019606927409768105,-.026725269854068756,-.033708974719047546,.23594637215137482,.03171795979142189,-.14121709764003754,-.019580760970711708,.0545990951359272,.24798278510570526,.1259104162454605,.05671611800789833,.01374501921236515,-.13065052032470703,.05237068235874176,-.1214064359664917,.10167013108730316,.15345467627048492,.18919947743415833,.0587146021425724,.07006244361400604,-.06638192385435104,.056355249136686325,.08657092601060867,-.16303278505802155,.037521809339523315,.09820763766765594,-.07977648079395294,-.05837033689022064,-.04745769873261452,.20938187837600708,.07475759088993073,-.08542456477880478,-.1328684240579605,.10145749896764755,-.07457339763641357,-.06680845469236374,.05141608789563179,-.09671024233102798,-.15797336399555206,-.34669697284698486,.003478964325040579,.38946378231048584,.0961981937289238,-.17657528817653656,-.003558812662959099,-.05635401979088783,-.03178897500038147,.13776005804538727,.07605849206447601,-.1378941386938095,.04550742357969284,-.09122771769762039,.005465986672788858,.14108461141586304,-.049908287823200226,-.08412628620862961,.1744328886270523,-.05552861467003822,.04811583459377289,-.008006323128938675,-.017747849225997925,-.025102932006120682,.034372467547655106,-.07894600927829742,-.027251267805695534,.04006173089146614,.002028199378401041,.0035419557243585587,.09218176454305649,-.10165578126907349,-.048823244869709015,.01644708216190338,-.028646865859627724,-.025253502652049065,.013013896532356739,-.1498456448316574,-.14332160353660583,.051622290164232254,-.22937631607055664,.14667406678199768,.19990266859531403,-.015987608581781387,.07325117290019989,.10547761619091034,.07121258974075317,-.027564071118831635,-.03371751308441162,-.15448591113090515,-.016146764159202576,.14775517582893372,.06849395483732224,.09682472050189972,-.010354937054216862],[-.10002898424863815,.11826066672801971,-.011556671001017094,-.010215099900960922,.028155552223324776,-.05578339472413063,-.0333576425909996,-.16639338433742523,.1777193695306778,-.056975413113832474,.2413044422864914,.020096026360988617,-.20148435235023499,-.15287387371063232,-.08320455253124237,.18156149983406067,-.21578149497509003,-.14645393192768097,-.09700004011392593,-.05065008997917175,.11093716323375702,-.04256291687488556,.05764809250831604,-.002424689242616296,-.05101444199681282,-.3088797628879547,-.0991438627243042,-.0930236279964447,.029695779085159302,-.013895309530198574,-.019360125064849854,-.014739418402314186,-.2506196200847626,-.12945955991744995,-.00917467474937439,.022883038967847824,-.08367322385311127,-.06184595450758934,.2360726296901703,.06279252469539642,-.12459221482276917,-.026561427861452103,.043061453849077225,.26274579763412476,.1995169073343277,.06008993089199066,-.002164209261536598,-.14384765923023224,.10225164890289307,-.1848899871110916,.02336966246366501,.14824746549129486,.1768817901611328,.09385606646537781,.05359220504760742,-.09185224771499634,.07972901314496994,.08629593998193741,-.1819262057542801,-.013985112309455872,.03092602640390396,-.06673163175582886,-.055738162249326706,-.06944742798805237,.25640439987182617,.08697468042373657,-.08394037932157516,-.11502551287412643,.14387765526771545,-.07412683963775635,-.06871423870325089,.0532684400677681,-.12458983808755875,-.20318101346492767,-.3561572730541229,.05107354000210762,.425178200006485,.09156693518161774,-.17053008079528809,-.007742773741483688,-.02805742435157299,-.056387871503829956,.14613883197307587,.1047573909163475,-.11295738071203232,.013703531585633755,-.09139205515384674,-.020283427089452744,.16070014238357544,-.05060930550098419,-.10503330081701279,.16072849929332733,-.023567788302898407,.05442658066749573,.03226063773036003,.009761301800608635,-.05514635890722275,.060925256460905075,-.18249931931495667,-.03781788796186447,.03845354542136192,.002859067404642701,-.0022067101672291756,.08773165941238403,-.040990930050611496,-.02083769254386425,.02141031064093113,-.03842788189649582,-.02470778301358223,-.06128034368157387,-.17310930788516998,-.12425584346055984,.07709992676973343,-.18218806385993958,.17855669558048248,.17801490426063538,.0070483325980603695,.09031493961811066,.11435624957084656,.09069912135601044,-.048760946840047836,.01895988918840885,-.1852789968252182,.0022398210130631924,.1423066407442093,.04443374276161194,.09340541064739227,-.047299738973379135]]},{label:"PGMOBMD2Princess",descriptors:[[-.1710982769727707,.020985577255487442,.011335628107190132,-.12576930224895477,-.12228850275278091,-.011794516816735268,-.0651123896241188,-.12731234729290009,.12182571738958359,-.16184093058109283,.2015996128320694,-.07565407454967499,-.23742453753948212,.021354494616389275,-.05684291571378708,.2051163911819458,-.18206438422203064,-.0886659100651741,-.039934538304805756,-.058786045759916306,-.003421833971515298,-.03716311603784561,.00845448300242424,.04927539452910423,-.057662662118673325,-.3213220536708832,-.0859389528632164,-.0746801421046257,-.007864397019147873,-.06452741473913193,-.008920546621084213,-.004926578141748905,-.19239340722560883,-.03998115286231041,.01625872403383255,.06489969789981842,-.04672371596097946,-.12189935147762299,.19126403331756592,.003944091498851776,-.18405303359031677,-.015947649255394936,.06737185269594193,.20243467390537262,.13131381571292877,.0816643014550209,-.00402834452688694,-.15062226355075836,.1758975237607956,-.21791128814220428,-.03190959617495537,.056624919176101685,.08209794759750366,-.008385266177356243,-.008705947548151016,-.09959538280963898,.09306485950946808,.13018204271793365,-.25469934940338135,.001381902489811182,.06491603702306747,-.04911506921052933,-.04201928898692131,-.06768666207790375,.3155812621116638,.1578434556722641,-.14812859892845154,-.11622649431228638,.19043634831905365,-.09733223170042038,-.05203749239444733,.010873218066990376,-.0890737995505333,-.2345830798149109,-.24608266353607178,.0357971228659153,.37795382738113403,.1511508971452713,-.13477389514446259,.03119841404259205,-.04049046337604523,-.026492495089769363,.11361720412969589,.15569287538528442,-.06851357221603394,-.028169257566332817,-.02026827074587345,-.02944701537489891,.2146637886762619,-.04430396109819412,-.0412464439868927,.18778003752231598,-.0037023499608039856,.04734613001346588,-.0006454055546782911,.05606215074658394,-.17279629409313202,.010535265319049358,-.15641991794109344,-.06908721476793289,.052197303622961044,.02124936506152153,.05535247549414635,.14393210411071777,-.15489168465137482,.13373103737831116,-.06591365486383438,-.0678078830242157,.007774237543344498,-.015261426568031311,-.05156278982758522,-.06128746271133423,.06553274393081665,-.22445277869701385,.15316851437091827,.16920199990272522,.05219578742980957,.15325787663459778,.13455159962177277,.031609438359737396,.042688678950071335,.03490324318408966,-.20916718244552612,-.07202472537755966,.1384826898574829,-.021523592993617058,.12582387030124664,-.018798375502228737],[-.17280539870262146,.05560531094670296,.027759380638599396,-.11134400218725204,-.11145442724227905,-.04426291212439537,-.13361838459968567,-.139479398727417,.1344098448753357,-.16971690952777863,.23928000032901764,-.07893531769514084,-.21744157373905182,-.04198288172483444,-.1050695925951004,.22764836251735687,-.21054428815841675,-.08682440221309662,-.06565866619348526,-.03889935836195946,.006717799697071314,-.039591386914253235,.004109832923859358,.03325393423438072,-.07221676409244537,-.3496231436729431,-.07694350928068161,-.07349693775177002,-.008793985471129417,-.012494214810431004,-.05862536281347275,-.04293382167816162,-.21180462837219238,-.06624069064855576,.05648261681199074,.056393612176179886,-.06080474704504013,-.0508536659181118,.1805824637413025,-.025009455159306526,-.2083166539669037,-.03380943089723587,.07948152720928192,.17860065400600433,.1842663288116455,.12144854664802551,-.0030096767004579306,-.1836693435907364,.17370271682739258,-.19088396430015564,.00628837151452899,.12492774426937103,.06573042273521423,.02688342146575451,-.009774014353752136,-.11150974035263062,.08958461135625839,.1263902187347412,-.20709465444087982,-.057180728763341904,.092115119099617,-.07404577732086182,-.10593574494123459,-.039139725267887115,.29741913080215454,.13039472699165344,-.14962323009967804,-.18558701872825623,.197784885764122,-.12060975283384323,-.0033261901699006557,.03894449770450592,-.10377652943134308,-.20938879251480103,-.2935037314891815,-.0028114623855799437,.41500312089920044,.12088984251022339,-.11973472684621811,.04924917593598366,-.06730721890926361,-.019457994028925896,.11610989272594452,.12574903666973114,-.055426277220249176,-.015549372881650925,-.016724107787013054,-.03001655824482441,.17852799594402313,-.06326238065958023,-.009847288019955158,.1587313562631607,-.003847968764603138,.032367680221796036,.015450243838131428,.047479718923568726,-.16082048416137695,.0019432792905718088,-.12055233120918274,-.057677555829286575,.06642254441976547,.03660500422120094,.05508708208799362,.10483936965465546,-.15818309783935547,.1408706158399582,-.048967693001031876,-.01668587513267994,.034232474863529205,-.036346957087516785,-.045372042804956436,-.10505060106515884,.0826423317193985,-.21285291016101837,.18383362889289856,.1483851671218872,.07527019828557968,.1580195426940918,.13997164368629456,.05073908343911171,.001856166054494679,.03232528641819954,-.2066594511270523,-.0704314261674881,.08433756977319717,-.04812941700220108,.14778849482536316,-.03796505555510521]]},{label:"PGMOBMD1Rey",descriptors:[[-.032106876373291016,.0804678425192833,.06374948471784592,-.049554016441106796,-.04837009683251381,-.11937877535820007,-.0028455855790525675,-.22163459658622742,.12274753302335739,-.08935148268938065,.24332135915756226,-.10451950132846832,-.15739208459854126,-.10685499757528305,.05585181713104248,.14918461441993713,-.15775589644908905,-.11995206028223038,-.08581952750682831,-.05905047804117203,-.017042262479662895,-.022444894537329674,.05901909992098808,.02168547920882702,-.019809389486908913,-.3674899935722351,-.1672295778989792,-.041345298290252686,.05021703243255615,-.06041352078318596,.02201048843562603,.08754430711269379,-.19165398180484772,-.09770286828279495,.04634387791156769,.08671015501022339,-.017841342836618423,-.09126725792884827,.14710262417793274,-.022475210949778557,-.12382755428552628,.04689207673072815,-.026457970961928368,.2286912202835083,.13709725439548492,.05185028538107872,.056923847645521164,-.10645780712366104,.08376786857843399,-.0989694744348526,-.016905589029192924,.08622585982084274,.06628942489624023,.04432876408100128,-.00030017795506864786,-.10949159413576126,.0346328467130661,.0838875100016594,-.13782602548599243,.015419699251651764,.10044721513986588,-.12311139702796936,-.06514080613851547,-.061516907066106796,.2690514028072357,.08696959167718887,-.1234104335308075,-.11615065485239029,.08601907640695572,-.058053165674209595,-.04089851304888725,-.00037715848884545267,-.15984708070755005,-.12642256915569305,-.24120944738388062,.06113727390766144,.3903277516365051,-.0015156334266066551,-.24058209359645844,-906681307242252e-19,-.08523781597614288,.09785588830709457,.1037202849984169,.10540721565485,-.05142242833971977,.022142641246318817,-.10900742560625076,-.004520461894571781,.1664043664932251,-.08368504792451859,-.07138560712337494,.20100781321525574,-.093955859541893,.11058512330055237,.028077805414795876,.007653173059225082,-.03501976281404495,.046746574342250824,-.0756886675953865,-.010247400961816311,.14758963882923126,-.062003977596759796,-.013240007683634758,.08558014780282974,-.13708443939685822,.141534686088562,-.0026565149892121553,.07142065465450287,.06885319948196411,.0052032507956027985,-.07276057451963425,-.07510364800691605,.1347956359386444,-.2863490879535675,.22559818625450134,.21547819674015045,-.0603778138756752,.14345867931842804,.04149189591407776,.13446033000946045,-.03782610595226288,.018491411581635475,-.12872396409511566,-.03642106056213379,.09311814606189728,.07819941639900208,.03266821801662445,-.012655612081289291],[-.09111815690994263,.06047220155596733,.07453539967536926,-.0580698624253273,-.03088202141225338,-.13803990185260773,-.008769044652581215,-.17726323008537292,.11762074381113052,-.09505804628133774,.2744288742542267,-.1216738298535347,-.17333795130252838,-.10997645556926727,.005028303246945143,.2077634483575821,-.1350233107805252,-.11767261475324631,-.11492299288511276,-.04156626760959625,.009737705811858177,-.05994927138090134,.0476403571665287,.017260072752833366,-.025736596435308456,-.33563587069511414,-.1186712309718132,-.09520857036113739,.048459917306900024,-.029862865805625916,-.022334275767207146,.07641072571277618,-.14902129769325256,-.13937434554100037,.05841062590479851,.05303434282541275,-.03551443666219711,-.06876170635223389,.20995916426181793,-.057969775050878525,-.19963207840919495,.03692195564508438,-.029408615082502365,.25364866852760315,.18256068229675293,.06207025423645973,.042856622487306595,-.09929866343736649,.057388629764318466,-.1663210690021515,-.028686491772532463,.06547704339027405,.04805565997958183,.06450601667165756,-33740343496901914e-21,-.09162800759077072,.0830407440662384,.0683642104268074,-.17381896078586578,-.03340427950024605,.09503637254238129,-.15235333144664764,-.04443546012043953,-.02484983578324318,.27792930603027344,.10004982352256775,-.1398644745349884,-.09828121960163116,.10952287167310715,-.08377043157815933,-.04760833829641342,-.00592462532222271,-.14981044828891754,-.12000104039907455,-.3204033672809601,-.000856956816278398,.3836494982242584,.04317852109670639,-.24229954183101654,.012328481301665306,-.06151815131306648,.09703996032476425,.16715046763420105,.1044035255908966,-.059564828872680664,.023914940655231476,-.07373714447021484,-.05160665139555931,.15840288996696472,-.0874193012714386,-.0995643213391304,.183909609913826,-.053749486804008484,.07705119997262955,.052234992384910583,.056258074939250946,.0006389456102624536,-.0035175413358956575,-.11564301699399948,.0044783977791666985,.1535559445619583,-.013411929830908775,.017973726615309715,.10840906947851181,-.15696637332439423,.1262211799621582,-.020461151376366615,.08596121519804001,.031281694769859314,.0005901807453483343,-.04911460354924202,-.041999880224466324,.11030534654855728,-.22143281996250153,.2124606817960739,.2502775192260742,-.0196047592908144,.09788587689399719,.11142676323652267,.009840120561420918,-.03215041384100914,.01800253614783287,-.16874800622463226,-.05600590631365776,.11392559111118317,.0790461078286171,.11006275564432144,.015394543297588825]]},{label:"PGMOBMD2Syremae",descriptors:[[-.14456716179847717,.08322206139564514,.06714824587106705,-.07772955298423767,-.11222537606954575,-.040625207126140594,-.09726964682340622,-.11484213173389435,.10519831627607346,-.15102235972881317,.1847686916589737,-.07829844951629639,-.19098404049873352,-.0483919233083725,-.05328446254134178,.19260939955711365,-.19612757861614227,-.1374811977148056,-.05182025209069252,.02499244175851345,.061396170407533646,.030827077105641365,.01499903667718172,.040044207125902176,-.1577141284942627,-.3597050905227661,-.08080178499221802,-.026516100391745567,-.08365226536989212,-.02419355884194374,-.09489660710096359,-.008394379168748856,-.20296767354011536,-.05412495136260986,.02232767641544342,.11889826506376266,-.005674090702086687,-.15382081270217896,.12622542679309845,.017866628244519234,-.27819907665252686,.05352051928639412,.0778006911277771,.23428256809711456,.1943429410457611,.007014757953584194,-.0010145250707864761,-.13942261040210724,.14850293099880219,-.21026359498500824,-.06994853168725967,.1424930840730667,.003301267046481371,-.00947659369558096,.016365231946110725,-.12289563566446304,.07069149613380432,.13555002212524414,-.16301411390304565,-.0976758599281311,.029702045023441315,-.02349044941365719,.024562830105423927,-.1284409910440445,.24090442061424255,.1244574785232544,-.11443773657083511,-.18787620961666107,.14279860258102417,-.10435278713703156,-.055994413793087006,.0362551175057888,-.1588844358921051,-.20990945398807526,-.2933320999145508,-.024007154628634453,.414066344499588,.11761459708213806,-.14120808243751526,.10295669734477997,-.09281515330076218,-.014993689954280853,.08904723823070526,.1785610318183899,.017682243138551712,.062259044498205185,-.07918038964271545,.017454316839575768,.24317973852157593,-.03353143483400345,-.0044221593998372555,.18940654397010803,.010916088707745075,.03114064410328865,.042059797793626785,-.003979730419814587,-.17108643054962158,.07183453440666199,-.140739306807518,-.0004326728521846235,.012694844976067543,-.020609937608242035,.02479807287454605,.18692828714847565,-.18027547001838684,.11897251009941101,-.016382446512579918,-.010386966168880463,.031074481084942818,-.02371855080127716,-.02525423653423786,-.05201379582285881,.06214796006679535,-.24000316858291626,.12283467501401901,.16448689997196198,.05079467594623566,.14897359907627106,.1197906881570816,.05441609397530556,-.028971480205655098,.07360748946666718,-.2534652054309845,-.023204144090414047,.06827720254659653,-.062397778034210205,.10851049423217773,.00711640203371644],[-.13394974172115326,.057611577212810516,.043557845056056976,-.08702041953802109,-.10796657204627991,-.03311958536505699,-.03791644051671028,-.15107212960720062,.1191582903265953,-.1393938660621643,.1969120353460312,-.11293306201696396,-.20714128017425537,.014153728261590004,-.08725674450397491,.21810626983642578,-.21298205852508545,-.0769759938120842,-.05556541681289673,.022153425961732864,.04998170584440231,.00410178629681468,.02112325094640255,.0768333300948143,-.10613279789686203,-.3597120940685272,-.11675954610109329,-.07021959871053696,-.04895712435245514,-.04236779361963272,-.07606387883424759,.01703977957367897,-.2182799130678177,-.01786031387746334,.0496368408203125,.06480627506971359,.0002077167882816866,-.11301781982183456,.1439671665430069,-.02973823808133602,-.240092933177948,.02625202387571335,.10223107784986496,.21086683869361877,.17422570288181305,-.025383828207850456,-.03670473396778107,-.17447811365127563,.13035953044891357,-.19776242971420288,-.013040484860539436,.08732453733682632,-.00871314574033022,.06875970214605331,-.015858381986618042,-.06065414473414421,.08847363293170929,.14587406814098358,-.19473722577095032,-.07729332149028778,.07779619842767715,-.06411666423082352,-.029575860127806664,-.06645624339580536,.25204387307167053,.1529754251241684,-.11489885300397873,-.18669170141220093,.12720784544944763,-.15794245898723602,-.008649623952805996,-.0031747755128890276,-.11478692293167114,-.1858096867799759,-.25818634033203125,-.016068359836935997,.4088478088378906,.13893276453018188,-.19539213180541992,.09135191142559052,-.13019849359989166,-.023181773722171783,.15395987033843994,.1559721976518631,.02883204072713852,.0494404137134552,-.03975394368171692,.041104767471551895,.22518599033355713,-.07102198153734207,.041913021355867386,.2602292001247406,.01126971747726202,-.0008056981023401022,.06254923343658447,.00878210086375475,-.14068280160427094,-.0012422282015904784,-.15900500118732452,-.029522838070988655,-.024568142369389534,.01688506081700325,.012918975204229355,.15152209997177124,-.2197577804327011,.15061482787132263,.004723062738776207,-.04018242657184601,.06629525125026703,-.04439074918627739,-.003322785720229149,-.10157398134469986,.06531047075986862,-.25272509455680847,.13375122845172882,.10900990664958954,.03231855854392052,.15730494260787964,.03315950557589531,.08606982976198196,-.025138236582279205,.01084461435675621,-.20042283833026886,.027658965438604355,.1450173556804657,-.0322185754776001,.06378677487373352,-.050671398639678955]]},{label:"PGMOBMD1Wayne",descriptors:[[-.042716000229120255,.06192271411418915,-.0010475210146978498,-.012059968896210194,-.09070932120084763,.00034881767351180315,.02940363623201847,-.13645634055137634,.09350226819515228,-.14319826662540436,.18493689596652985,-.0935463085770607,-.24648867547512054,-.07078174501657486,-.020682958886027336,.2078534960746765,-.1578764170408249,-.10200446844100952,-.14741888642311096,-.015668777748942375,.07036017626523972,-.005997354630380869,-.018109839409589767,.008436416275799274,.03509276360273361,-.33379027247428894,-.08337590098381042,-.056553907692432404,.009939202107489109,-.10116483271121979,-.04106171429157257,.028391357511281967,-.1715419888496399,-.10871866345405579,.001942428294569254,.028804678469896317,-.07711458951234818,-.07522422820329666,.16200119256973267,-.0038841820787638426,-.1709134429693222,.02795967273414135,.03609854727983475,.21330565214157104,.18902651965618134,.08277330547571182,-.011595657095313072,-.0949297547340393,.09136348962783813,-.2225903868675232,-.002619614591822028,.08742275834083557,.07469230145215988,.1170419231057167,.04775489121675491,-.09328728169202805,.03347071260213852,.052736546844244,-.03898227587342262,-.011492840945720673,.09334922581911087,-.0967695340514183,-.031844351440668106,-.07146279513835907,.2535371482372284,.01104147732257843,-.07905136793851852,-.10126252472400665,.1284802407026291,-.09962201863527298,-.1361881047487259,-.04920518770813942,-.12681712210178375,-.11375407129526138,-.2624722719192505,.05128135904669762,.4140877425670624,.11286178231239319,-.20225045084953308,.02166503109037876,-.051165394484996796,.04055130481719971,.17720523476600647,.11990432441234589,.02181592769920826,-.02248159795999527,-.047526128590106964,-.011145408265292645,.16988737881183624,-.09616833925247192,-.05471000820398331,.19630177319049835,-.03453730419278145,.06694253534078598,.05104513838887215,-.028991440311074257,-58646328398026526e-21,.03979481756687164,-.12364405393600464,-.024709045886993408,.1275922805070877,-.0486396886408329,.012132134288549423,.12029979377985,-.1048119068145752,.11766821146011353,-.03435270115733147,.09226854890584946,.09923527389764786,.014810902066528797,-.12837795913219452,-.026608936488628387,.1061076819896698,-.1948786824941635,.21624626219272614,.19406788051128387,-.04985147342085838,.05082942172884941,.1003325805068016,.13252857327461243,.0047580222599208355,.028531163930892944,-.2519453167915344,-.07855784147977829,.15254025161266327,.07886207103729248,.0175893884152174,-.004026825074106455],[.026120271533727646,.1274305135011673,.025284353643655777,.009596080519258976,-.07683572918176651,-.012423714622855186,.007869482040405273,-.15744233131408691,.11548591405153275,-.14451253414154053,.24433667957782745,-.08786437660455704,-.2371770441532135,-.15961048007011414,-.01796756684780121,.1967107057571411,-.15237048268318176,-.0844634473323822,-.13003994524478912,-.008624343201518059,.07319527864456177,-.013772884383797646,.01831711269915104,-.03800954669713974,.017118224874138832,-.3443297743797302,-.08639460802078247,-.02621575817465782,.03995883837342262,-.06603331118822098,-.045321814715862274,.06112229824066162,-.1722024828195572,-.128733828663826,.011782653629779816,.02082255110144615,-.07737071067094803,-.07398225367069244,.19178108870983124,-.023520056158304214,-.17816245555877686,.0669570192694664,.019591044634580612,.20652735233306885,.16502459347248077,.054286058992147446,.015342487022280693,-.1121395081281662,.12120767682790756,-.17616789042949677,.0037961413618177176,.10757961869239807,.09921497851610184,.07809189707040787,.057450953871011734,-.1292571723461151,.011477538384497166,.1124497726559639,-.11540577560663223,-.02218019589781761,.059486642479896545,-.12510091066360474,-.04031037166714668,-.04684301093220711,.1988115906715393,.06228690966963768,-.04815784469246864,-.14904290437698364,.18574413657188416,-.07976377755403519,-.08338626474142075,-.018537066876888275,-.11614827066659927,-.13299354910850525,-.28005629777908325,.05273190513253212,.38125550746917725,.10926822572946548,-.20776639878749847,.017975464463233948,-.015183920040726662,.026135839521884918,.17110054194927216,.12539206445217133,.0003807740577030927,-.015638893470168114,-.07819065451622009,-.01273368950933218,.14416907727718353,-.10695431381464005,-.0729345977306366,.22265438735485077,-.01485454011708498,.07208409905433655,.041331738233566284,-.06483368575572968,-.028453275561332703,.06886402517557144,-.17631739377975464,-.011254260316491127,.11729145795106888,-.06439890712499619,.005205121356993914,.10959931463003159,-.09672251343727112,.08464781939983368,-.016317205503582954,.06569908559322357,.053698018193244934,-.03426157310605049,-.09730242192745209,-.00944801326841116,.10253605991601944,-.21379061043262482,.24135564267635345,.1618718057870865,-.016211988404393196,.10197588801383972,.1359405219554901,.09767712652683258,.052619289606809616,-.05085701495409012,-.23072350025177002,-.08752043545246124,.13043496012687683,.061965517699718475,.037902262061834335,.0017518715467303991]]},{label:"PGMOBMD1Marlon",descriptors:[[-.06818855553865433,.014939075335860252,.040056828409433365,-.10143481194972992,-.0828227624297142,.02304845117032528,-.06605015695095062,-.13127653300762177,.09864982217550278,-.13565872609615326,.1773778349161148,.03017924539744854,-.21159781515598297,-.11016388237476349,.10128918290138245,.07966714352369308,-.17759060859680176,-.16203530132770538,-.11059794574975967,-.13524648547172546,-.03797499090433121,-.030479487031698227,.006573034450411797,-.05414893105626106,-.18243052065372467,-.22480566799640656,-.09945089370012283,-.09920137375593185,.08723943680524826,.016192644834518433,-.02575080841779709,.022733569145202637,-.1613093465566635,-.10378772020339966,.08148099482059479,.14806456863880157,-.043567318469285965,-.03623148798942566,.17477937042713165,-.03819257393479347,-.11731322109699249,.03856644406914711,.06269240379333496,.18786047399044037,.18586447834968567,.0866360291838646,.0713423490524292,-.08281243592500687,.13649263978004456,-.25709226727485657,.1503889411687851,.11873709410429001,.11182640492916107,.09507286548614502,.054158199578523636,-.19035574793815613,.051471173763275146,.1936081200838089,-.200490802526474,.09787338972091675,.10187770426273346,-.14443297684192657,-.07701540738344193,-.022252080962061882,.2264646738767624,.10904709994792938,-.12191030383110046,-.18976899981498718,.2465886026620865,-.06368900835514069,-.10408969223499298,.037260785698890686,-.12113019824028015,-.12187860161066055,-.2833154797554016,.11630304157733917,.4587874114513397,.14492447674274445,-.14039061963558197,.05600500479340553,-.096387580037117,-.044002220034599304,.026916923001408577,.08819015324115753,-.028732236474752426,-.09041023254394531,-.031143968924880028,.004085542168468237,.17032061517238617,-.025741947814822197,-.00028843560721725225,.1519288271665573,.05313792824745178,.0448765829205513,.031438589096069336,.06170924752950668,-.11578670889139175,.009463329799473286,-.13601069152355194,-.039000965654850006,.04549860581755638,-.08167153596878052,.06431246548891068,.1377672702074051,-.1601443886756897,.2245805710554123,-.03149659186601639,-.047969620674848557,.010483205318450928,-.03599594533443451,.009830617345869541,-.036049842834472656,.13005352020263672,-.32396379113197327,.1594591736793518,.24467520415782928,.09953653067350388,.1908096969127655,.0962110087275505,.09166941046714783,.09523318707942963,.022273235023021698,-.2582246959209442,-.11289538443088531,-.01060145627707243,7789348455844447e-20,-.004693618975579739,.1435585618019104],[-.08281277865171432,.06323610246181488,.06466510891914368,-.026736019179224968,-.03157924488186836,-.025717008858919144,-.06354331225156784,-.1680217683315277,.08809895813465118,-.10615948587656021,.2316199094057083,-.08344674110412598,-.19958743453025818,-.08075690269470215,.04443255439400673,.1294468343257904,-.13635584712028503,-.15795177221298218,-.09264732152223587,-.13919943571090698,.00254416698589921,-.04790342226624489,-.03021550364792347,-.010209446772933006,-.16090577840805054,-.36173000931739807,-.10751441866159439,-.06410236656665802,.07342325896024704,-.02156831882894039,-.04604725167155266,-.01215450931340456,-.1513693481683731,-.058149296790361404,.06801557540893555,.19238127768039703,-.016058415174484253,-.054493606090545654,.15590818226337433,-.027885690331459045,-.09584415704011917,.04546128213405609,.050323378294706345,.2476211041212082,.1658295840024948,.06876271218061447,.07245209813117981,-.08106030523777008,.06859549880027771,-.17507359385490417,.043216414749622345,.11882510036230087,.07983460277318954,.08664412796497345,.0477963462471962,-.11104697734117508,.022965164855122566,.14008396863937378,-.16776783764362335,.026911811903119087,.11158781498670578,-.12663771212100983,-.08516127616167068,-.05081602931022644,.24678419530391693,.13576705753803253,-.11488146334886551,-.12197545915842056,.17872412502765656,-.11497402936220169,-.06878238916397095,-.08397195488214493,-.11203990131616592,-.10007613897323608,-.2887469232082367,.09309238940477371,.49528375267982483,.10147002339363098,-.21050822734832764,.04474903643131256,-.017348356544971466,.0063643003813922405,.14223068952560425,.07594785839319229,-.05973845347762108,-.03248229995369911,-.08259649574756622,.0482395775616169,.17095471918582916,-.006741963792592287,.03342925384640694,.08175163716077805,-.024399425834417343,.08588848263025284,.06684151291847229,.04068729653954506,-.14639048278331757,.025538001209497452,-.10743003338575363,-.018971052020788193,.04271494597196579,-.04544061794877052,.08525723218917847,.12045561522245407,-.13022732734680176,.18920806050300598,-.0009825124870985746,-.03489963710308075,.05343550071120262,.06253373622894287,-.00508531229570508,-.07855844497680664,.12832777202129364,-.25004303455352783,.1253301352262497,.2320287972688675,.008311010897159576,.15981575846672058,.071707583963871,.12378935515880585,.016979798674583435,.08676950633525848,-.23557592928409576,-.0607905313372612,-.06335754692554474,.00030103448079898953,.017349667847156525,.05543271079659462]]},{label:"MayorLeonardo",descriptors:[[-.0993993729352951,.10846968740224838,.08192450553178787,-.04638579115271568,-.018433742225170135,-.04379890859127045,.031620725989341736,-.24158531427383423,.09227840602397919,-.056100402027368546,.2772042453289032,-.06169266998767853,-.20428216457366943,-.20563474297523499,.0028412502724677324,.16111744940280914,-.20214463770389557,-.11810873448848724,-.13988344371318817,-.055708419531583786,.002894421573728323,.0029473023023456335,.07533009350299835,-.05678051337599754,-.06172730773687363,-.3668625056743622,-.08473829925060272,-.04119638353586197,.024881204590201378,.022467533126473427,-.0037836686242371798,.005225549917668104,-.24294011294841766,-.10274585336446762,.00848344899713993,.09171280264854431,-.013105032034218311,-.002785061951726675,.12170693278312683,-.014724116772413254,-.14818710088729858,.08021006733179092,.09486543387174606,.2018389254808426,.22292934358119965,.05273136496543884,.030899949371814728,-.14324042201042175,.056657981127500534,-.14823733270168304,.024570520967245102,.10275391489267349,.11386304348707199,.032796964049339294,.07310514152050018,-.0605301707983017,.020137367770075798,.084116630256176,-.1631135493516922,.005934128072112799,.12933802604675293,-.0516141876578331,-.05622229352593422,-.048575568944215775,.17487485706806183,.10758502781391144,-.06064710393548012,-.17959873378276825,.12791691720485687,-.11686569452285767,-.10900602489709854,.015070264227688313,-.1077505499124527,-.10034368187189102,-.3470582067966461,.006651778239756823,.4342842698097229,.046927835792303085,-.20133128762245178,-.012036783620715141,-.08234261721372604,-.004816323518753052,.1418055295944214,.03687974810600281,-.0450296476483345,-.015051310881972313,-.11757919937372208,.011456427164375782,.1762150377035141,-.02357356622815132,-.048059336841106415,.17152869701385498,-.020451238378882408,.014932719990611076,.0330352857708931,.022852063179016113,-.0634550079703331,.09395352005958557,-.14187031984329224,-.0343509316444397,.046200450509786606,-.06609213352203369,.050130970776081085,.08026227355003357,-.15595878660678864,.147118479013443,-.004135622177273035,.023968130350112915,.053603626787662506,-.03402490168809891,-.016624480485916138,.008464441634714603,.11314226686954498,-.23787277936935425,.23793214559555054,.19763129949569702,-.04279410094022751,.08426745980978012,.04759905859827995,.10372843593358994,-.05273717641830444,.05461015924811363,-.1660713255405426,-.07800319790840149,-.009876757860183716,-.03853145241737366,.11108873784542084,.051295340061187744],[-.0993993729352951,.10846968740224838,.08192450553178787,-.04638579115271568,-.018433742225170135,-.04379890859127045,.031620725989341736,-.24158531427383423,.09227840602397919,-.056100402027368546,.2772042453289032,-.06169266998767853,-.20428216457366943,-.20563474297523499,.0028412502724677324,.16111744940280914,-.20214463770389557,-.11810873448848724,-.13988344371318817,-.055708419531583786,.002894421573728323,.0029473023023456335,.07533009350299835,-.05678051337599754,-.06172730773687363,-.3668625056743622,-.08473829925060272,-.04119638353586197,.024881204590201378,.022467533126473427,-.0037836686242371798,.005225549917668104,-.24294011294841766,-.10274585336446762,.00848344899713993,.09171280264854431,-.013105032034218311,-.002785061951726675,.12170693278312683,-.014724116772413254,-.14818710088729858,.08021006733179092,.09486543387174606,.2018389254808426,.22292934358119965,.05273136496543884,.030899949371814728,-.14324042201042175,.056657981127500534,-.14823733270168304,.024570520967245102,.10275391489267349,.11386304348707199,.032796964049339294,.07310514152050018,-.0605301707983017,.020137367770075798,.084116630256176,-.1631135493516922,.005934128072112799,.12933802604675293,-.0516141876578331,-.05622229352593422,-.048575568944215775,.17487485706806183,.10758502781391144,-.06064710393548012,-.17959873378276825,.12791691720485687,-.11686569452285767,-.10900602489709854,.015070264227688313,-.1077505499124527,-.10034368187189102,-.3470582067966461,.006651778239756823,.4342842698097229,.046927835792303085,-.20133128762245178,-.012036783620715141,-.08234261721372604,-.004816323518753052,.1418055295944214,.03687974810600281,-.0450296476483345,-.015051310881972313,-.11757919937372208,.011456427164375782,.1762150377035141,-.02357356622815132,-.048059336841106415,.17152869701385498,-.020451238378882408,.014932719990611076,.0330352857708931,.022852063179016113,-.0634550079703331,.09395352005958557,-.14187031984329224,-.0343509316444397,.046200450509786606,-.06609213352203369,.050130970776081085,.08026227355003357,-.15595878660678864,.147118479013443,-.004135622177273035,.023968130350112915,.053603626787662506,-.03402490168809891,-.016624480485916138,.008464441634714603,.11314226686954498,-.23787277936935425,.23793214559555054,.19763129949569702,-.04279410094022751,.08426745980978012,.04759905859827995,.10372843593358994,-.05273717641830444,.05461015924811363,-.1660713255405426,-.07800319790840149,-.009876757860183716,-.03853145241737366,.11108873784542084,.051295340061187744]]},{label:"ViceMayorSharon",descriptors:[[-.10272391140460968,.05576598644256592,.0762597918510437,-.09019611030817032,-.08694913983345032,-.07040499150753021,-.06557110697031021,-.19078165292739868,.13267669081687927,-.16933223605155945,.25018417835235596,-.08574802428483963,-.18156534433364868,-.0703025683760643,-.04893627390265465,.20684252679347992,-.16350744664669037,-.1351742148399353,-.14383871853351593,-.03088250383734703,.030514605343341827,-.031255241483449936,.022825272753834724,.039324913173913956,-.16245748102664948,-.29742199182510376,-.08812359720468521,-.04113601893186569,.04036816954612732,-.06590618193149567,-.12838566303253174,.028335915878415108,-.21104416251182556,-.06031174957752228,.07111974060535431,.11661230772733688,-.048585884273052216,-.09133333712816238,.1519620567560196,-.04043705016374588,-.26063066720962524,.07256893068552017,.03523671627044678,.1719500869512558,.19416537880897522,-.014796795323491096,.020780319347977638,-.21788224577903748,.16167263686656952,-.20824025571346283,.022146238014101982,.14044073224067688,.06134902313351631,.10438265651464462,.0059244055300951,-.07600726187229156,.020683618262410164,.19780999422073364,-.15233424305915833,-.024591315537691116,.1224261224269867,-.0528411939740181,-.09947195649147034,-.11140205711126328,.17780648171901703,.17571906745433807,-.18946680426597595,-.19840167462825775,.1149543821811676,-.12261063605546951,-.02400260604918003,.08274368941783905,-.10452186316251755,-.17371994256973267,-.23943433165550232,.007601458113640547,.37696903944015503,.08373691886663437,-.23925061523914337,-.04503508657217026,-.10632255673408508,.0154331736266613,.09303537011146545,.10212060809135437,-.02663423679769039,.010045960545539856,-.02608511596918106,.020209243521094322,.22265705466270447,-.06965780258178711,.05163105949759483,.23357561230659485,.022591320797801018,.03422008827328682,-.0033069541677832603,.1091843694448471,-.1555672436952591,.005241082981228828,-.11569349467754364,-.019848914816975594,.056513216346502304,.007093455176800489,.003920762799680233,.12310834974050522,-.1352928727865219,.21915499866008759,-.02963915839791298,.027258826419711113,.08586608618497849,-.05145219340920448,.00653413450345397,-.09744264930486679,.0708145946264267,-.22977103292942047,.17077787220478058,.17341041564941406,.044774241745471954,.08253119140863419,.07694745063781738,.0714903175830841,-.009182813577353954,.015787947922945023,-.18495258688926697,-.032648805528879166,.10703754425048828,-.057307034730911255,.015613671392202377,-.0792461708188057],[-.07301261276006699,.10253212600946426,.06736826151609421,-.12073133885860443,-.04452884569764137,.039697736501693726,-.05416443943977356,-.16355940699577332,.1792055070400238,-.17295148968696594,.21893978118896484,-.047445446252822876,-.2192673683166504,-.12015949189662933,-.01946823112666607,.2573462724685669,-.22592000663280487,-.17054441571235657,-.11170199513435364,-.0072447312995791435,.015322656370699406,.001715757418423891,.016342904418706894,.04085589200258255,-.12608279287815094,-.35394150018692017,-.0880621001124382,-.030340541154146194,.004908835981041193,-.047377463430166245,-.08805477619171143,.05029766634106636,-.17889244854450226,-.0002902139094658196,.08624489605426788,.1228257492184639,-.05952060595154762,-.13670700788497925,.1582786589860916,.00974733941257,-.24334940314292908,.029199523851275444,.06475286930799484,.20754395425319672,.20783261954784393,-.044689785689115524,.0006404311861842871,-.14348416030406952,.1646255999803543,-.24137675762176514,.036925941705703735,.1577005684375763,.06745417416095734,.10383274406194687,.02979392558336258,-.09837041050195694,.021221209317445755,.1599745750427246,-.1815331131219864,-.06480194628238678,.10988174378871918,-.06351342797279358,-.10206132382154465,-.08197464048862457,.14896534383296967,.22029133141040802,-.18319985270500183,-.24403567612171173,.11685537546873093,-.11068059504032135,-.0067807938903570175,.05458863824605942,-.15088410675525665,-.16792188584804535,-.20131543278694153,.015107698738574982,.417843222618103,.1260555386543274,-.20762324333190918,-.05936012789607048,-.06253398954868317,-.0013630801113322377,.10267847031354904,.1455819308757782,-.01915779709815979,-.017620857805013657,-.030435238033533096,.04010244086384773,.1692192107439041,-.03843381628394127,-.0008969881455413997,.23390236496925354,.013150046579539776,.018358223140239716,-.011213221587240696,.04930851235985756,-.10395516455173492,.05103505030274391,-.1577821969985962,-.034831464290618896,-.009232800453901291,.03665761277079582,.014537745155394077,.13466256856918335,-.09078193455934525,.2027321606874466,.015244477428495884,.026881251484155655,.08628732711076736,-.01796732470393181,-.04995480924844742,-.09850478917360306,.06466054916381836,-.21386688947677612,.12005030363798141,.14239777624607086,.040210943669080734,.0871511697769165,.08167508989572525,.1275119036436081,.021962303668260574,-.025150282308459282,-.1901903599500656,-.023219073191285133,.09160041064023972,-.011628779582679272,.02098657935857773,-.08931852132081985]]},{label:"MayorWellie",descriptors:[[-.055346425622701645,.02324039861559868,.04745832458138466,-.01684984564781189,-.1926928460597992,.020059458911418915,.04116300866007805,-.16561900079250336,.03507404774427414,-.11366228014230728,.18285027146339417,-.05888459086418152,-.26626262068748474,-.11757000535726547,.05680393800139427,.1438911110162735,-.12029408663511276,-.17929592728614807,-.13570161163806915,-.016472116112709045,-.06541778892278671,-.02133956365287304,-.022337332367897034,-.03335513174533844,-.018503965809941292,-.4058319628238678,-.06669004261493683,.009894832037389278,.06412074714899063,-.032501112669706345,-.0005850784946233034,.16716215014457703,-.21510832011699677,-.07524476945400238,-.010601638816297054,.1143449991941452,-.10105519741773605,-.07071124017238617,.09854970127344131,.01482726912945509,-.2005060762166977,.07677919417619705,-.018351875245571136,.2167305052280426,.21069841086864471,.014414449222385883,.049782413989305496,-.07527164369821548,.09128846973180771,-.25676214694976807,-.009349248372018337,.1329697221517563,.09666149318218231,.05733158066868782,.012650052085518837,-.11278469115495682,.04605608060956001,.11032542586326599,-.20556551218032837,.01182272657752037,.06663348525762558,-.11540143191814423,-.0035205816384404898,-.08500679582357407,.17938613891601562,.11908121407032013,-.023819228634238243,-.12115686386823654,.2115914672613144,-.11584104597568512,-.09873197227716446,-.02357083186507225,-.12550966441631317,-.12260261178016663,-.2809538245201111,.0726507306098938,.38961079716682434,.13882464170455933,-.1598607450723648,-.01764012686908245,-.03200777992606163,.03188733756542206,.07214652746915817,.04652583226561546,-.08198622614145279,-.09329745173454285,-.10318222641944885,.028530903160572052,.16892822086811066,-.01139797642827034,-.03577984496951103,.19987693428993225,.018711505457758904,.01743013970553875,.09496079385280609,.02700112760066986,-.05271856486797333,.02749738097190857,-.15851198136806488,-.06671050935983658,.06899394094944,-.1434207707643509,.06805694848299026,.14836519956588745,-.1048109233379364,.22706949710845947,-.0659913420677185,.07635188102722168,.06684216111898422,-.05821556970477104,.0004921655636280775,.03584503382444382,.10374043881893158,-.19958262145519257,.22910119593143463,.17943629622459412,-.012866176664829254,.11072975397109985,.06897581368684769,.07722314447164536,-.06929492950439453,-.04511493444442749,-.20076300203800201,-.09814715385437012,.08193168044090271,.00863557681441307,.013561724685132504,.0734834372997284],[-.07196265459060669,.08846459537744522,.05502856522798538,-.03217766806483269,-.1440976858139038,.048655539751052856,-.047181136906147,-.14667297899723053,.05070367082953453,-.10991895943880081,.22130583226680756,-.05189221724867821,-.18020081520080566,-.08151134103536606,.009923952631652355,.1755414605140686,-.12590466439723969,-.1693565398454666,-.11231305450201035,-.02029147930443287,-.017672885209321976,-.03423528000712395,-.05338865518569946,-.0568816103041172,-.02693241648375988,-.4138689935207367,-.09160112589597702,-.0053338254801929,.028629889711737633,-.056790295988321304,-.017091909423470497,.10436293482780457,-.1798451840877533,-.04052172973752022,.015033947303891182,.09794440120458603,-.03964553773403168,-.05527811497449875,.08733993768692017,-.008694009855389595,-.1837906390428543,.07566632330417633,-5829071596963331e-20,.20965471863746643,.21421931684017181,.05205616354942322,.05380135774612427,-.08576934784650803,.0880236104130745,-.21256738901138306,-.03656911104917526,.11181219667196274,.030426014214754105,.07689662277698517,.008457636460661888,-.09390123188495636,.054281480610370636,.05913471430540085,-.14906516671180725,-.0556941032409668,.06748414784669876,-.15267059206962585,-.04371969774365425,-.09851770848035812,.20769573748111725,.10377125442028046,-.02358623780310154,-.18533587455749512,.20586125552654266,-.07456110417842865,-.07576397806406021,-.021567096933722496,-.12845735251903534,-.12541048228740692,-.26278191804885864,.08792655915021896,.4067685306072235,.13295596837997437,-.17040082812309265,.04690366983413696,-.03402518108487129,.037189312279224396,.09389501065015793,.047588758170604706,-.014148405753076077,-.059588052332401276,-.1041969358921051,.009486205875873566,.2038714587688446,-.04955850541591644,-.0026226581539958715,.15392306447029114,-.0265942569822073,.05170915275812149,.06953088194131851,.0537225715816021,-.05285929515957832,.07031869888305664,-.13414038717746735,-.03275459632277489,.058155570179224014,-.05381619185209274,.04232090711593628,.14210595190525055,-.1075732558965683,.19755786657333374,-.07991401106119156,.07281941920518875,.028527697548270226,-.04697082191705704,.018291503190994263,.007946771569550037,.1075533851981163,-.22067487239837646,.18011119961738586,.19674599170684814,-.007606126833707094,.12406498193740845,.08541049808263779,.09631375968456268,-.04832782968878746,-.02711278386414051,-.25892704725265503,-.08257918804883957,.05297316238284111,.017388632521033287,-.040198806673288345,.05675874277949333]]},{label:"ViceMayorRoger",descriptors:[[-.0687665119767189,.05110899731516838,.08946412056684494,-.051437996327877045,-.015490730293095112,.010957341641187668,-.04516574740409851,-.10892084985971451,.08993667364120483,-.1437927633523941,.32363709807395935,.013376027345657349,-.25817304849624634,-.08793271332979202,.0018768267473205924,.12591789662837982,-.09648672491312027,-.15331624448299408,-.12482250481843948,.04661885276436806,.013921748846769333,-.07656343281269073,.020971274003386497,-.04738522693514824,-.082190603017807,-.3460688292980194,-.09758035093545914,-.05374499037861824,-.05680829659104347,-.02764803357422352,-.029274173080921173,.02122429944574833,-.1958717703819275,-.03758280351758003,.02951776422560215,.04096259921789169,-.056947190314531326,-.0031870927195996046,.21369874477386475,.01565605215728283,-.21108706295490265,.03562469407916069,-.06138317659497261,.21279072761535645,.1908779740333557,.08178085088729858,.030556203797459602,-.13001537322998047,.058523889631032944,-.26246681809425354,.08019991964101791,.14580166339874268,.1031743735074997,.09372391551733017,-.011617234908044338,-.16954730451107025,.05041396617889404,.09469329565763474,-.16783730685710907,-.011577179655432701,.0015183106297627091,-.16207678616046906,-.067809097468853,-.07279098033905029,.2400956153869629,.14158876240253448,-.15769991278648376,-.18546360731124878,.19142886996269226,-.052027616649866104,-.05588044226169586,.06920028477907181,-.17177054286003113,-.17367836833000183,-.32419076561927795,.0553322434425354,.422600656747818,.08704628050327301,-.2382928729057312,-.018458440899848938,-.1604119837284088,.030785007402300835,.03757203742861748,.07186557352542877,-.017010720446705818,-.05917523428797722,-.06321417540311813,-.051084693521261215,.16738103330135345,-.06166530027985573,-.1119973435997963,.14326761662960052,-.050586845725774765,.05597737431526184,.04990258440375328,.08149039000272751,-.03567975386977196,.00019454800349194556,-.13685014843940735,-.026559775695204735,-.004076568875461817,-.06221961975097656,-.016411086544394493,.14022298157215118,-.18678595125675201,.1791936606168747,-.03360942378640175,.012212473899126053,.06532139331102371,-.0038037747144699097,-.04140374809503555,-.0564139299094677,.08748644590377808,-.3285621404647827,.24967575073242188,.22452408075332642,.05959487706422806,.1406838446855545,.10357476770877838,.0780932828783989,-.044590357691049576,.01592913083732128,-.2639100253582001,-.10090368241071701,.03969762101769447,.08495388180017471,.05274629592895508,.027683692052960396],[-.03392060846090317,.06083637475967407,.08034267276525497,-.011375296860933304,-.02174791693687439,.00552948797121644,-.03999653458595276,-.1334608644247055,.04592019319534302,-.09377843141555786,.2725892663002014,-.03992925211787224,-.24813571572303772,-.1091894656419754,.029126787558197975,.1438170075416565,-.10833927989006042,-.1585160493850708,-.1221519410610199,.013531588017940521,-.013578762300312519,-.06415306776762009,-.002717055380344391,.01037134975194931,-.12834133207798004,-.3456119894981384,-.10561729222536087,-.09918515384197235,-.04998038709163666,-.06486751139163971,-.07833534479141235,.08203725516796112,-.14843520522117615,-.031087379902601242,.03151189163327217,.03681713342666626,.010633975267410278,-.048924293369054794,.17368058860301971,.031154373660683632,-.20148862898349762,.06460477411746979,-.002464344259351492,.23516754806041718,.24886953830718994,.05662453547120094,.039233069866895676,-.094266377389431,.041967179626226425,-.2382960021495819,.04157744720578194,.1082329973578453,.06321977078914642,.10590804368257523,-.007266545668244362,-.168733149766922,.03552013263106346,.04180492088198662,-.21956180036067963,-.03262937441468239,-.020543420687317848,-.1332450658082962,-.03308112174272537,-.029434876516461372,.23145446181297302,.1503576934337616,-.12358271330595016,-.16461136937141418,.15156839787960052,-.12448814511299133,-.05257776379585266,.057267386466264725,-.1641595959663391,-.16288942098617554,-.30143383145332336,.08723852783441544,.45913010835647583,.12017294019460678,-.24618995189666748,.01917504146695137,-.11305173486471176,-.04875881224870682,.10070321708917618,.08439511060714722,.013038793578743935,-.0706927627325058,-.05503605306148529,-.004600930958986282,.1998031735420227,-.04712081700563431,-.06470074504613876,.1655665785074234,-.04547111690044403,.01979030668735504,.06409849226474762,.08488421142101288,-.03758593648672104,.05436266213655472,-.11357201635837555,-.022898269817233086,.005193633958697319,-.03720155358314514,.015938475728034973,.1158074140548706,-.17316216230392456,.1449536681175232,-.0013945805840194225,-.031147144734859467,.037248097360134125,-.01900150068104267,-.04856480285525322,-.04206136241555214,.11257991194725037,-.34365153312683105,.19278904795646667,.21349091827869415,.04078463092446327,.1198635920882225,.05540281906723976,.07599662989377975,-.008130966685712337,-.012093203142285347,-.21015138924121857,-.06098952144384384,.09034626185894012,.05058214068412781,.04735804721713066,.014337943866848946]]},{label:"MayorCharlie",descriptors:[[-.10662992298603058,.07969324290752411,.08097980171442032,.0014311146223917603,-.04944568872451782,-.12911032140254974,-.04830341786146164,-.22807732224464417,.10457801818847656,-.11087343096733093,.334823340177536,-.02378161810338497,-.1522161364555359,-.14572280645370483,.04598891735076904,.16483795642852783,-.16559353470802307,-.07994663715362549,-.08515087515115738,-.03599099814891815,.029075441882014275,-.02076619863510132,.09208446741104126,-.026673130691051483,-.023768750950694084,-.35414040088653564,-.14635448157787323,-.11051109433174133,.049681778997182846,-.06199098378419876,-.03362349420785904,.029240824282169342,-.1789984107017517,-.10422006994485855,.013648919761180878,.04604741930961609,-.030967067927122116,-.06854160130023956,.2081368863582611,-.05302201583981514,-.15640340745449066,.01822987198829651,-.05318991467356682,.19963139295578003,.20418588817119598,.06675206869840622,.024209914728999138,-.1406446397304535,.10295622795820236,-.16542118787765503,.01536080613732338,.09522826224565506,.04050259292125702,.04902613162994385,-.002315810415893793,-.0792354866862297,.04418375715613365,.03382553532719612,-.11264383047819138,-.05193103477358818,.11077306419610977,-.133137509226799,-.05836714059114456,-.07165331393480301,.2584443986415863,.08935634046792984,-.07952672243118286,-.07938249409198761,.11806958168745041,-.08490298688411713,-.08070933818817139,.005808992777019739,-.1889767348766327,-.1697705239057541,-.30346906185150146,.023867405951023102,.4162129759788513,.08579143136739731,-.22664786875247955,-.00025670829927548766,-.11916685104370117,.07578353583812714,.17097491025924683,.07876033335924149,.016090990975499153,-.028237130492925644,-.10004349052906036,-.028086502104997635,.20201627910137177,-.12493167817592621,-.056314725428819656,.22310397028923035,-.042027197778224945,.1389673501253128,.036616984754800797,-.012343483045697212,.03724448382854462,.009097915142774582,-.09766463190317154,.008852086961269379,.09059422463178635,-.010297968052327633,.013522095046937466,.1144329085946083,-.14179334044456482,.10111933946609497,.013450981117784977,.08224119991064072,.09894918650388718,-.01581660844385624,-.06205730140209198,-.11561205238103867,.10394754260778427,-.21146148443222046,.24040307104587555,.2310096174478531,-.03583923354744911,.143356591463089,.051781825721263885,.13934257626533508,-.08925338089466095,.001849643886089325,-.205524280667305,-.023208392783999443,.10030410438776016,.10143305361270905,.02903960831463337,.005224443040788174],[-.04502743110060692,.03694657236337662,.08203157037496567,-.0395040325820446,-.07885992527008057,-.05118657276034355,-.003679217305034399,-.22442299127578735,.1265951246023178,-.13393034040927887,.28818491101264954,-.07129400223493576,-.2000356763601303,-.1425711214542389,.020005933940410614,.15101878345012665,-.17207582294940948,-.10402441769838333,-.06714639067649841,-.06866152584552765,.021014131605625153,-.02213308773934841,.08869066089391708,-.027772312983870506,-.06643719971179962,-.33623361587524414,-.17100699245929718,-.12320296466350555,.029718413949012756,-.047190696001052856,-.04218215122818947,.0478142686188221,-.16719718277454376,-.09780372679233551,.02808423712849617,.012775525450706482,-.05152725800871849,-.05252227559685707,.16288253664970398,-.04054800048470497,-.14095257222652435,.06551404297351837,-.019697513431310654,.1752013862133026,.14358192682266235,.09239105880260468,.0024363889824599028,-.16533266007900238,.1415310502052307,-.15446582436561584,.023309363052248955,.11520425975322723,.04030555859208107,.043025486171245575,.029896706342697144,-.08891800045967102,.04548462852835655,.10868609696626663,-.14941561222076416,.01988663710653782,.08398541063070297,-.10656098276376724,-.07305306941270828,-.0590876042842865,.24674035608768463,.15004976093769073,-.10046776384115219,-.15388986468315125,.14693503081798553,-.0641225278377533,-.10952296108007431,.011191929690539837,-.17471890151500702,-.1333082914352417,-.23837371170520782,.015440103597939014,.4206177890300751,.029012911021709442,-.2554233968257904,-.014164966531097889,-.10092320293188095,.06273657083511353,.15099652111530304,.11403152346611023,-.027508683502674103,-.030055047944188118,-.10129491239786148,-.06321188062429428,.15874448418617249,-.11623682081699371,-.047937579452991486,.23705589771270752,-.04293558746576309,.15785425901412964,.061164699494838715,.0036230222322046757,-.08161982148885727,.032393358647823334,-.14637398719787598,-.05512894690036774,.10440915077924728,-.004723408259451389,-.02056913636624813,.11078239977359772,-.11440370976924896,.1833019256591797,-.021253250539302826,.05090731754899025,.04773671180009842,-.06954415887594223,-.014594906009733677,-.01770206354558468,.10290990024805069,-.24803026020526886,.24501857161521912,.17007696628570557,-.004921000450849533,.12962304055690765,.06620270013809204,.07890406996011734,-.06031250208616257,-.0003998360480181873,-.24807506799697876,-.04439917206764221,.12053613364696503,.007648263592272997,.009832830168306828,-.023113133385777473]]},{label:"ViceMayorGrace",descriptors:[[-.07584352046251297,.05928716063499451,.0481642447412014,-.04840342327952385,-.11505831778049469,-.06368512660264969,-.031241053715348244,-.18176516890525818,.19902601838111877,-.15892842411994934,.22779469192028046,-.06535394489765167,-.19292870163917542,-.03592424467206001,-.04235805198550224,.24293996393680573,-.18521936237812042,-.14554883539676666,-.10547666251659393,.03741636127233505,-.017329536378383636,-.0625419169664383,.020871523767709732,.008633148856461048,-.03182322904467583,-.3480047583580017,-.11866400390863419,-.06325981765985489,-.05459804832935333,-.030918579548597336,-.05889242887496948,.04317827150225639,-.2141379863023758,-.05771347135305405,.03486940264701843,.06424512714147568,-.03545818105340004,-.14049001038074493,.16736695170402527,-.04542058706283569,-.2763815224170685,-.051635004580020905,.10552304983139038,.12433450669050217,.16254974901676178,.03439659997820854,-.008720435202121735,-.17516009509563446,.1304735243320465,-.1977960169315338,-.034084610641002655,.06631440669298172,.06530894339084625,.044150061905384064,.02866031602025032,-.14949272572994232,.04756317287683487,.10311508178710938,-.17609529197216034,-.06381825357675552,.08161419630050659,-.07991962134838104,-.11479061096906662,-.11878495663404465,.29512155055999756,.19443966448307037,-.1544104814529419,-.10950922220945358,.1502460092306137,-.10838766396045685,-.014024549163877964,.02655819058418274,-.10205293446779251,-.234591543674469,-.27071183919906616,-.03418823331594467,.4245220720767975,.05907187610864639,-.18072767555713654,-.01726642996072769,-.045254189521074295,.010969484224915504,.10416978597640991,.15584418177604675,-.025194428861141205,.022930607199668884,-.059034332633018494,-.024917669594287872,.22727598249912262,-.09429865330457687,.020942211151123047,.17762386798858643,-.08451765775680542,.0255575068295002,-.0377512164413929,.05930175632238388,-.049854300916194916,.045885615050792694,-.1512124091386795,.011731619946658611,.07100136578083038,-.023090779781341553,-.03178311511874199,.06526117771863937,-.1383417546749115,.007698403671383858,.008889133110642433,-.01981809176504612,.054761748760938644,-.08122573047876358,-.06936444342136383,-.07950171083211899,.10485226660966873,-.2499934881925583,.2071537971496582,.13123001158237457,-.07065068185329437,.15792050957679749,.065147764980793,.14071962237358093,-.025851916521787643,-.06001589819788933,-.1995660960674286,-.04055109992623329,.1254742294549942,.003969023935496807,.06824985891580582,-.04567951709032059],[-.07584352046251297,.05928716063499451,.0481642447412014,-.04840342327952385,-.11505831778049469,-.06368512660264969,-.031241053715348244,-.18176516890525818,.19902601838111877,-.15892842411994934,.22779469192028046,-.06535394489765167,-.19292870163917542,-.03592424467206001,-.04235805198550224,.24293996393680573,-.18521936237812042,-.14554883539676666,-.10547666251659393,.03741636127233505,-.017329536378383636,-.0625419169664383,.020871523767709732,.008633148856461048,-.03182322904467583,-.3480047583580017,-.11866400390863419,-.06325981765985489,-.05459804832935333,-.030918579548597336,-.05889242887496948,.04317827150225639,-.2141379863023758,-.05771347135305405,.03486940264701843,.06424512714147568,-.03545818105340004,-.14049001038074493,.16736695170402527,-.04542058706283569,-.2763815224170685,-.051635004580020905,.10552304983139038,.12433450669050217,.16254974901676178,.03439659997820854,-.008720435202121735,-.17516009509563446,.1304735243320465,-.1977960169315338,-.034084610641002655,.06631440669298172,.06530894339084625,.044150061905384064,.02866031602025032,-.14949272572994232,.04756317287683487,.10311508178710938,-.17609529197216034,-.06381825357675552,.08161419630050659,-.07991962134838104,-.11479061096906662,-.11878495663404465,.29512155055999756,.19443966448307037,-.1544104814529419,-.10950922220945358,.1502460092306137,-.10838766396045685,-.014024549163877964,.02655819058418274,-.10205293446779251,-.234591543674469,-.27071183919906616,-.03418823331594467,.4245220720767975,.05907187610864639,-.18072767555713654,-.01726642996072769,-.045254189521074295,.010969484224915504,.10416978597640991,.15584418177604675,-.025194428861141205,.022930607199668884,-.059034332633018494,-.024917669594287872,.22727598249912262,-.09429865330457687,.020942211151123047,.17762386798858643,-.08451765775680542,.0255575068295002,-.0377512164413929,.05930175632238388,-.049854300916194916,.045885615050792694,-.1512124091386795,.011731619946658611,.07100136578083038,-.023090779781341553,-.03178311511874199,.06526117771863937,-.1383417546749115,.007698403671383858,.008889133110642433,-.01981809176504612,.054761748760938644,-.08122573047876358,-.06936444342136383,-.07950171083211899,.10485226660966873,-.2499934881925583,.2071537971496582,.13123001158237457,-.07065068185329437,.15792050957679749,.065147764980793,.14071962237358093,-.025851916521787643,-.06001589819788933,-.1995660960674286,-.04055109992623329,.1254742294549942,.003969023935496807,.06824985891580582,-.04567951709032059]]},{label:"MayorStephen",descriptors:[[-.13492067158222198,.06954564899206161,.07504091411828995,.01317481230944395,-.0531904511153698,-.08870121836662292,-.06914113461971283,-.15488097071647644,.08426747471094131,-.06757643073797226,.2973695695400238,-.09707730263471603,-.18183548748493195,-.15807539224624634,-.031924232840538025,.20942668616771698,-.16843152046203613,-.05938790366053581,-.09488996863365173,.0005353671731427312,.07794561982154846,-.033202629536390305,.039703961461782455,.03733057528734207,-.07072095572948456,-.39014455676078796,-.08770229667425156,-.02716749720275402,.049012888222932816,-.0038190342020243406,-.09502939134836197,.03750584274530411,-.2307833433151245,-.12955817580223083,.023605311289429665,.10199156403541565,-.03838806971907616,-.048913486301898956,.16614297032356262,.016037004068493843,-.1656161993741989,.03484993055462837,-.004230758640915155,.23932650685310364,.23971572518348694,.07530325651168823,.037554312497377396,-.10557911545038223,.09344041347503662,-.18036654591560364,-.018545005470514297,.14947466552257538,.076523058116436,.0803593322634697,-.017602471634745598,-.09965161234140396,.024610599502921104,.1438625603914261,-.11856385320425034,.005382890813052654,.035534244030714035,-.1509557068347931,-.06080656498670578,-.07228700071573257,.21781136095523834,.05915142968297005,-.12329467386007309,-.1301955282688141,.10006094723939896,-.06697331368923187,-.03721100091934204,-.002400684170424938,-.15573281049728394,-.19449719786643982,-.35294294357299805,.05394894257187843,.3643464744091034,.07892787456512451,-.28675124049186707,.02742902748286724,-.049651455134153366,.034831296652555466,.1719447374343872,.15677909553050995,.0592702217400074,-.01167016290128231,-.1118270605802536,-.04097539931535721,.14169616997241974,-.09654350578784943,-.00040357353282161057,.2529454529285431,-.033488016575574875,.07011360675096512,.0258319154381752,.04447334632277489,-.08667586743831635,.04505370929837227,-.09897090494632721,-.04495973885059357,.12856115400791168,-.0032007922418415546,.03543102741241455,.050185900181531906,-.12477203458547592,.130075603723526,-.001070078811608255,.10326219350099564,.09032069891691208,-.10205454379320145,-.06300974637269974,-.07050086557865143,.1019609123468399,-.20696279406547546,.2297627329826355,.21994289755821228,-.019683266058564186,.15444405376911163,.1351078599691391,.09945408254861832,-.018142802640795708,.040031418204307556,-.15296190977096558,-.026861315593123436,.07665273547172546,.01142929494380951,.054712291806936264,-.024518774822354317],[-.09626534581184387,.09991470724344254,.036094531416893005,.024484504014253616,-.007364094723016024,-.10661888122558594,-.07073821127414703,-.1297237128019333,.14032171666622162,-.04195543751120567,.3100888431072235,-.07333073019981384,-.21007131040096283,-.14977732300758362,-.00013022519124206156,.18440966308116913,-.1576724648475647,-.06511051952838898,-.10826461017131805,-.03073643147945404,.04759930819272995,-.029486484825611115,.06319303065538406,.08057563751935959,-.0817606970667839,-.4106367826461792,-.13131077587604523,-.07046593725681305,.0422663651406765,-.0978887677192688,-.1157035306096077,.0727391391992569,-.16377712786197662,-.16145700216293335,.04143386334180832,.1264495551586151,-.00011414517211960629,-.0582110658288002,.17087526619434357,.015060869045555592,-.13938283920288086,-.041518647223711014,.010096900165081024,.2446429580450058,.28465744853019714,.11410292983055115,.02234179899096489,-.10251253843307495,.11769294738769531,-.18184877932071686,.0155657222494483,.10837364196777344,.037907205522060394,.10027416050434113,.005389904137700796,-.11802618205547333,.021108780056238174,.13269680738449097,-.16129694879055023,-.07604225724935532,3887687125825323e-20,-.15061329305171967,-.08159466087818146,-.02546634152531624,.19640125334262848,.1372189223766327,-.08047192543745041,-.10652350634336472,.14796821773052216,-.1462768167257309,-.0472327396273613,.00015613787400070578,-.14000093936920166,-.15012127161026,-.3524056375026703,.007078253198415041,.42576950788497925,.0542757585644722,-.2108033299446106,.02879990264773369,.007251613773405552,-.021931931376457214,.1617010086774826,.10891992598772049,-.038718096911907196,-.015949338674545288,-.10593410581350327,.004501954186707735,.16368071734905243,-.01798434741795063,-.004436354618519545,.1737254559993744,-.07268495857715607,.14085566997528076,.11679882556200027,.08294232934713364,-.052101802080869675,.048755496740341187,-.1253422349691391,-.010878109373152256,.11339879781007767,-.013039239682257175,.005204769317060709,.04928676784038544,-.12203411012887955,.10381019115447998,.034459732472896576,.06588742882013321,.07028015702962875,-.08435933291912079,-.05991865694522858,-.05704742670059204,.15035775303840637,-.21183784306049347,.17846331000328064,.20054978132247925,-.05359027534723282,.1549597531557083,.06453384459018707,.115043506026268,-.03533852472901344,-.02917642518877983,-.2112458497285843,-.0046990057453513145,.0819876492023468,.007853779010474682,.05307076498866081,-.04222212731838226]]},{label:"ViceMayorRoberto",descriptors:[[-.04640661180019379,.03379432111978531,.08423294126987457,.01827157847583294,-.01231343112885952,-.03199721500277519,-.09210541844367981,-.18344570696353912,.10268296301364899,-.14798153936862946,.2636261582374573,-.05124838650226593,-.14963021874427795,-.2356538325548172,.058067675679922104,.15299728512763977,-.17570818960666656,-.17116416990756989,-.11087449640035629,-.023313481360673904,-.03892693668603897,-.06412938237190247,.06739561259746552,-.05531337484717369,-.07765423506498337,-.34612077474594116,-.15249691903591156,-.08661170303821564,.13959334790706635,.008401256054639816,-.16270007193088531,.01202439796179533,-.23022328317165375,-.11947036534547806,.055590223520994186,.15939319133758545,-.01902293786406517,-.0399232842028141,.16362062096595764,-.03368186205625534,-.15118667483329773,.024741344153881073,.012336783111095428,.17303496599197388,.23250441253185272,.09160231053829193,-.015064413659274578,-.06522870063781738,.11198031157255173,-.18176446855068207,.12976370751857758,.16481278836727142,.17535226047039032,.12838974595069885,.03894850239157677,-.06375077366828918,.06190244480967522,.11561454832553864,-.1487007439136505,-.03299540653824806,.07761219888925552,-.09462461620569229,-.017034189775586128,-.025548381730914116,.22999706864356995,.11414743214845657,-.08246201276779175,-.14666980504989624,.13410145044326782,-.11466868221759796,-.0435633510351181,.016565214842557907,-.14531944692134857,-.09908681362867355,-.34726086258888245,.023987846449017525,.4343176484107971,.11545099318027496,-.19808286428451538,.027886753901839256,-.08013489097356796,-.07518160343170166,.08936432003974915,.0888013243675232,-.016039345413446426,.011574875563383102,-.0771220251917839,-.019655682146549225,.1846396028995514,-.0646539181470871,.0007365898345597088,.14701005816459656,-.030303820967674255,.09987782686948776,.031789809465408325,-.021675243973731995,.01490694284439087,-.02524901181459427,-.11786051094532013,-.02283797413110733,-.017740793526172638,-.012537841685116291,-.0189884714782238,.06052049621939659,-.12819750607013702,.12695932388305664,.03964925557374954,.016152923926711082,.042038168758153915,-.06036622077226639,-.04145224764943123,-.07622916251420975,.10035938024520874,-.282768189907074,.18881402909755707,.20236614346504211,.037174101918935776,.12604528665542603,.06551949679851532,.11055877804756165,-.019033264368772507,-.0322929210960865,-.17787697911262512,-.09071437269449234,.03408429026603699,.004901873413473368,.05149708688259125,.06058895215392113],[-.04640661180019379,.03379432111978531,.08423294126987457,.01827157847583294,-.01231343112885952,-.03199721500277519,-.09210541844367981,-.18344570696353912,.10268296301364899,-.14798153936862946,.2636261582374573,-.05124838650226593,-.14963021874427795,-.2356538325548172,.058067675679922104,.15299728512763977,-.17570818960666656,-.17116416990756989,-.11087449640035629,-.023313481360673904,-.03892693668603897,-.06412938237190247,.06739561259746552,-.05531337484717369,-.07765423506498337,-.34612077474594116,-.15249691903591156,-.08661170303821564,.13959334790706635,.008401256054639816,-.16270007193088531,.01202439796179533,-.23022328317165375,-.11947036534547806,.055590223520994186,.15939319133758545,-.01902293786406517,-.0399232842028141,.16362062096595764,-.03368186205625534,-.15118667483329773,.024741344153881073,.012336783111095428,.17303496599197388,.23250441253185272,.09160231053829193,-.015064413659274578,-.06522870063781738,.11198031157255173,-.18176446855068207,.12976370751857758,.16481278836727142,.17535226047039032,.12838974595069885,.03894850239157677,-.06375077366828918,.06190244480967522,.11561454832553864,-.1487007439136505,-.03299540653824806,.07761219888925552,-.09462461620569229,-.017034189775586128,-.025548381730914116,.22999706864356995,.11414743214845657,-.08246201276779175,-.14666980504989624,.13410145044326782,-.11466868221759796,-.0435633510351181,.016565214842557907,-.14531944692134857,-.09908681362867355,-.34726086258888245,.023987846449017525,.4343176484107971,.11545099318027496,-.19808286428451538,.027886753901839256,-.08013489097356796,-.07518160343170166,.08936432003974915,.0888013243675232,-.016039345413446426,.011574875563383102,-.0771220251917839,-.019655682146549225,.1846396028995514,-.0646539181470871,.0007365898345597088,.14701005816459656,-.030303820967674255,.09987782686948776,.031789809465408325,-.021675243973731995,.01490694284439087,-.02524901181459427,-.11786051094532013,-.02283797413110733,-.017740793526172638,-.012537841685116291,-.0189884714782238,.06052049621939659,-.12819750607013702,.12695932388305664,.03964925557374954,.016152923926711082,.042038168758153915,-.06036622077226639,-.04145224764943123,-.07622916251420975,.10035938024520874,-.282768189907074,.18881402909755707,.20236614346504211,.037174101918935776,.12604528665542603,.06551949679851532,.11055877804756165,-.019033264368772507,-.0322929210960865,-.17787697911262512,-.09071437269449234,.03408429026603699,.004901873413473368,.05149708688259125,.06058895215392113]]},{label:"MayorDonato",descriptors:[[-.08362990617752075,.13034795224666595,.06763789057731628,.044052913784980774,-.07222285866737366,.027557644993066788,-.029908107593655586,-.18768411874771118,.13808874785900116,-.06103656813502312,.2897622883319855,-.01850251667201519,-.19454526901245117,-.09339313209056854,-.018089300021529198,.1575206220149994,-.11593552678823471,-.13399076461791992,-.03400382772088051,-.0474298819899559,.01516411267220974,-.04706815257668495,.009149299934506416,.049217067658901215,-.08722317218780518,-.2551271617412567,-.06053578108549118,-.11909249424934387,-.018346063792705536,-.010330514051020145,-.08175836503505707,.02191009558737278,-.17888441681861877,-.142953023314476,.06512284278869629,.04523604363203049,-.01600223407149315,-.029246734455227852,.17038454115390778,-.08549486845731735,-.13521862030029297,.05005296692252159,.10018926858901978,.2606586813926697,.14038492739200592,.07382147759199142,.030924687162041664,-.11650806665420532,.10305628180503845,-.19711753726005554,.060438528656959534,.08532417565584183,.10423256456851959,.015957791358232498,.022791486233472824,-.20249684154987335,-.001479016151279211,.06726774573326111,-.09749994426965714,.05737386271357536,.08333779871463776,-.03812257573008537,-.07094758003950119,-.04168296605348587,.23906271159648895,.08855048567056656,-.07677394896745682,-.15950855612754822,.1273234784603119,-.040662068873643875,-.06457196921110153,.09053893387317657,-.19225770235061646,-.19673649966716766,-.31418290734291077,.09298413246870041,.5046183466911316,.081659235060215,-.19934378564357758,-.0005724973743781447,-.06486087292432785,.07061993330717087,.11965274810791016,.05103009194135666,.00657570268958807,-.0710446909070015,-.13150013983249664,.0027102043386548758,.20434390008449554,-.05887031927704811,-.0814167931675911,.15194006264209747,.004581036511808634,-.005638520233333111,.0013795493869110942,.09024525433778763,-.04368237033486366,.04948136582970619,-.22650788724422455,-.053708985447883606,.07201972603797913,.05479270964860916,.023292362689971924,.14865107834339142,-.21451567113399506,.016186881810426712,-.0014867944410070777,-.011911464855074883,.029773520305752754,.006296045146882534,-.12419702112674713,-.03751068562269211,.12158608436584473,-.24639426171779633,.15704387426376343,.15853382647037506,.06233230605721474,.10204906761646271,.0812980905175209,.03080098330974579,.043790340423583984,-.012577850371599197,-.1915789544582367,-.07882653921842575,.09309141337871552,.007384869270026684,.044998206198215485,.020252611488103867],[-.04885176196694374,.04530375078320503,.10835758596658707,-.0017003897810354829,-.03921962156891823,.012238647788763046,-.022609274834394455,-.1737717092037201,.1562189757823944,-.09512730687856674,.2593672275543213,-.022451573982834816,-.15694768726825714,-.08684494346380234,-.006330754607915878,.14455612003803253,-.1642579585313797,-.15566253662109375,-.04565763473510742,-.015019644051790237,.014111965894699097,-.04562941938638687,-.02413252554833889,-.015452258288860321,-.06031196936964989,-.33481454849243164,-.11478155851364136,-.10775528848171234,-.0007385713397525251,-.03455303609371185,-.04333874210715294,.009124443866312504,-.1982198804616928,-.1089305505156517,.025699274614453316,.07006825506687164,-.018901368603110313,-.06192419305443764,.15790274739265442,-.023399552330374718,-.11562542617321014,.10331875085830688,.035740844905376434,.2247120589017868,.1678454875946045,.06713128834962845,.05377214401960373,-.13833285868167877,.1027204841375351,-.18509653210639954,.06369352340698242,.10440999269485474,.10737062990665436,.051950015127658844,.05986497178673744,-.12504760921001434,.0209181010723114,.032784655690193176,-.1042473316192627,.02950257621705532,.10209904611110687,.004490191116929054,-.023011108860373497,-.01987018994987011,.22619616985321045,.061828356236219406,-.0500396229326725,-.14933156967163086,.12310958653688431,-.03322667255997658,-.10007072240114212,-.00625587860122323,-.1786743551492691,-.14260011911392212,-.2828645706176758,.08524037152528763,.530658483505249,.05954230949282646,-.2163013070821762,.07010380178689957,-.14843924343585968,.01393991056829691,.10930981487035751,.012228686362504959,.0011306334054097533,-.01865609548985958,-.11701084673404694,.023655787110328674,.20636537671089172,-.03972345218062401,-.04343529790639877,.11742442101240158,-.026076896116137505,.013007095083594322,.039446063339710236,.018726401031017303,-.03960980474948883,.07186610251665115,-.19506533443927765,-.09752557426691055,.06904257088899612,.05673045292496681,.02902202121913433,.12681005895137787,-.22149395942687988,.11091658473014832,.010398922488093376,-.023035457357764244,.05699324980378151,.022680651396512985,-.1230916827917099,-.00566680496558547,.12809500098228455,-.26554667949676514,.16433431208133698,.14357063174247742,.032988257706165314,.10834375768899918,.07213788479566574,.06920485198497772,-.020498309284448624,.01849531941115856,-.20688948035240173,-.06330345571041107,.05142347514629364,.10387080162763596,.05891682207584381,.05447666719555855]]},{label:"ViceMayorPaulo",descriptors:[[-.11253346502780914,.06528731435537338,.009870234876871109,.01574609987437725,-.06601709127426147,-.1039121225476265,.004214904736727476,-.1832389235496521,.09725213795900345,.0032272024545818567,.2405683398246765,-.06939014792442322,-.21664126217365265,-.12681569159030914,-.014603544026613235,.11734886467456818,-.2267332524061203,-.18958063423633575,-.033724892884492874,-.05312459170818329,-.017358388751745224,-.10330115258693695,.034189529716968536,.052537497133016586,-.040553562343120575,-.3168535828590393,-.12454114854335785,-.12587368488311768,.07578078657388687,.01147494651377201,-.07913010567426682,.05346091091632843,-.18851116299629211,-.15728524327278137,.07470706850290298,.16645784676074982,-.010348514653742313,-.03994489833712578,.15983380377292633,-.06551869958639145,-.10268674045801163,.0008463846752420068,.06206044554710388,.2933654189109802,.0941312238574028,.0385151132941246,.022998757660388947,-.03934166580438614,.0038508379366248846,-.19639603793621063,.056569937616586685,.17364661395549774,.1613408923149109,.05765998363494873,-.00031075297738425434,-.1502096801996231,.034956883639097214,.15589380264282227,-.14727893471717834,.07116839289665222,.09518750756978989,-.09433126449584961,-.05506442114710808,-.05631060525774956,.27700552344322205,.15033164620399475,-.0954952985048294,-.12477438151836395,.15016596019268036,-.06394204497337341,-.07073234021663666,-.0006555273430421948,-.14797665178775787,-.15908905863761902,-.24118754267692566,.07316530495882034,.4337408244609833,.04874799773097038,-.19144421815872192,.014174366369843483,-.12660208344459534,.013288265094161034,.07363367080688477,.03394192457199097,-.060673076659440994,.018853487446904182,-.20018742978572845,.004140257369726896,.13857682049274445,-.06729987263679504,.0029619827400892973,.11244239658117294,-.027727317065000534,.0529097244143486,.06512834876775742,.037108052521944046,-.024121737107634544,.049122780561447144,-.18931342661380768,-.020401207730174065,.07494679093360901,-.09577956050634384,-.019216932356357574,.06412434577941895,-.12716419994831085,-.026341477409005165,.05585699900984764,-.03072206676006317,.01332787610590458,-.03493232652544975,-.05696934834122658,-.09964113682508469,.1520908772945404,-.28446927666664124,.23730306327342987,.24187159538269043,.01926066353917122,.13943567872047424,.026662301272153854,.0508979856967926,.006006162613630295,-.07254134118556976,-.15306581556797028,-.0333719477057457,.03949175029993057,.01780279353260994,-.042013902217149734,.03470078483223915],[-.07960012555122375,.061803679913282394,.0379515215754509,.07168259471654892,-.04222912713885307,-.1286170780658722,.031905803829431534,-.13883838057518005,.09563492983579636,.036922939121723175,.29399192333221436,-.07318179309368134,-.19654403626918793,-.14166638255119324,.03190547600388527,.1227574497461319,-.13423144817352295,-.15027008950710297,-.04142158851027489,-.07655062526464462,.01700655184686184,-.07972627133131027,.010722904466092587,.10402499884366989,-.03408532589673996,-.27060776948928833,-.11068983376026154,-.12428318709135056,.11982154101133347,-.07586728036403656,-.08176420629024506,.008419514633715153,-.1596384346485138,-.12013832479715347,.020179936662316322,.08601655811071396,-.05959593877196312,-.06379352509975433,.21780608594417572,-.009759756736457348,-.12645301222801208,-.05206431448459625,-.01065084245055914,.2855372130870819,.17037247121334076,-.008243590593338013,.008320539258420467,.022379836067557335,-.008376972749829292,-.24651794135570526,.052908096462488174,.18913185596466064,.20488375425338745,.06065836176276207,-.00855310820043087,-.10355563461780548,-.03550056740641594,.12356094270944595,-.15224988758563995,.05119434371590614,.06400509178638458,-.11965369433164597,-.059568632394075394,-.0368022695183754,.2470652163028717,.1282377988100052,-.08074110746383667,-.08714193105697632,.14351065456867218,-.11518751084804535,-.06255370378494263,.03697280213236809,-.10977330058813095,-.17782214283943176,-.22000013291835785,.1271263062953949,.4072572588920593,.048495449125766754,-.22997871041297913,.016834966838359833,-.14873585104942322,.010902945883572102,.054238926619291306,-.025909671559929848,-.04070786386728287,-.011549168266355991,-.2158687561750412,-.02960040606558323,.11831602454185486,-.11890031397342682,.05225709453225136,.16210956871509552,-.038151562213897705,.03289599344134331,.07630931586027145,.037500567734241486,.0067334710620343685,.04642930626869202,-.09167484194040298,-.033731479197740555,.10087574273347855,-.11690855771303177,.03393920883536339,.03158989176154137,-.16147346794605255,.030579498037695885,.06195691600441933,-.020047370344400406,.059195201843976974,-.01697736419737339,-.09565809369087219,-.1376001536846161,.17050732672214508,-.25094693899154663,.20118115842342377,.18905268609523773,-.032091282308101654,.12371894717216492,.003085282165557146,.11828194558620453,-.02807912975549698,-.09255404770374298,-.08566230535507202,-.0014532941859215498,.03344334289431572,.03348616138100624,-.08189035952091217,.023347282782197]]},{label:"MayorDennis",descriptors:[[-.06080232188105583,.0785055011510849,.09059713780879974,-.025563376024365425,-.05465889722108841,-.13976681232452393,-.027273448184132576,-.18303099274635315,.07634451985359192,-.11218662559986115,.1959886997938156,-.10860215127468109,-.2135610580444336,-.10890088230371475,-.028071731328964233,.1626305729150772,-.1942727267742157,-.22301900386810303,-.09379173070192337,-.06135176122188568,.06297001987695694,-.05252213403582573,-.009092778898775578,-.03750648349523544,-.09385427087545395,-.343205064535141,-.10682615637779236,-.06039556488394737,-.015140143223106861,.012759782373905182,.013268238864839077,.07205521315336227,-.18907175958156586,-.08647838979959488,.08339143544435501,.05255695804953575,-.007669997867196798,-.06914257258176804,.19912099838256836,.01649565063416958,-.18115690350532532,.026191940531134605,.025872159749269485,.249432772397995,.2168211191892624,.008724188432097435,.03678392618894577,-.1276792585849762,.16952615976333618,-.188026562333107,-.006811038590967655,.16589850187301636,.09743249416351318,.0725553035736084,.07288067042827606,-.0541493184864521,.05272693559527397,.21085645258426666,-.1988433599472046,.011620833538472652,.1025375947356224,-.14351795613765717,-.05902823060750961,-.08531741052865982,.2393953651189804,.10105078667402267,-.1190168559551239,-.15942105650901794,.19910389184951782,-.050050802528858185,-.08967476338148117,.010016066953539848,-.13731494545936584,-.10067712515592575,-.25304296612739563,.026987144723534584,.4800524115562439,.020323118194937706,-.18945656716823578,.03517301380634308,-.0939885675907135,.023735662922263145,.13553227484226227,.07519251853227615,-.05322493612766266,-.03567369654774666,-.07227940112352371,-.0331205278635025,.19313855469226837,-.026486536487936974,-.0608690045773983,.15342757105827332,-.07843805849552155,.047401998192071915,.0650181695818901,-.029804887250065804,-.08879370987415314,.05369805544614792,-.1329660266637802,-.056364528834819794,.027921786531805992,-.07456716895103455,.009157133288681507,.10187897831201553,-.08630155026912689,.05487435683608055,-.027155425399541855,.08019451797008514,.00929357297718525,-.040641870349645615,-.04626414552330971,-.042807742953300476,.059694863855838776,-.2789093554019928,.1967960149049759,.13969258964061737,-.020827651023864746,.08931280672550201,.06317833811044693,.045578040182590485,-.009371401742100716,-.016064602881669998,-.19642800092697144,-.043592654168605804,.1026604026556015,.08655474334955215,.04602564871311188,-.023379186168313026],[-.09909733384847641,.08581151068210602,.05426466092467308,-.020632080733776093,-.007111119106411934,-.12090570479631424,-.02029011771082878,-.21722610294818878,.13626515865325928,-.15440380573272705,.25829848647117615,-.06423236429691315,-.24469532072544098,-.1226620078086853,.0079107116907835,.15005552768707275,-.14466533064842224,-.11839920282363892,-.08293087780475616,-.03436855599284172,.05088222771883011,-.016749776899814606,.03234206140041351,-.02203366719186306,-.03410685062408447,-.3431885242462158,-.12795113027095795,-.06357358396053314,.008198516443371773,.0358639657497406,-.04663556441664696,.016675757244229317,-.1999904215335846,-.15208131074905396,.06040114536881447,.08577843755483627,-.05577573925256729,-.058318909257650375,.17932984232902527,.012141583487391472,-.18505574762821198,-.006377197336405516,.021700439974665642,.21146614849567413,.19113418459892273,.06308688968420029,.015862908214330673,-.13562212884426117,.1257610023021698,-.1897863894701004,.031009387224912643,.10869105905294418,.11070191115140915,.070006363093853,.07272119075059891,-.13119347393512726,.0322708934545517,.14218047261238098,-.1671638786792755,-.015376382507383823,.11598098278045654,-.11842323839664459,-.04485407844185829,-.03291869908571243,.28383782505989075,.1417849361896515,-.16076703369617462,-.1378750503063202,.18836051225662231,-.06903035193681717,-.08797034621238708,.019788386300206184,-.14708320796489716,-.11627580225467682,-.32741379737854004,.06413916498422623,.46813109517097473,.036742594093084335,-.14683108031749725,-.015082967467606068,-.10420423001050949,.029238486662507057,.12940065562725067,.1309112310409546,-.005385669879615307,-.0661579892039299,-.053096186369657516,-.06376568973064423,.15445341169834137,-.022280029952526093,-.11529776453971863,.13966406881809235,-.09969057887792587,.10455106943845749,.01730692759156227,.044572509825229645,-.11564679443836212,.01775222085416317,-.12296918034553528,-.03696880489587784,.05323163792490959,-.035761620849370956,.009233392775058746,.1801004558801651,-.10682017356157303,.09142141044139862,-.02977566048502922,.05443994700908661,.06942982226610184,-.022574901580810547,-.04717493802309036,-.03255864605307579,.022882357239723206,-.26316866278648376,.26740384101867676,.14054103195667267,-.013934241607785225,.10400640219449997,.08061964064836502,.04772495850920677,.016752250492572784,.01989150047302246,-.25151747465133667,-.10531426221132278,.05708596110343933,.061416588723659515,.07036247849464417,-.017610983923077583]]},{label:"ViceMayorAllan",descriptors:[[-.05337284505367279,.05953911319375038,-.027331801131367683,.002877311548218131,-.05463697388768196,-.03545575216412544,.025069061666727066,-.20993690192699432,.06410424411296844,-.024719661101698875,.22496207058429718,-.10787967592477798,-.23976634442806244,-.08260690420866013,-.05531253665685654,.15344175696372986,-.1680486798286438,-.1321980506181717,-.11891545355319977,-.024056000635027885,-.012951462529599667,.005560094024986029,.03089599870145321,.004551296588033438,.03513264283537865,-.31343263387680054,-.11977510154247284,-.14042146503925323,.06450784206390381,-.03775528445839882,-.009653952904045582,.029467567801475525,-.16141198575496674,-.10397370904684067,.07490130513906479,.02802075818181038,-.07838443666696548,-.06574926525354385,.2115253061056137,-.03645908087491989,-.15807081758975983,.06787669658660889,.1084708571434021,.23844356834888458,.18605485558509827,.10692525655031204,.01729675568640232,-.13844901323318481,.028364267200231552,-.0914761945605278,.036702197045087814,.11065742373466492,.17524240911006927,.07449670881032944,-.015158693306148052,-.13083641231060028,.02702249027788639,.07309811562299728,-.14829608798027039,.01724960468709469,.10563483089208603,-.06463458389043808,-.02315959334373474,.004675271920859814,.2665659785270691,.05214763432741165,-.07563846558332443,-.14739471673965454,.16843858361244202,-.15343151986598969,-.11356339603662491,.031238431110978127,-.14324308931827545,-.12762115895748138,-.20850947499275208,.009763861075043678,.4205295741558075,.03685078024864197,-.16721272468566895,.027737975120544434,-.05936669930815697,-.0253998264670372,.10189684480428696,.1093798354268074,-.0515550822019577,-.05921194702386856,-.09653189033269882,-.057512469589710236,.2121947854757309,-.08470015227794647,-.056307703256607056,.13638095557689667,-.035133421421051025,-.005640672519803047,.0482187382876873,-.00970767717808485,-.032107286155223846,.04285833612084389,-.11149657517671585,-.11239436268806458,.055524084717035294,-.0261705182492733,.02007271908223629,.1082543209195137,-.1359507441520691,.10062303394079208,-.01544788759201765,.01863570511341095,.054936520755290985,-.0361778549849987,-.007402805145829916,-.031991805881261826,.1573520004749298,-.21508483588695526,.2343713939189911,.1509920060634613,.020267991349101067,.06729042530059814,.05740984529256821,.09635323286056519,-.0004568840085994452,.009384099394083023,-.26199233531951904,-.06587094813585281,.09611256420612335,.03494039922952652,.10004976391792297,.015307718887925148],[-.13173449039459229,.03985756263136864,-.011012604460120201,-.01804795116186142,-.12232830375432968,-.05933911353349686,-.07075310498476028,-.185734361410141,.04209917038679123,-.06701212376356125,.1815493106842041,-.15153677761554718,-.21642594039440155,-.10317929089069366,-.05575904995203018,.17908214032649994,-.17145127058029175,-.16437634825706482,-.1328653246164322,-.0386563241481781,-.013163438066840172,.008515789173543453,.039237141609191895,.014848427847027779,.01740332879126072,-.33968859910964966,-.08039679378271103,-.15281178057193756,.09346013516187668,-.019597314298152924,-.045379091054201126,.03637641668319702,-.160492941737175,-.087544284760952,.06903234869241714,.043471623212099075,-.028486784547567368,-.06550570577383041,.22606633603572845,.011974455788731575,-.19068264961242676,-.01925000362098217,.052741557359695435,.2624979019165039,.185838982462883,.04426029324531555,.06183367595076561,-.08956510573625565,.042125847190618515,-.1415148675441742,.004757331684231758,.12429554760456085,.15924079716205597,.004221574869006872,.08356409519910812,-.1296282857656479,.02471478283405304,.07336466014385223,-.15588460862636566,.03672167286276817,.09621482342481613,-.0701339915394783,-.06551015377044678,-.05809801071882248,.30796292424201965,.10168629884719849,-.05226936936378479,-.19460199773311615,.21185480058193207,-.11554120481014252,-.09516455233097076,.03793414682149887,-.12225983291864395,-.09651541709899902,-.25187772512435913,-.030089182779192924,.3924957513809204,.04905395582318306,-.19466380774974823,.07030130922794342,-.03261848911643028,-.04025055840611458,.10414066165685654,.11312643438577652,-.07848693430423737,.04300671070814133,-.07069158554077148,-.05679675191640854,.1593739539384842,-.10041966289281845,-.021136989817023277,.12695637345314026,-.029227694496512413,-.055278751999139786,.09457870572805405,-.04641343653202057,-.0463997945189476,.0032643694430589676,-.10272271931171417,-.08658086508512497,.0991547554731369,-.0754406750202179,.06702479720115662,.06390620023012161,-.10992073267698288,.015551911666989326,-.06177851930260658,-.012017159722745419,-.016273923218250275,-.0495576336979866,-.04110057279467583,-.03675717115402222,.1547928899526596,-.22433455288410187,.1860584169626236,.14927813410758972,.0035386455710977316,.08949542045593262,.08302143216133118,.08226028829813004,.0015339846722781658,.057689275592565536,-.1569843590259552,-.08496975898742676,.07080988585948944,.037315137684345245,.0495966337621212,.03876718878746033]]},{label:"MayorJayfrancis",descriptors:[[-.15114617347717285,.07171064615249634,.030213218182325363,.023559927940368652,-.07259607315063477,-.059608157724142075,-.07339739054441452,-.130046084523201,.08217966556549072,-.04807978495955467,.24345509707927704,-.11614330857992172,-.24917228519916534,-.1017148420214653,-.06815221160650253,.13846419751644135,-.18764051795005798,-.1569506675004959,-.013265689834952354,-.050136759877204895,.09795790910720825,-.06438165158033371,-.03893399238586426,.0692514032125473,-.11177128553390503,-.28850996494293213,-.08690392225980759,-.11612869799137115,.049192748963832855,-.028707798570394516,-.08438365906476974,.02105867490172386,-.2367081344127655,-.11331046372652054,.032898422330617905,.15236592292785645,-.009939448907971382,-.021086839959025383,.14998336136341095,-.12297464907169342,-.11912991851568222,.023499906063079834,.04020305722951889,.24568766355514526,.1457519680261612,.10308535397052765,-6978750752750784e-20,-.010473310947418213,.05277123674750328,-.2185225784778595,.02730870619416237,.20950503647327423,.12968474626541138,.05542384088039398,.045211467891931534,-.16600437462329865,-.0025614905171096325,.12199608236551285,-.11551938951015472,.0683385506272316,.06536876410245895,-.05728829279541969,.00016835384303703904,-.10539061576128006,.25213319063186646,.09269887953996658,-.11711195111274719,-.14391359686851501,.1681806892156601,-.13904798030853271,-.07548175752162933,.010817436501383781,-.13402383029460907,-.1760255992412567,-.29657331109046936,.03721728175878525,.36165744066238403,.11068030446767807,-.20337606966495514,.10372118651866913,-.014555996283888817,.03092171810567379,.11598638445138931,.021114306524395943,-.010919913649559021,.05440576374530792,-.15294428169727325,-.005111095495522022,.18937861919403076,-.03677773103117943,-.009535119868814945,.15502770245075226,-.06735354661941528,.03694095090031624,.0701102688908577,.011058011092245579,-.02928062528371811,.00013041590864304453,-.1384638249874115,.046664513647556305,.06473632901906967,-.05982742831110954,-.01603103056550026,.07326046377420425,-.06630092114210129,.022618362680077553,-.0361996553838253,.06982440501451492,-.08374354988336563,.0025506415404379368,-.17388056218624115,.007042374927550554,.16522078216075897,-.2643411457538605,.28980904817581177,.1566104292869568,-.022743292152881622,.0941605269908905,.11950603127479553,.043891482055187225,.017146684229373932,-.0177692249417305,-.20168466866016388,-.1350889503955841,.06928444653749466,-.060554955154657364,.07866309583187103,.041475217789411545],[-.09459114819765091,.05415982007980347,.010004175826907158,.01562168262898922,-.03869834169745445,-.04258323833346367,-.05610855668783188,-.13244526088237762,.10132906585931778,-.08683709055185318,.25337526202201843,-.15232467651367188,-.26169177889823914,-.09240535646677017,-.06968100368976593,.14504489302635193,-.20506836473941803,-.17983278632164001,.012696022167801857,-.020103510469198227,.09983886033296585,-.09412374347448349,-.012376764789223671,.08484793454408646,-.10957454890012741,-.30098864436149597,-.1332244873046875,-.07579059153795242,.031201398000121117,-.05061284080147743,-.09650306403636932,.03482040390372276,-.23478202521800995,-.0924406573176384,.0458114892244339,.14101968705654144,.0019670173060148954,-.030055148527026176,.1929066777229309,-.09845487028360367,-.12851543724536896,.06571405380964279,.017112011089920998,.27658191323280334,.1467667669057846,.10197792202234268,-.04017623886466026,-.023833030834794044,.07988817989826202,-.1897316724061966,.051178693771362305,.1714559644460678,.18557782471179962,.03713570162653923,.007350853644311428,-.16910947859287262,.007352512329816818,.14781703054904938,-.1547815203666687,.06343572586774826,.03060697764158249,-.11574598401784897,.025458265095949173,-.07649759948253632,.20211830735206604,.08006065338850021,-.11496390402317047,-.17568616569042206,.16840475797653198,-.13513998687267303,-.03723882883787155,.033952951431274414,-.11901655793190002,-.20162077248096466,-.3072921335697174,.03560209274291992,.381844699382782,.08574072271585464,-.22140294313430786,.09954823553562164,.05536961928009987,.007217769976705313,.11571413278579712,.07483956217765808,-.050284408032894135,.06381522864103317,-.179198756814003,.01068852562457323,.17522947490215302,-.040017470717430115,-.06253920495510101,.1664653867483139,-.08438115566968918,.0787641704082489,.09969695657491684,.025776932016015053,-.015373931266367435,.04027456417679787,-.16158515214920044,.06796210259199142,.03825607895851135,-.07058008760213852,-.053613919764757156,.06573382765054703,-.0780831128358841,.03848731145262718,-.04154280573129654,.03192881494760513,-.11837425082921982,-.008832031860947609,-.17669562995433807,.022153321653604507,.1471276432275772,-.3505503535270691,.2174217700958252,.17404583096504211,.004080954473465681,.1256873458623886,.10075440257787704,.022602524608373642,.05218315124511719,-.03110552951693535,-.24010390043258667,-.11348815262317657,.09650778770446777,-.03394476696848869,.1190771758556366,.04267069697380066]]},{label:"ViceMayorDanilo",descriptors:[[-.1397884339094162,.06458695977926254,.08087919652462006,.006457516923546791,-.008902466855943203,-.07887104898691177,-.029823483899235725,-.18986418843269348,.12397219985723495,-.07832291722297668,.3034699559211731,-.09126802533864975,-.21540674567222595,-.09619422256946564,-.025943364948034286,.15118560194969177,-.22508467733860016,-.11799255013465881,-.04339376837015152,.02069118246436119,.004136675503104925,-.10558711737394333,.04840929061174393,.002527581062167883,-.10503574460744858,-.36334043741226196,-.06661936640739441,-.13580405712127686,.06044270098209381,-.021764853969216347,-.042433857917785645,.09168408066034317,-.18261897563934326,-.019327377900481224,.0318404845893383,.087980255484581,-.026663143187761307,-.03617800772190094,.26975998282432556,-.040590617805719376,-.20875799655914307,-.0037042831536382437,-.029416482895612717,.20438392460346222,.18279780447483063,.03313228487968445,.018222618848085403,-.12679041922092438,.1308111697435379,-.2501239776611328,.03784560039639473,.17296096682548523,.1259392648935318,.053981002420186996,.017330193892121315,-.15130841732025146,.01890690252184868,.056347962468862534,-.1538967490196228,.009484455920755863,.08661264181137085,-.14224985241889954,.027565129101276398,-.019588066264986992,.25844913721084595,.10945479571819305,-.13032710552215576,-.03491787239909172,.19965794682502747,-.0467955581843853,-.00010992718307534233,.0026990773621946573,-.12311824411153793,-.21477532386779785,-.3057275116443634,.0510387048125267,.3727019727230072,.08584994822740555,-.20188291370868683,.023753907531499863,-.16504448652267456,.012186512351036072,.10001309961080551,.08842001855373383,-.05366166681051254,-.06543128937482834,-.09785463660955429,-.05530084669589996,.2071515917778015,-.09890959411859512,-.011472187936306,.17331357300281525,-.060123853385448456,.05616290122270584,.0004784368793480098,-.0003399515408091247,-.06436308473348618,-.00829260889440775,-.12651269137859344,.0040826559998095036,.004249722231179476,-.03459903597831726,.021040935069322586,.113514244556427,-.19350290298461914,.03503863885998726,.025126224383711815,-.02864649146795273,.0613822378218174,-.014999977312982082,-.061338115483522415,-.09681303799152374,.07908329367637634,-.28255802392959595,.28147804737091064,.1736319363117218,.0452190525829792,.17724420130252838,.09788930416107178,.05897898226976395,-.002354852156713605,-.016190316528081894,-.11907653510570526,-.0553346648812294,.0989043191075325,.09731053560972214,-9507474896963686e-20,.010097003541886806],[-.11651341617107391,.07838834822177887,.0010424349457025528,-.08175315707921982,-.012139447033405304,-.014159980230033398,-.012786569073796272,-.1610361486673355,.18309952318668365,-.11358840763568878,.3083140254020691,-.012985794804990292,-.2084185630083084,-.15635137259960175,.038488853722810745,.06880737096071243,-.22921882569789886,-.13183948397636414,-.0966629832983017,-.047844480723142624,-.0020799420308321714,-.046502385288476944,.0708412453532219,-.009272146970033646,-.19138452410697937,-.32266250252723694,-.058237601071596146,-.08916017413139343,.04682369902729988,-.028493285179138184,-.08108381181955338,-.02123696729540825,-.2552865743637085,-.0644446313381195,.024709319695830345,.12526464462280273,-.037984780967235565,-.024933673441410065,.21666309237480164,-.040322743356227875,-.18900488317012787,.009279031306505203,.010518348775804043,.19872236251831055,.1839994341135025,.06056467816233635,-.014849264174699783,-.09899848699569702,.10946787148714066,-.1906241923570633,.10030443221330643,.19765391945838928,.15825220942497253,.0332782119512558,.024272290989756584,-.1426278054714203,-.008384652435779572,.11778820306062698,-.1315748691558838,-.03103451244533062,.04612931236624718,-.0986393615603447,.02205050364136696,-.025084659457206726,.24918051064014435,.11355264484882355,-.1372629553079605,-.08282636106014252,.14971056580543518,-.06616482138633728,-.04661034047603607,.022370535880327225,-.13350729644298553,-.2153390496969223,-.3425409197807312,.051892802119255066,.3755958080291748,.1132553294301033,-.16151830554008484,.03030410222709179,-.1555602252483368,-.00884313602000475,.06408663094043732,.09324528276920319,-.09317616373300552,.029130594804883003,-.09419050067663193,.05484864115715027,.20171509683132172,-.05368029326200485,-.06492657959461212,.15325124561786652,-.03811940923333168,.050788410007953644,.006421675439924002,.020024878904223442,-.08195823431015015,.007998540997505188,-.09574738144874573,.024530313909053802,.06536397337913513,-.046577129513025284,.029866471886634827,.1523647904396057,-.219978466629982,.08329782634973526,.02960204891860485,-.060311298817396164,.03822942078113556,-.020403169095516205,-.0008301630150526762,-.09149671345949173,.05478772148489952,-.3329152464866638,.2644771337509155,.20214715600013733,.03348373994231224,.216631218791008,.07165677845478058,.029704419896006584,.013994243927299976,.023434029892086983,-.15064018964767456,-.09000647068023682,.023825842887163162,.05709884688258171,.14673440158367157,.05283013731241226]]},{label:"MayorAngelo",descriptors:[[-.06407240033149719,.04439827799797058,.03393502160906792,-.02628880925476551,-.03380724415183067,-.0667005255818367,-.04187275096774101,-.11610505729913712,.07801815867424011,-.03386983647942543,.251492977142334,-.06347374618053436,-.1569322794675827,-.2027444988489151,.018682435154914856,.1640617549419403,-.19302576780319214,-.11641073226928711,-.11196182668209076,.05693677067756653,.033581219613552094,-.06893662363290787,.053112488240003586,.019439946860074997,-.07058274000883102,-.39522987604141235,-.07952955365180969,-.09516146034002304,.07277758419513702,-.0360722616314888,-.11817962676286697,.023140694946050644,-.2203056812286377,-.14526745676994324,.0310306828469038,.1288820505142212,-.034946806728839874,-.0472983755171299,.17016519606113434,-.03651781007647514,-.23948828876018524,.05674544349312782,-.0006264009280130267,.21528099477291107,.21571749448776245,.06624156981706619,.0392586924135685,-.10309134423732758,.1237354502081871,-.17817385494709015,.07010222971439362,.12256419658660889,.1171792522072792,.07551524043083191,-.002083096420392394,-.0925464928150177,.024802500382065773,.12384839355945587,-.14802078902721405,-.010503457859158516,.059579186141490936,-.07956410199403763,-.017213014885783195,-.10869255661964417,.18598638474941254,.06777570396661758,-.10197942703962326,-.12890233099460602,.11431734263896942,-.08682442456483841,-.014004262164235115,.05495242774486542,-.14033421874046326,-.17730018496513367,-.3269025385379791,.04457136616110802,.3755749464035034,.09988552331924438,-.24089092016220093,-.03699246793985367,-.07729647308588028,.003190530464053154,.13218174874782562,.09356757998466492,.010435670614242554,.05016963183879852,-.11361051350831985,-.008797591552138329,.18565288186073303,-.08395622670650482,-.006595597602427006,.1580667346715927,-.019452253356575966,.08323004841804504,.03547622635960579,.044121019542217255,-.040629368275403976,.054305627942085266,-.15467625856399536,.004404166247695684,.08099302649497986,-.04266856610774994,.005899392068386078,.08007457107305527,-.09718840569257736,.10944586247205734,.026721477508544922,.04781138896942139,.06589122861623764,-.042386893182992935,-.05283815413713455,-.1072675883769989,.1181713193655014,-.19281215965747833,.2229858785867691,.21913419663906097,.03400701656937599,.10461429506540298,.08208607137203217,.09239143878221512,-.062264349311590195,-.022116733714938164,-.20543570816516876,-.016724346205592155,.10122863948345184,.0347934365272522,.07989277690649033,-.010741415433585644],[-.0834481418132782,.02351249009370804,.0010367617942392826,-.02706112340092659,.005953917745500803,-.08371786028146744,-.020734280347824097,-.13075943291187286,.07702619582414627,-.04201969876885414,.26706400513648987,-.08158499002456665,-.13362184166908264,-.18859651684761047,.03434114530682564,.14150461554527283,-.20185932517051697,-.08483408391475677,-.13272762298583984,.02348615601658821,.038648657500743866,-.02069694921374321,.08622509986162186,.029306311160326004,-.06905349344015121,-.41209864616394043,-.09697315096855164,-.12114879488945007,.05345058813691139,-.012626237235963345,-.10878929495811462,.0333678312599659,-.23779690265655518,-.13773179054260254,.007007407024502754,.0861157774925232,-.008968399837613106,-.02450099214911461,.14712978899478912,.016671553254127502,-.2343263179063797,.044856492429971695,.022233884781599045,.20724622905254364,.20191574096679688,.10818886756896973,.004986501764506102,-.09782619029283524,.11017725616693497,-.15931105613708496,.05974511057138443,.10328954458236694,.0916116014122963,.05674687772989273,.00792683381587267,-.06262002885341644,.04078894853591919,.07308671623468399,-.1442943960428238,-.0226194579154253,.06903243809938431,-.07469029724597931,-.0033151984680444,-.08602353930473328,.1770571768283844,.08216774463653564,-.06970296055078506,-.10464408993721008,.0985226109623909,-.09768078476190567,-.03782579302787781,.059349771589040756,-.11862415820360184,-.1796550154685974,-.32022857666015625,.03400719165802002,.3629896640777588,.0794811025261879,-.19011752307415009,-.030657446011900902,-.07476192712783813,-.027507783845067024,.16615957021713257,.10114561766386032,.007460047025233507,.040192097425460815,-.11774225533008575,-.0016454574652016163,.19015075266361237,-.07081057131290436,.004728921223431826,.1917058229446411,-.05299196019768715,.09333694726228714,.030129631981253624,.06868985295295715,-.07010926306247711,.08552642166614532,-.12186931818723679,.023405689746141434,.0927872359752655,-.01541064865887165,-.005815878976136446,.06675884872674942,-.10923267900943756,.09781025350093842,.008300893940031528,.02739114873111248,.0703916996717453,-.06191295012831688,-.012762024067342281,-.09602665901184082,.06866393238306046,-.17525960505008698,.18953968584537506,.20428688824176788,.0093014445155859,.11527489125728607,.05335605889558792,.08270355314016342,-.08019125461578369,-.02129535935819149,-.2651926577091217,-.01717723347246647,.11059308052062988,.03313005343079567,.045759111642837524,-.013884511776268482]]},{label:"ViceMayorRey",descriptors:[[-.03489901125431061,.04741566255688667,-.007583158556371927,-.03870182856917381,-.12380503118038177,-.035982951521873474,-.058060504496097565,-.15630222856998444,.0684157982468605,-.1024196520447731,.16240376234054565,-.080141581594944,-.18125560879707336,-.10196905583143234,-.0636727437376976,.17931339144706726,-.14171957969665527,-.11155817657709122,-.10168036073446274,-.05234925448894501,.022571751847863197,.03436858579516411,-.0015912314411252737,.010057657025754452,-.06100873649120331,-.26874005794525146,-.08275377005338669,-.043620940297842026,-.0034692620392888784,-.024403436109423637,-.08185230195522308,-.04627029970288277,-.20339134335517883,-.0981253907084465,.06462053209543228,.030078982934355736,-.04286699742078781,-.07331090420484543,.17999298870563507,.006189428269863129,-.18737348914146423,.0539008304476738,.0788063257932663,.21215324103832245,.18191832304000854,.08706610649824142,-.025490446016192436,-.1828773021697998,.17890769243240356,-.15529131889343262,.05216168984770775,.12564542889595032,.08174823969602585,.07904212176799774,.004329732619225979,-.08100972324609756,.08095178753137589,.10864420235157013,-.10700583457946777,-.04291195422410965,.10337504744529724,-.027128836140036583,-.016057712957262993,-.07624774426221848,.25172215700149536,.039037756621837616,-.0856289491057396,-.14563600718975067,.10823410004377365,-.14761115610599518,-.09871101379394531,-.016529085114598274,-.06778043508529663,-.13153330981731415,-.3129575252532959,.02948543056845665,.37931889295578003,.1236216276884079,-.24638685584068298,.012985551729798317,-.055960651487112045,.03566017746925354,.22517161071300507,.09306861460208893,-.03439386188983917,.007634268142282963,-.07241149246692657,-.06689174473285675,.23890940845012665,-.09450627863407135,-.00809838343411684,.21939432621002197,.04826323315501213,.05581880733370781,.08532942086458206,.03591281548142433,-.08744190633296967,.054582007229328156,-.0968308225274086,.028438789770007133,.11677916347980499,-.04606598988175392,.0633220374584198,.12732936441898346,-.16226771473884583,.14882177114486694,-.021517017856240273,.03145806863903999,.06475397944450378,-.024106502532958984,-.07947677373886108,-.10412527620792389,.09656306356191635,-.21195043623447418,.18526031076908112,.12460779398679733,-.010558960027992725,.1261512041091919,.11176210641860962,.14394019544124603,-.06110306456685066,.017781909555196762,-.17363949120044708,-.07123880833387375,.10693937540054321,.0036478349938988686,.09013209491968155,.029853468760848045],[-.03489901125431061,.04741566255688667,-.007583158556371927,-.03870182856917381,-.12380503118038177,-.035982951521873474,-.058060504496097565,-.15630222856998444,.0684157982468605,-.1024196520447731,.16240376234054565,-.080141581594944,-.18125560879707336,-.10196905583143234,-.0636727437376976,.17931339144706726,-.14171957969665527,-.11155817657709122,-.10168036073446274,-.05234925448894501,.022571751847863197,.03436858579516411,-.0015912314411252737,.010057657025754452,-.06100873649120331,-.26874005794525146,-.08275377005338669,-.043620940297842026,-.0034692620392888784,-.024403436109423637,-.08185230195522308,-.04627029970288277,-.20339134335517883,-.0981253907084465,.06462053209543228,.030078982934355736,-.04286699742078781,-.07331090420484543,.17999298870563507,.006189428269863129,-.18737348914146423,.0539008304476738,.0788063257932663,.21215324103832245,.18191832304000854,.08706610649824142,-.025490446016192436,-.1828773021697998,.17890769243240356,-.15529131889343262,.05216168984770775,.12564542889595032,.08174823969602585,.07904212176799774,.004329732619225979,-.08100972324609756,.08095178753137589,.10864420235157013,-.10700583457946777,-.04291195422410965,.10337504744529724,-.027128836140036583,-.016057712957262993,-.07624774426221848,.25172215700149536,.039037756621837616,-.0856289491057396,-.14563600718975067,.10823410004377365,-.14761115610599518,-.09871101379394531,-.016529085114598274,-.06778043508529663,-.13153330981731415,-.3129575252532959,.02948543056845665,.37931889295578003,.1236216276884079,-.24638685584068298,.012985551729798317,-.055960651487112045,.03566017746925354,.22517161071300507,.09306861460208893,-.03439386188983917,.007634268142282963,-.07241149246692657,-.06689174473285675,.23890940845012665,-.09450627863407135,-.00809838343411684,.21939432621002197,.04826323315501213,.05581880733370781,.08532942086458206,.03591281548142433,-.08744190633296967,.054582007229328156,-.0968308225274086,.028438789770007133,.11677916347980499,-.04606598988175392,.0633220374584198,.12732936441898346,-.16226771473884583,.14882177114486694,-.021517017856240273,.03145806863903999,.06475397944450378,-.024106502532958984,-.07947677373886108,-.10412527620792389,.09656306356191635,-.21195043623447418,.18526031076908112,.12460779398679733,-.010558960027992725,.1261512041091919,.11176210641860962,.14394019544124603,-.06110306456685066,.017781909555196762,-.17363949120044708,-.07123880833387375,.10693937540054321,.0036478349938988686,.09013209491968155,.029853468760848045]]},{label:"MayorMildred",descriptors:[[-.12551243603229523,.0031320645939558744,.09361321479082108,-.03395143896341324,-.0635574534535408,-.06677757203578949,-.05204533413052559,-.14173373579978943,.11196643859148026,-.13287724554538727,.17909780144691467,-.12647956609725952,-.2732209861278534,-.019662728533148766,-.09974365681409836,.22231809794902802,-.13319775462150574,-.12026844173669815,-.09378828853368759,.024400031194090843,.0722702294588089,-.0035300757735967636,.03762006759643555,.08936890214681625,-.08565302938222885,-.36512988805770874,-.07232177257537842,-.01684069260954857,-.0784657895565033,-.04121612012386322,-.0027367500588297844,.07059185951948166,-.20471547544002533,-.030204884707927704,.0009085290948860347,.08586657792329788,.014962207525968552,-.17397642135620117,.12541474401950836,-.06755746155977249,-.3051644265651703,-.021309608593583107,.07769808918237686,.2197062373161316,.1340356320142746,-.03376036509871483,.02427987940609455,-.17059369385242462,.09060724079608917,-.21674101054668427,-.028095651417970657,.08811626583337784,-.001883678836748004,.039008963853120804,.03065527230501175,-.12386909127235413,.07504298537969589,.15481796860694885,-.14933179318904877,-.024782683700323105,.05001353845000267,-.05868273973464966,-.0022719360422343016,-.14862766861915588,.16982467472553253,.1329793930053711,-.09667816013097763,-.22124098241329193,.1435832381248474,-.18176992237567902,-.051957327872514725,.04990409314632416,-.12081886827945709,-.21872299909591675,-.32275477051734924,-.03762304410338402,.2913205027580261,.1311311423778534,-.22391189634799957,.07680151611566544,.0022834530100226402,.03726760670542717,.13046570122241974,.2228514850139618,.0639009177684784,.08298027515411377,-.07896844297647476,-.01866624690592289,.21897131204605103,-.05008797347545624,-.02017156407237053,.2362498939037323,.007252017501741648,-.0806829184293747,.06055700033903122,.034527409821748734,-.13667558133602142,.07105418294668198,-.2051296830177307,.006571151316165924,.04358041658997536,.059415463358163834,.007922212593257427,.1006137877702713,-.11298339813947678,.13994283974170685,-.04045979678630829,-.012675773352384567,.06139591336250305,-.05366441607475281,-.0473846010863781,-.07548659294843674,.09763137251138687,-.18095985054969788,.14034366607666016,.1334589719772339,.08544246852397919,.13816173374652863,.07486377656459808,.1303730309009552,.002498308662325144,.04442915692925453,-.2035796344280243,-.007691741455346346,.1223958358168602,-.0562942810356617,.04089346528053284,-.027677021920681],[-.10862080007791519,-.017173727974295616,.011487198062241077,-.12291716784238815,-.08228481560945511,-.062466494739055634,-.051106300204992294,-.10809289664030075,.11924006789922714,-.1402907371520996,.21896237134933472,-.16368260979652405,-.2152334600687027,-.027812926098704338,-.06791559606790543,.20905736088752747,-.23903888463974,-.10833356529474258,-.0666356310248375,.01843925192952156,.07199569791555405,-.05022377520799637,.012118383310735226,.07962889969348907,-.11795981228351593,-.35070592164993286,-.050466276705265045,-.0194228682667017,-.056976694613695145,-.04818267375230789,.007766942027956247,.0641493871808052,-.21827712655067444,-.02921886183321476,.023942604660987854,.1003197431564331,-.006837964523583651,-.13492146134376526,.17363406717777252,-.05908206105232239,-.28240951895713806,-.03111245110630989,.10391554981470108,.20047862827777863,.16045917570590973,.023320620879530907,-.027623526751995087,-.1547069400548935,.11545272171497345,-.234768807888031,-.026245884597301483,.10223950445652008,.016273247078061104,.028572995215654373,-.029695529490709305,-.10307557135820389,.06234050542116165,.1566883772611618,-.16057227551937103,-.044650718569755554,.08414424955844879,-.07132831960916519,.002735225250944495,-.1391402930021286,.2250690907239914,.13433204591274261,-.14765818417072296,-.16542842984199524,.13557295501232147,-.13889147341251373,-.05342232808470726,.03545858711004257,-.09594091773033142,-.22879716753959656,-.3041074872016907,-.06287258118391037,.3148387372493744,.10560861229896545,-.20014603435993195,.0030103735625743866,-.02189321257174015,.015183379873633385,.16900195181369781,.18598449230194092,.035041000694036484,.028596866875886917,-.07567113637924194,-.007968141697347164,.24225179851055145,-.0623830147087574,-.01887298747897148,.19824451208114624,.0004914524615742266,-.0202415119856596,.023835884407162666,.050461508333683014,-.1242557168006897,.07543400675058365,-.1963231861591339,.02653409354388714,.02440479025244713,.03975532948970795,.005297885276377201,.14202065765857697,-.11152451485395432,.13807278871536255,-.01396436057984829,-.03167887032032013,.040739934891462326,-.03662725165486336,-.03123403713107109,-.10441607981920242,.07789095491170883,-.1869259625673294,.1234491690993309,.15734261274337769,.09139566868543625,.15188828110694885,.08979969471693039,.10516133159399033,-.004858748987317085,.029723888263106346,-.23492346704006195,.0023495000787079334,.07716750353574753,-.012891838327050209,.09821780025959015,-.03410032391548157]]},{label:"ViceMayorIvan",descriptors:[[-.19698739051818848,.06701759994029999,.019842345267534256,-.006554493214935064,-.040678005665540695,-.056619562208652496,-.07213412970304489,-.14983758330345154,.16754558682441711,-.07198350131511688,.2631153166294098,-.05721224844455719,-.22723722457885742,-.04558812454342842,-.09840695559978485,.11153673380613327,-.24982620775699615,-.06657087057828903,-.01786900870501995,-.02390141598880291,.10599753260612488,-.04680740833282471,.029385622590780258,.06774285435676575,-.09950350970029831,-.2562521994113922,-.13696013391017914,-.11495907604694366,.018848909065127373,-.012604942545294762,-.08895738422870636,-.05003701150417328,-.23942986130714417,-.1595877707004547,-.0008462941041216254,.05803525447845459,-.01181492768228054,-.023762192577123642,.15789151191711426,-.056776609271764755,-.10247167199850082,-.013002992607653141,.009058629162609577,.25639262795448303,.12824009358882904,.09895209223031998,-.037745628505945206,-.11700562387704849,.05574076250195503,-.18755166232585907,.02780057303607464,.17553438246250153,.11381447315216064,.08550263941287994,-.003348506521433592,-.1684044897556305,.04772764444351196,.16717824339866638,-.08027990907430649,.045104190707206726,.04388253763318062,-.04254591092467308,.06007592752575874,-.0415547750890255,.2816062867641449,.09130130708217621,-.10923346132040024,-.15220586955547333,.12123796343803406,-.0645318478345871,-.05779220536351204,.04690209776163101,-.15224462747573853,-.2200576663017273,-.321144163608551,.026854366064071655,.4174967408180237,.0751284509897232,-.19645217061042786,.023075634613633156,-.16258381307125092,-.013140140101313591,.13067775964736938,.07175910472869873,-.01621483638882637,.0140836825594306,-.11995016038417816,-.03371540084481239,.19182460010051727,-.058896008878946304,-.042064592242240906,.18152567744255066,-.00534080620855093,.02968665026128292,.05518214777112007,.029803568497300148,-.06815366446971893,.036889828741550446,-.1363513469696045,.027673130854964256,.01243455521762371,-.027016794309020042,-.02444980852305889,.10936791449785233,-.15267367660999298,.03303150087594986,.043911103159189224,-.018290286883711815,-.03648892790079117,-.03292519599199295,-.13350331783294678,-.06612393260002136,.1427987962961197,-.30183467268943787,.2426966279745102,.20116037130355835,.05478546768426895,.1727498322725296,.051086731255054474,.06331098824739456,-.026179146021604538,.04049983620643616,-.16211268305778503,-.032629307359457016,.08708412200212479,-.014472405426204205,.05510129779577255,.007742932066321373],[-.14284977316856384,.05428915098309517,.08126845955848694,-.06449995189905167,-.06973644345998764,-.0433303527534008,-.03877236694097519,-.1219908595085144,.13415691256523132,-.1238514706492424,.28049856424331665,-.009598184376955032,-.25807809829711914,-.007081201765686274,-.10097859799861908,.11009828001260757,-.1887955516576767,-.10251564532518387,-.03267698362469673,-.006013661623001099,.1275678426027298,-.09030140936374664,.016313528642058372,.00510916905477643,-.07459208369255066,-.2733425796031952,-.16312173008918762,-.05606686323881149,.0092929657548666,-.07861536741256714,-.036110375076532364,-.06178215146064758,-.26855534315109253,-.09260249882936478,-.08307050913572311,.0054913656786084175,-.012269408442080021,-.12048736959695816,.13544538617134094,-.03483070060610771,-.14114581048488617,.003050672123208642,-.01400204747915268,.19996768236160278,.17449317872524261,.03881053999066353,-.021116243675351143,-.07453073561191559,.05557338893413544,-.2600144147872925,.04286421462893486,.08697257936000824,.1515059769153595,.06967424601316452,-.008209607563912868,-.16686995327472687,.08645429462194443,.1153831034898758,-.14273545145988464,.030136000365018845,.01708298921585083,-.059187185019254684,.05640106275677681,-.00791255570948124,.26590394973754883,.1406073421239853,-.11379913240671158,-.14480261504650116,.1511487364768982,-.07608485966920853,-.01353154331445694,.034084998071193695,-.138351708650589,-.19219425320625305,-.28180062770843506,.06213108077645302,.4217015206813812,.08112283796072006,-.20169422030448914,.02050803042948246,-.17780591547489166,.0002822735987138003,.0744953602552414,.038989175111055374,-.041226208209991455,.0035738437436521053,-.16514021158218384,-8184574835468084e-20,.22134166955947876,-.06753400713205338,-.09402313828468323,.22633111476898193,-.028462620452046394,.029338309541344643,.07451347261667252,.07596579939126968,-.07723388075828552,.03626377880573273,-.11512073129415512,.035067278891801834,.024647101759910583,-.0708063468337059,-.0833829790353775,.13726617395877838,-.13642790913581848,.07256758213043213,-.018737927079200745,-.012637910433113575,-.046808600425720215,-.07651686668395996,-.13981099426746368,-.03438154608011246,.09788601845502853,-.28026846051216125,.22595196962356567,.18910124897956848,.032156676054000854,.1442023664712906,.08040189743041992,.02661164104938507,.009901094250380993,-.006505424156785011,-.1786264330148697,-.042450860142707825,.08577557653188705,-.023217756301164627,.06378278136253357,.03143228590488434]]},{label:"MayorNadya",descriptors:[[-.09340772032737732,-.010145669803023338,.08963791280984879,-.011001748964190483,-.0960320308804512,-.05182454362511635,-.010349494405090809,-.17633098363876343,.10043227672576904,-.16718700528144836,.18792836368083954,-.09005039185285568,-.20564520359039307,.006760204676538706,-.03730608522891998,.20749202370643616,-.13853850960731506,-.12457267194986343,-.08028207719326019,-.05743572860956192,.006122511345893145,-.021055161952972412,-.03217143192887306,-.008163750171661377,-.04411124810576439,-.3105415403842926,-.07516400516033173,-.004404154606163502,.06102142855525017,-.030314086005091667,-.10659829527139664,.04895975440740585,-.19606435298919678,-.06703097373247147,.10362455993890762,.15961377322673798,-.04307015985250473,-.04269944876432419,.17550428211688995,-.038749370723962784,-.21297301352024078,.05054202675819397,.047673534601926804,.20569759607315063,.20290587842464447,.04719318449497223,-.027914609760046005,-.1647425889968872,.14325112104415894,-.20918427407741547,-.027232971042394638,.10964414477348328,.09569524228572845,.05892234668135643,-.023946095257997513,-.16562055051326752,.01879754476249218,.1322239190340042,-.15434026718139648,-.012564470991492271,.09675343334674835,-.11048624664545059,.025549277663230896,-.05479243025183678,.2519010603427887,.03860055282711983,-.13091565668582916,-.13017937541007996,.16072677075862885,-.15264450013637543,.03640775755047798,-.017133614048361778,-.12254728376865387,-.17421989142894745,-.2629625201225281,.023298047482967377,.44050243496894836,.06532926112413406,-.17075452208518982,.046181678771972656,-.07444842159748077,.014557946473360062,.13702598214149475,.09751588106155396,-.018546761944890022,-.002103486331179738,-.032041359692811966,-.04364044591784477,.24529294669628143,-.07351396232843399,.026233410462737083,.15769797563552856,-.03732479736208916,.0532982163131237,.04355202242732048,-.005649960599839687,-.10625601559877396,-.011676074005663395,-.16397768259048462,-.044658415019512177,-.0948423519730568,-.10743948072195053,.07648464292287827,.15367485582828522,-.1983335316181183,.13552823662757874,-.04899686574935913,.014136455953121185,.042536791414022446,.019000744447112083,-.07077061384916306,-.11186583340167999,.12518782913684845,-.2510741651058197,.1795751005411148,.23349259793758392,.03020625188946724,.1376998871564865,.07498583197593689,.10256803035736084,.0032182170543819666,.08376262336969376,-.1712007075548172,-.002637501573190093,.06776242703199387,-.03454650193452835,.04921896010637283,-.002849442418664694],[-.09340772032737732,-.010145669803023338,.08963791280984879,-.011001748964190483,-.0960320308804512,-.05182454362511635,-.010349494405090809,-.17633098363876343,.10043227672576904,-.16718700528144836,.18792836368083954,-.09005039185285568,-.20564520359039307,.006760204676538706,-.03730608522891998,.20749202370643616,-.13853850960731506,-.12457267194986343,-.08028207719326019,-.05743572860956192,.006122511345893145,-.021055161952972412,-.03217143192887306,-.008163750171661377,-.04411124810576439,-.3105415403842926,-.07516400516033173,-.004404154606163502,.06102142855525017,-.030314086005091667,-.10659829527139664,.04895975440740585,-.19606435298919678,-.06703097373247147,.10362455993890762,.15961377322673798,-.04307015985250473,-.04269944876432419,.17550428211688995,-.038749370723962784,-.21297301352024078,.05054202675819397,.047673534601926804,.20569759607315063,.20290587842464447,.04719318449497223,-.027914609760046005,-.1647425889968872,.14325112104415894,-.20918427407741547,-.027232971042394638,.10964414477348328,.09569524228572845,.05892234668135643,-.023946095257997513,-.16562055051326752,.01879754476249218,.1322239190340042,-.15434026718139648,-.012564470991492271,.09675343334674835,-.11048624664545059,.025549277663230896,-.05479243025183678,.2519010603427887,.03860055282711983,-.13091565668582916,-.13017937541007996,.16072677075862885,-.15264450013637543,.03640775755047798,-.017133614048361778,-.12254728376865387,-.17421989142894745,-.2629625201225281,.023298047482967377,.44050243496894836,.06532926112413406,-.17075452208518982,.046181678771972656,-.07444842159748077,.014557946473360062,.13702598214149475,.09751588106155396,-.018546761944890022,-.002103486331179738,-.032041359692811966,-.04364044591784477,.24529294669628143,-.07351396232843399,.026233410462737083,.15769797563552856,-.03732479736208916,.0532982163131237,.04355202242732048,-.005649960599839687,-.10625601559877396,-.011676074005663395,-.16397768259048462,-.044658415019512177,-.0948423519730568,-.10743948072195053,.07648464292287827,.15367485582828522,-.1983335316181183,.13552823662757874,-.04899686574935913,.014136455953121185,.042536791414022446,.019000744447112083,-.07077061384916306,-.11186583340167999,.12518782913684845,-.2510741651058197,.1795751005411148,.23349259793758392,.03020625188946724,.1376998871564865,.07498583197593689,.10256803035736084,.0032182170543819666,.08376262336969376,-.1712007075548172,-.002637501573190093,.06776242703199387,-.03454650193452835,.04921896010637283,-.002849442418664694]]},{label:"ViceMayorRobinson",descriptors:[[-.07688301056623459,.07062207162380219,.048597775399684906,-.025025881826877594,-.00044993479968979955,-.10343026369810104,.010883646085858345,-.16681136190891266,.10736455768346786,-.05863279476761818,.26106858253479004,-.07216834276914597,-.19780667126178741,-.21058569848537445,.04098428040742874,.1449926644563675,-.14784128963947296,-.17125795781612396,-.12593068182468414,-.07487639039754868,.007643469609320164,-.09983398765325546,.05905575305223465,.026325203478336334,-.15253891050815582,-.3816951513290405,-.08986779302358627,-.14546817541122437,-.017164330929517746,-.05499742925167084,-.051850464195013046,.05956372618675232,-.17643305659294128,-.09135980159044266,-.03156781941652298,.11537624895572662,-.001664247247390449,-.04320551082491875,.19629494845867157,-.027737632393836975,-.19659338891506195,.017227403819561005,.03320804238319397,.23493818938732147,.24066592752933502,.02311881072819233,.03938060998916626,-.06063340604305267,.06796538829803467,-.171908438205719,-.013480680994689465,.14086177945137024,.05896984413266182,.02812659926712513,.04360722377896309,-.06586258858442307,.005612610839307308,.07865818589925766,-.20299740135669708,-.06919661164283752,.010647465474903584,-.10628736019134521,-.07728403061628342,-.051020655781030655,.2334422767162323,.13613420724868774,-.08311105519533157,-.04643532261252403,.21709708869457245,-.11736718565225601,-.04895791411399841,-.035509493201971054,-.15604305267333984,-.15762163698673248,-.3306517004966736,.04897143691778183,.3889388144016266,.054505959153175354,-.1916627585887909,.03643641620874405,-.11524347215890884,.002899335464462638,.10431218147277832,.02285797894001007,-.07032037526369095,.014162987470626831,-.1282631903886795,.03783346340060234,.16145609319210052,-.061656396836042404,.017104163765907288,.12944205105304718,-.03757697716355324,.02579791285097599,.0738123208284378,.042618732899427414,-.08208364248275757,.06170922517776489,-.19541414082050323,.0077923801727592945,.11300314217805862,-.07666634023189545,.038400083780288696,.08454173058271408,-.15296946465969086,.0205729678273201,.05638841539621353,-.05328943207859993,.02897713892161846,-.004016111604869366,-.07012157142162323,-.11987940222024918,.12455523014068604,-.2000352293252945,.16861042380332947,.232684925198555,-.03098461404442787,.12788251042366028,.0900455191731453,.0753629058599472,-.06351540982723236,-.024920176714658737,-.18278010189533234,-.011949843727052212,.07574300467967987,.07444737106561661,.042333025485277176,.03351527824997902],[-.07688301056623459,.07062207162380219,.048597775399684906,-.025025881826877594,-.00044993479968979955,-.10343026369810104,.010883646085858345,-.16681136190891266,.10736455768346786,-.05863279476761818,.26106858253479004,-.07216834276914597,-.19780667126178741,-.21058569848537445,.04098428040742874,.1449926644563675,-.14784128963947296,-.17125795781612396,-.12593068182468414,-.07487639039754868,.007643469609320164,-.09983398765325546,.05905575305223465,.026325203478336334,-.15253891050815582,-.3816951513290405,-.08986779302358627,-.14546817541122437,-.017164330929517746,-.05499742925167084,-.051850464195013046,.05956372618675232,-.17643305659294128,-.09135980159044266,-.03156781941652298,.11537624895572662,-.001664247247390449,-.04320551082491875,.19629494845867157,-.027737632393836975,-.19659338891506195,.017227403819561005,.03320804238319397,.23493818938732147,.24066592752933502,.02311881072819233,.03938060998916626,-.06063340604305267,.06796538829803467,-.171908438205719,-.013480680994689465,.14086177945137024,.05896984413266182,.02812659926712513,.04360722377896309,-.06586258858442307,.005612610839307308,.07865818589925766,-.20299740135669708,-.06919661164283752,.010647465474903584,-.10628736019134521,-.07728403061628342,-.051020655781030655,.2334422767162323,.13613420724868774,-.08311105519533157,-.04643532261252403,.21709708869457245,-.11736718565225601,-.04895791411399841,-.035509493201971054,-.15604305267333984,-.15762163698673248,-.3306517004966736,.04897143691778183,.3889388144016266,.054505959153175354,-.1916627585887909,.03643641620874405,-.11524347215890884,.002899335464462638,.10431218147277832,.02285797894001007,-.07032037526369095,.014162987470626831,-.1282631903886795,.03783346340060234,.16145609319210052,-.061656396836042404,.017104163765907288,.12944205105304718,-.03757697716355324,.02579791285097599,.0738123208284378,.042618732899427414,-.08208364248275757,.06170922517776489,-.19541414082050323,.0077923801727592945,.11300314217805862,-.07666634023189545,.038400083780288696,.08454173058271408,-.15296946465969086,.0205729678273201,.05638841539621353,-.05328943207859993,.02897713892161846,-.004016111604869366,-.07012157142162323,-.11987940222024918,.12455523014068604,-.2000352293252945,.16861042380332947,.232684925198555,-.03098461404442787,.12788251042366028,.0900455191731453,.0753629058599472,-.06351540982723236,-.024920176714658737,-.18278010189533234,-.011949843727052212,.07574300467967987,.07444737106561661,.042333025485277176,.03351527824997902]]},{label:"MayorJennie",descriptors:[[-.07746104151010513,-.013660425320267677,.07081625610589981,-.06436914205551147,-.09316243976354599,-.10332102328538895,-.02221647836267948,-.11961547285318375,.19178363680839539,-.10922644287347794,.1845688670873642,-.07804086059331894,-.19869573414325714,-.07869363576173782,-.022646211087703705,.23038150370121002,-.17759349942207336,-.13709792494773865,-.10573653131723404,-.017699237912893295,.06398086249828339,.0020695363637059927,.05510034039616585,.0467606745660305,-.1147356778383255,-.34681016206741333,-.0897083505988121,-.06354059278964996,.0014553774381056428,-.007079977076500654,-.08457730710506439,-.0039647482335567474,-.17593389749526978,-.11589999496936798,.0978509783744812,.0940970927476883,-.03660355508327484,-.14703549444675446,.17784038186073303,-.024776576086878777,-.31766101717948914,-.024464217945933342,.07040706276893616,.15396171808242798,.1876760572195053,.0681726410984993,.024552952498197556,-.18071378767490387,.18650031089782715,-.2523730397224426,.03152947500348091,.08658350259065628,.02312769740819931,.028373323380947113,.028864962980151176,-.14363069832324982,.028084658086299896,.20259808003902435,-.19572225213050842,-.08001662790775299,.06504298746585846,-.06408233940601349,-.035321157425642014,-.07573840767145157,.19914649426937103,.1434364914894104,-.11509009450674057,-.1673932522535324,.1547977328300476,-.17023274302482605,-.012193958275020123,.051916006952524185,-.1083599179983139,-.19692999124526978,-.3044028878211975,-.04983104020357132,.4251224398612976,.062659852206707,-.15157189965248108,.011140305548906326,-.05647981911897659,.07044194638729095,.14400255680084229,.14887690544128418,.0010058601619675756,.06614463776350021,-.07164662331342697,-.05317435413599014,.21369069814682007,-.10910027474164963,.03031502291560173,.21816307306289673,.023250818252563477,.07196468859910965,.03383643925189972,.030179178342223167,-.0974995568394661,.05425969883799553,-.15592648088932037,.0006747310399077833,.04206142947077751,.07774151861667633,.06479837000370026,.08778125047683716,-.15395240485668182,.08502626419067383,-.011607456021010876,-.018982775509357452,.03878014162182808,-.08069783449172974,-.0142293656244874,-.13737915456295013,.07249312102794647,-.20984183251857758,.10766851902008057,.18887153267860413,.022692078724503517,.17051665484905243,.05410628393292427,.06375593692064285,.00556098110973835,-.01706739515066147,-.2128809690475464,.04527723416686058,.11233635991811752,-.015345258638262749,.0426202230155468,-.03138922154903412],[-.07577604055404663,-.015877706930041313,.04435892775654793,-.05670428276062012,-.132711261510849,-.09636805951595306,-.032614629715681076,-.13389210402965546,.1815139651298523,-.17708316445350647,.1788197159767151,-.10781776905059814,-.17948824167251587,-.1128726452589035,-.05679284408688545,.21951039135456085,-.16980214416980743,-.15552052855491638,-.06144031509757042,.009459193795919418,.08516835421323776,.0010806338395923376,.08022144436836243,.06594686210155487,-.10305090993642807,-.38225048780441284,-.08452674001455307,-.06942404061555862,.0040284148417413235,-.05245229974389076,-.06741536408662796,.03279799595475197,-.1861676573753357,-.11966634541749954,.04656150937080383,.11028368026018143,-.0010309411445632577,-.1245269700884819,.17022797465324402,-.031183084473013878,-.2909559905529022,-.023206032812595367,.04590758681297302,.17111782729625702,.146403968334198,.06435184180736542,.04042922705411911,-.2144695222377777,.15608595311641693,-.21341611444950104,-.0014712308766320348,.05440555140376091,.03190924972295761,.0014953076606616378,.03120603784918785,-.11172995716333389,.04849913716316223,.17720788717269897,-.16411250829696655,-.0366295725107193,.05975435674190521,-.05170128494501114,-.011628931388258934,-.09373537451028824,.2377638965845108,.09181861579418182,-.07941209524869919,-.13717138767242432,.15863338112831116,-.17049920558929443,-.05520649254322052,.06030592694878578,-.08072297275066376,-.17042744159698486,-.30989354848861694,-.0845823585987091,.41139256954193115,.09641289710998535,-.16787859797477722,.0060000852681696415,-.04434240981936455,.07133562117815018,.15459154546260834,.16505594551563263,-.012875175103545189,.05637744069099426,-.0835675448179245,-.02800794318318367,.2070143222808838,-.08012659847736359,.005010145250707865,.19267188012599945,.031615547835826874,.09174911677837372,.04785286262631416,-.0004209267208352685,-.10727440565824509,.0741971805691719,-.13942068815231323,.004317549057304859,.05812922492623329,.0511038564145565,.05226055160164833,.10572975873947144,-.1382908672094345,.07756837457418442,-.05640941858291626,-.03893467038869858,.061499323695898056,-.03869554400444031,-.023757988587021828,-.11059828847646713,.07238669693470001,-.2088204324245453,.10456951707601547,.1911642700433731,.02368503250181675,.18385520577430725,.060798343271017075,.10006805509328842,-.026943236589431763,-.014900431036949158,-.21684154868125916,.02941213920712471,.1237286627292633,-.04063684865832329,.08527672290802002,-.03791512921452522]]},{label:"ViceMayorJeric",descriptors:[[-.02354303188621998,.1289709359407425,.02306082285940647,-.039384882897138596,-.042324669659137726,.02149592526257038,-.05246215686202049,-.1074480190873146,.1715802699327469,-.042775947600603104,.3279222548007965,.0194547139108181,-.23718754947185516,-.16964180767536163,-.04285012185573578,.15269839763641357,-.1856500655412674,-.08962187170982361,-.07578542828559875,-.03872796148061752,.07326485216617584,-.0006995432777330279,.09188743680715561,-.020821716636419296,-.035440701991319656,-.39628568291664124,-.10497689992189407,-.07151547819375992,.03769513964653015,-.13649967312812805,-.07914787530899048,.0011004508705809712,-.1893339902162552,-.10531793534755707,.008927414193749428,-.0020893486216664314,-.05963947996497154,-.04353278502821922,.19831140339374542,.02788660116493702,-.14590899646282196,.048286598175764084,.023734265938401222,.2090533822774887,.23147523403167725,.08674004673957825,.00998194795101881,-.14727924764156342,.12765425443649292,-.14394088089466095,.012110035866498947,.1703302264213562,.14105848968029022,.05506828799843788,-.03919240087270737,-.11073289811611176,.023058682680130005,.02952776849269867,-.19152793288230896,-.05643025040626526,.03551064804196358,-.10359669476747513,-.09492674469947815,.043980617076158524,.19067293405532837,.09551558643579483,-.09371184557676315,-.18669264018535614,.15738976001739502,-.08834803849458694,-.02126309461891651,.08531530201435089,-.1575988531112671,-.1716831624507904,-.25768351554870605,.017834557220339775,.42743784189224243,-.009410078637301922,-.20348051190376282,-.014941050671041012,-.12272011488676071,-.0034036317374557257,.07955527305603027,.06993796676397324,-.09362471103668213,-.0169562716037035,-.16832886636257172,.02275477536022663,.1530430018901825,-.088868647813797,-.07552618533372879,.1958819031715393,.03497634455561638,.14348872005939484,.10505501925945282,.1500711292028427,-.06329003721475601,.04927125945687294,-.15732085704803467,-.027116816490888596,.07016795128583908,-.04020991548895836,-.025592384859919548,.07459910213947296,-.10686507821083069,.13929080963134766,.030641963705420494,.013736726716160774,.01931692473590374,-.08431719988584518,-.04609176889061928,-.08558961749076843,.09657932072877884,-.2449936717748642,.18218837678432465,.17283104360103607,.02244741842150688,.1366942673921585,.06707853823900223,.08736617118120193,-.05779494717717171,-.08256581425666809,-.19107864797115326,-.04660813882946968,.02213139645755291,.037491049617528915,.054514165967702866,-.03479588404297829],[-.07663566619157791,.09337267279624939,.004421527031809092,-.02468775399029255,.027290185913443565,-.013927128165960312,-.04162653535604477,-.17994612455368042,.20362189412117004,-.10725309699773788,.2266107201576233,.016418417915701866,-.2763359248638153,-.13702574372291565,-.04130673035979271,.12333519011735916,-.16386719048023224,-.13584059476852417,-.14339543879032135,-.067080557346344,.03229805827140808,.005530914291739464,.09083161503076553,-.004825171083211899,-.14507009088993073,-.32584428787231445,-.13573402166366577,-.09744885563850403,-.005092643667012453,-.10647169500589371,-.0376756377518177,.02496844157576561,-.1934574544429779,-.04855165630578995,-.017043327912688255,.09037435054779053,-.0011561205610632896,-.032506633549928665,.18946383893489838,.005925990175455809,-.16421635448932648,-.008948726579546928,.0029913452453911304,.1801920235157013,.25762516260147095,.03845355659723282,.010535606183111668,-.13621732592582703,.16242080926895142,-.15227670967578888,.038188740611076355,.13266126811504364,.11988484859466553,.10293835401535034,-.004663332365453243,-.16793717443943024,-.012888501398265362,.15704670548439026,-.19596517086029053,-.012522353790700436,-.015604422427713871,-.1340489238500595,-.08073022961616516,.06422322243452072,.20203721523284912,.15458670258522034,-.16248375177383423,-.15476827323436737,.22281815111637115,-.15383882820606232,-.0077932472340762615,.053499024361371994,-.13019026815891266,-.16895894706249237,-.31094154715538025,.006645692512392998,.41515570878982544,-7711383659625426e-20,-.1883680373430252,.02283649332821369,-.11378084868192673,-.016408205032348633,.03388204798102379,.12743356823921204,-.10682476311922073,.019510501995682716,-.10939681529998779,.005629735067486763,.18295548856258392,-.002965157385915518,-.07801516354084015,.21243934333324432,-.0384560264647007,.12293403595685959,.09031897783279419,.12607286870479584,-.10263612121343613,-.010497277602553368,-.11203186959028244,-.011645090766251087,.03537647798657417,-.05467284098267555,-.02829754166305065,.06586245447397232,-.05383192002773285,.17984913289546967,.031239990144968033,.05259931460022926,.0014174823882058263,-.06926722824573517,-.036355141550302505,-.05574595183134079,.14105667173862457,-.28481248021125793,.20618487894535065,.13449548184871674,-.027419444173574448,.1856623739004135,.070628821849823,.12813393771648407,-.0208133477717638,-.012086153961718082,-.21007657051086426,-.04158199205994606,.051867999136447906,.006971539929509163,.08651790022850037,.01554673071950674]]},{label:"MayorRico",descriptors:[[-.06724484264850616,.04962025582790375,.05101750046014786,.05706499516963959,.022040629759430885,-.0339944027364254,.019167017191648483,-.1989070028066635,.13161024451255798,-.0994490310549736,.3069061040878296,-.11508394032716751,-.1733124554157257,-.19151821732521057,.043263789266347885,.17737801373004913,-.13061673939228058,-.16379347443580627,-.12275949865579605,-.020671043545007706,.013717942871153355,-.08677076548337936,.051628392189741135,.0056211212649941444,-.06667289137840271,-.35090988874435425,-.08274645358324051,-.1261986792087555,.08388113975524902,.005297870375216007,-.02638833224773407,.006753583438694477,-.2778032422065735,-.10017431527376175,.016697635874152184,.09812773019075394,-.04753363877534866,-.03586285188794136,.22134500741958618,-.05584835261106491,-.1480962485074997,-.004178171511739492,-.0025254120118916035,.18733163177967072,.16554807126522064,.06790944188833237,.01496073603630066,-.12112142145633698,.06758701801300049,-.1727306842803955,.004140119533985853,.10666104406118393,.13102486729621887,.09479519724845886,-.021685432642698288,-.12413918226957321,.06955263018608093,.08286099135875702,-.19977617263793945,.00536966510117054,.06225528195500374,-.07262410968542099,-.06258432567119598,.0029865645337849855,.30328288674354553,.08770579844713211,-.11569587141275406,-.10772770643234253,.16362057626247406,-.09150764346122742,.016606375575065613,.06818899512290955,-.12640424072742462,-.1638668328523636,-.3328259587287903,.026773033663630486,.5067748427391052,.005962101276963949,-.24395164847373962,-.05042761564254761,-.09665551781654358,.010890224948525429,.13381198048591614,.08207345008850098,-.0228202473372221,-.05262725427746773,-.12736454606056213,-.015604852698743343,.1788330227136612,-.059882067143917084,-.03245728835463524,.1474481076002121,-.03868858516216278,.04595695436000824,-.0005000092787668109,.03651534765958786,-.020827265456318855,.029656291007995605,-.12001337110996246,-.020504018291831017,.006466811988502741,.01606455259025097,.0029793682042509317,.08132260292768478,-.12382571399211884,.11902010440826416,.030121546238660812,.0008855041232891381,.04509555175900459,-.027114955708384514,-.06791456788778305,-.0685679167509079,.09882742166519165,-.26361143589019775,.18846578896045685,.17049328982830048,.0022014230489730835,.12464459985494614,.03737766668200493,.127265065908432,-.04750367999076843,.012689133174717426,-.25118571519851685,-.03609504550695419,.03547169640660286,.019658515229821205,.05324742570519447,.004198100883513689],[-.05493296682834625,.0323844738304615,.0514594130218029,.019252585247159004,-.0014541968703269958,-.060945991426706314,.018283331766724586,-.16438427567481995,.11785857379436493,-.15143078565597534,.3032660484313965,-.11453737318515778,-.11496257781982422,-.1314404159784317,.057373594492673874,.1463869959115982,-.20082630217075348,-.17610280215740204,-.1445315033197403,-.02261999435722828,.060577619820833206,-.029405219480395317,.0007237093523144722,-.04683469235897064,-.08170643448829651,-.3775636851787567,-.10641784220933914,-.127151221036911,.13238272070884705,-.07698255777359009,.009459645487368107,-.013477129861712456,-.2558918595314026,-.041634172201156616,-.0008705676882527769,.051786478608846664,-.008435802534222603,.001237443182617426,.15392205119132996,-.0013183680130168796,-.19732074439525604,-.012038670480251312,-.013673112727701664,.18858326971530914,.14071141183376312,.11945793777704239,-.0008427676511928439,-.09933700412511826,.07071388512849808,-.20895245671272278,.02685820311307907,.09522616118192673,.05448494851589203,.07607917487621307,.005523824132978916,-.09019932150840759,.009613711386919022,.06214726343750954,-.1906091272830963,.07178494334220886,.11234737187623978,-.12371503561735153,-.08181014657020569,.0011566474568098783,.2845250070095062,.05393645539879799,-.09613656252622604,-.15149642527103424,.16552668809890747,-.1162186786532402,-.060585711151361465,.017182592302560806,-.08622417598962784,-.1438235640525818,-.3327813446521759,.05557879060506821,.4861525595188141,-.014746355824172497,-.167779341340065,.05252678692340851,-.10570753365755081,.009708334691822529,.12067385762929916,.07464607059955597,-.014779663644731045,.02238636277616024,-.13263048231601715,.0005584027385339141,.2026609629392624,-.10472946614027023,.011409816332161427,.15685978531837463,-.1306699514389038,.05273963138461113,.003707926021888852,.006916063372045755,-.06171095371246338,.009735153056681156,-.09618910402059555,-.06351500749588013,.06033017858862877,.006430963519960642,-.024066446349024773,.09345822036266327,-.10421691834926605,.12660247087478638,-.016997992992401123,-.02095700055360794,.049878790974617004,-.006757770664989948,-.07987058162689209,-.12281540036201477,.08505372703075409,-.24310027062892914,.21151530742645264,.21021932363510132,.0458776019513607,.12590833008289337,.07337617874145508,.1037774309515953,-.021090487018227577,.05584949627518654,-.265680193901062,-.03762440383434296,.043294403702020645,.061195582151412964,-.03134636580944061,-.0050773173570632935]]},{label:"ViceMayorRommel",descriptors:[[-.1233535036444664,.0908019170165062,.07370059192180634,-.015057466924190521,-.07056732475757599,-.1037258729338646,-.03415095806121826,-.17852115631103516,.13566964864730835,-.1132126972079277,.26074403524398804,-.07274829596281052,-.15354354679584503,-.15986473858356476,-.020450590178370476,.16435563564300537,-.1739543080329895,-.1388992816209793,-.08055193722248077,-.05262099206447601,.09460802376270294,-.03929830715060234,.12330444902181625,.0754440575838089,-.09128966927528381,-.39148813486099243,-.1367381364107132,-.10787735134363174,.06610913574695587,-.08320657908916473,-.10283181816339493,-.02253277413547039,-.22900661826133728,-.14045558869838715,-.07616879045963287,.06916753202676773,-.023215066641569138,-.13450662791728973,.1621679663658142,-.022435693070292473,-.1705799251794815,.03691074997186661,.0010236564557999372,.24448150396347046,.18018721044063568,.06648963689804077,-.0013979468494653702,-.08341898769140244,.0977238342165947,-.18752340972423553,.044347699731588364,.07452256232500076,.07923106849193573,-.015367819927632809,.08038678765296936,-.07785442471504211,.05379340797662735,.09004639089107513,-.17845577001571655,.005082183051854372,.023499714210629463,-.08139029890298843,-.01699438877403736,-.091049425303936,.23909801244735718,.15283207595348358,-.04069792479276657,-.02675590291619301,.1635666936635971,-.07431737333536148,-.026737509295344353,-.021990593522787094,-.11588700860738754,-.16235482692718506,-.3197125196456909,.022426960989832878,.440160870552063,.08163336664438248,-.21136759221553802,.019575579091906548,-.05626591295003891,.036886248737573624,.15282922983169556,.06475362181663513,-.0976749137043953,.01615922711789608,-.1787879914045334,.037583183497190475,.14132395386695862,-.05448349937796593,-.04053382948040962,.21471798419952393,-.015936991199851036,.061935871839523315,.11287165433168411,.036514438688755035,-.10446890443563461,.056241314858198166,-.16050025820732117,.04250428453087807,.12933725118637085,-.07236368954181671,-.037724364548921585,.05905277654528618,-.11770119518041611,.004665137734264135,.03858475387096405,-.037127528339624405,.026409482583403587,-.03243062272667885,-.15292546153068542,-.0874389037489891,.08402363210916519,-.21061503887176514,.16969247162342072,.20082324743270874,-.028022605925798416,.18725956976413727,.08721734583377838,.0853920578956604,-.0544465035200119,-.02778480388224125,-.16362830996513367,-.025907114148139954,.1469714194536209,.011426330544054508,.0797543153166771,.04897793382406235],[-.12672291696071625,.07355719804763794,.08138761669397354,.0014075610088184476,-.06960155814886093,-.13472455739974976,-.07208137214183807,-.14698518812656403,.1621401607990265,-.09132814407348633,.22176894545555115,-.0444999523460865,-.11047118902206421,-.15720656514167786,.01801932416856289,.17637565732002258,-.19141341745853424,-.10317742079496384,-.10201410204172134,-.06041531637310982,.04608914256095886,-.08513913303613663,.09607309848070145,.05945974588394165,-.09982673078775406,-.39624249935150146,-.1254381388425827,-.08806753903627396,.06205013021826744,-.029754966497421265,-.11166772991418839,-.04167215898633003,-.20349054038524628,-.13488252460956573,-.02537538856267929,.04125450924038887,-.02523074671626091,-.10204683989286423,.13913729786872864,-.04447668790817261,-.1775926947593689,.02513519674539566,.007678438909351826,.19874684512615204,.20118924975395203,.10028630495071411,.014202370308339596,-.05140712484717369,.15280558168888092,-.190092533826828,.05770111829042435,.0733497366309166,.10005366057157516,.0024148873053491116,.12914803624153137,-.08282985538244247,.06619405001401901,.10167402029037476,-.20919960737228394,.00024623118224553764,.006708626169711351,-.0845523327589035,-.019051693379878998,-.05260704457759857,.21963514387607574,.1718398779630661,-.039202213287353516,-.07263465970754623,.1625567525625229,-.0758194550871849,.014460383914411068,-.030608411878347397,-.09643328189849854,-.192307248711586,-.35978421568870544,.01933951862156391,.4012974500656128,.11540462076663971,-.18644817173480988,.0152244558557868,-.054014094173908234,.013757724314928055,.11242806166410446,.022280849516391754,-.1128293126821518,.001819692668505013,-.14662860333919525,.0156623013317585,.14317739009857178,-.05273318663239479,-.025110425427556038,.20645931363105774,-.016074471175670624,.030333131551742554,.03375030308961868,.019351886585354805,-.10580047219991684,.06451761722564697,-.1276179850101471,.037104636430740356,.15338200330734253,-.04382052272558212,.01538148708641529,.02990192361176014,-.1790577471256256,.013023807667195797,.0304255373775959,-.01943265087902546,-.00904938206076622,-.006930094677954912,-.1747858077287674,-.06736572831869125,.07249763607978821,-.23976992070674896,.2162836790084839,.21885454654693604,.018425438553094864,.18248169124126434,.0475965216755867,.008313222788274288,-.01654851622879505,-.038634445518255234,-.08976541459560394,-.043132081627845764,.10372534394264221,.0007948054117150605,.06613999605178833,.08787313103675842]]}],Ru=()=>{const[r,n]=v1.useState("Loading..."),e="/face-rec/models",t=v1.useRef();let o=v1.useRef();const[a,i]=v1.useState("environment"),[s,u]=v1.useState([{id:"Nico",name:"Ian Nico Caulin",position:"Gwapo"},{id:"Mark",name:"Mark Gil Rusiana",position:"OJT"}]),[c,l]=v1.useState(!1),[h]=v1.useState([{id:"MayorEmmanuel",name:"Hon. Emmanuel L. Jamis",position:"ALUIJID - Mayor"},{id:"ViceMayorAlvin",name:"Hon. Alvin Giovanni A. Labis",position:"ALUBIJID - Vice Mayor"},{id:"MayorAlexis",name:"Hon. Alexis S. Quina",position:"BALINGASAG - Mayor"},{id:"ViceMayorFelix",name:"Hon. Vice Mayor Felix H. Borromeo",position:"BALINGASAG - Vice Mayor"},{id:"MayorAaron",name:"Hon. Mayor Aaron Paul S. Unabia",position:"BALINGOAN - Mayor"},{id:"ViceMayorFranklin",name:"Hon. Franklin C. Panulaya",position:"BALINGOAN - Vice Mayor"},{id:"MayorDann",name:"Hon. Mayor Dann Isaiah D. Lusterio",position:"BINUANGAN - Mayor"},{id:"ViceMayorMichelle",name:"Hon. Michelle C. Abao",position:"BINUANGAN - Vice Mayor"},{id:"MayorEdgar",name:"Hon. Mayor Edgar Lignes",position:"EL SALVADOR CITY - Mayor"},{id:"ViceMayorMark",name:"Hon.  Mark William U. Tan",position:"EL SALVADOR CITY - Vice Mayor"},{id:"MayorEric",name:"Hon. Mayor Eric G. Canosa",position:"GINGOOG CITY - Mayor"},{id:"ViceMayorThaddeus",name:"Hon.  Thaddeus “Tadoy” Lugod",position:"GINGOOG CITY - Vice Mayor"},{id:"MayorMeraluna",name:"Hon. Meraluna S. Abrogar",position:"CLAVERIA - Mayor"},{id:"ViceMayorReynante",name:"Hon. Reynante L. Salvaleon",position:"CLAVERIA - Vice Mayor"},{id:"MayorMugot",name:"Hon. Mayor Emmanuel Mugot",position:"GITAGUM - Mayor"},{id:"ViceMayorRudy",name:"Hon. Rudy O. Damasing",position:"GITAGUM - Vice Mayor"},{id:"MayorMercy",name:"Hon. Mayor Mercy Grace “Gagay” J. Acain",position:"INITAO - Mayor"},{id:"ViceMayorEnerito",name:"Hon. Vice Mayor Enerito “Gogoy” J. Acain V",position:"INITAO - Vice Mayor"},{id:"MayorRedentor",name:"Hon. Mayor Redentor “Red” S. Jardin",position:"JASAAN - Mayor"},{id:"ViceMayorJannus",name:"Hon. Vice Mayor Jannus Ray Acas Estor",position:"JASAAN - Vice Mayor"},{id:"MayorDanilo",name:"Hon. Danilo “Junjun” Artadi Lagbas Jr.",position:"KINOGUITAN - Mayor"},{id:"ViceMayorTomas",name:"Hon. Vice Mayor Tomas M. Zarate",position:"KINOGUITAN - Vice Mayor"},{id:"MayorJay",name:"Hon. Mayor Jay Albert C. Puertas",position:"LAGONGLONG - Mayor"},{id:"ViceMayorMarita",name:"Hon. Vice Mayor Marita D. Ramonal",position:"LAGONGLONG - Vice Mayor"},{id:"MayorDiosdado",name:"Hon. Mayor Diosdado T. Obsioma",position:"LAGUINDINGAN - Mayor"},{id:"ViceMayorRoy",name:"Hon. Vice Mayor Roy I. Macua",position:"LAGUINDINGAN - Vice Mayor"},{id:"Nico",name:"Ian Nico Caulin",position:"Gwapo"},{id:"Mark",name:"Mark Gil Rusiana",position:"OJT - Black white blue red hacker"},{id:"Alvin",name:"Alvin Nuska",position:"Gwapo King"},{id:"DICTMisOr.PD-Nideliza",name:"DICT Mis Or. PD-Nideliza Fe O. Nacilla",position:"DICT Mis. Or. Provincial Director"},{id:"DICT10RD-Ms.Sittie",name:"DICT 10 RD-Ms. Sittie Rahma Alawi",position:"DICT Region 10 Director"},{id:"Sarah",name:"Sarah Margaha",position:"My Everything"},{id:"PGMOBMD2Bliss",name:"Bliss Francis “Panky” Acain",position:"PGMO - Board Members District 2"},{id:"PGMOBMD2Dexter",name:"Dexter Yasay",position:"PGMO - Board Members District 2"},{id:"PGMOBMD1Fredrick",name:"Fredrick “Erick” Yu Khu",position:"PGMO - Board Members District 1"},{id:"PGMOBMD2Gerardo",name:"Gerardo “Boboy” Sabal III",position:"PGMO - Board Members District 2"},{id:"PGMOGovernorUnabia",name:"Hon.Peter Unabia",position:"PGMO - Governor"},{id:"PGMOViceGovernorJeremy",name:"Hon.Jeremy Jonahmar Pelaez",position:"PGMO - Vice Governor"},{id:"PGMOBMD1Jabi",name:"Jabi “Abing” Bernaldez",position:"PGMO - Board Members District 1"},{id:"PGMOBMD2Princess",name:"Princess Nacional Emano",position:"PGMO - Board Members District 2"},{id:"PGMOBMD1Rey",name:"Rey Buhisan",position:"PGMO - Board Members District 1"},{id:"PGMOBMD2Syremae",name:"Syremae “Say-say” Neri Emano ",position:"PGMO - Board Members District 2"},{id:"PGMOBMD1Wayne",name:"Wayne “Win” Militante",position:"PGMO - Board Members District 1"},{id:"PGMOBMD1Marlon",name:"Marlon Chan Kho",position:"PGMO - Board Members District 1"},{id:"MayorLeonardo",name:"Hon. Mayor Leonardo L. Uy",position:"LIBERTAD-Mayor"},{id:"ViceMayorSharon",name:"Hon. Vice Mayor Sharon M. Ballangan",position:"LIBERTAD-Vice Mayor "},{id:"MayorWellie",name:"Hon. Mayor Wellie G. Lim",position:"LUGAIT-Mayor "},{id:"ViceMayorRoger",name:"Hon. Vice Mayor Roger G. Lim",position:"LUGAIT-Vice Mayor "},{id:"MayorCharlie",name:"Hon. Mayor Charlie B. Buhisan",position:"MAGSAYSAY(LINUGOS)-Mayor"},{id:"ViceMayorGrace",name:"Hon. Vice Mayor Grace B. Abao",position:"MAGSAYSAY(LINUGOS)-ViceMayor"},{id:"MayorStephen",name:"Hon. Mayor Stephen S. Tan",position:"MANTICAO-Mayor"},{id:"ViceMayorRoberto",name:"Hon. Vice Mayor Roberto M. Lagrosas",position:"MANTICAO-ViceMayor"},{id:"MayorDonato",name:"Hon. Mayor Donato N. Chan",position:"MEDINA-Mayor"},{id:"ViceMayorPaulo",name:"Hon. Vice Mayor Paulo B. Magallanes",position:"MEDINA-ViceMayor"},{id:"MayorDennis",name:"Hon. Mayor Dennis L. Roa",position:"NAAWAN-Mayor"},{id:"ViceMayorAllan",name:"Hon. Vice Mayor Allan B. Roa",position:"NAAWAN-ViceMayor"},{id:"MayorJayfrancis",name:"Hon. Mayor Jayfrancis D. Bago",position:"OPOL-Mayor"},{id:"ViceMayorDanilo",name:"Hon. Vice Mayor Danilo E. Daroy",position:"OPOL-ViceMayor"},{id:"MayorAngelo",name:"Hon. Mayor Angelo G. Capistrano",position:"SALAY-Mayor"},{id:"ViceMayorRey",name:"Hon. Vice Mayor Rey Amelto K. Tan",position:"SALAY-ViceMayor"},{id:"MayorMildred",name:"Hon. Mayor Mildred L. Mondigo",position:"SUGBONGCOGON-Mayor"},{id:"ViceMayorIvan",name:"Hon. Vice Mayor Ivan Chester E. Lagbas",position:"SUGBONGCOGON-ViceMayor"},{id:"MayorNadya",name:"Hon. Mayor Nadya B. Emano-Elipe",position:"TAGOLOAN-Mayor"},{id:"ViceMayorRobinson",name:"Hon. Vice Mayor Robinson V. Sabio",position:"TAGOLOAN-ViceMayor"},{id:"MayorJennie",name:"Hon. Mayor Jennie Rosalie U. Mendez",position:"VILLANUEVA-Mayor"},{id:"ViceMayorJeric",name:"Hon. Vice Mayor Jeric G. Emano",position:"VILLANUEVA-ViceMayor"},{id:"MayorRico",name:"Hon. Mayor Rico T. Taray",position:"TALISAYAN-Mayor"},{id:"ViceMayorRommel",name:"Hon. Vice Mayor Rommel C. Maslog",position:"TALISAYAN-ViceMayor"}]);v1.useEffect(()=>{p(),t&&f()},[a]);const f=v1.useCallback(()=>{Promise.all([j0.ssdMobilenetv1.loadFromUri(e),j0.tinyFaceDetector.loadFromUri(e),j0.faceLandmark68Net.loadFromUri(e),j0.faceRecognitionNet.loadFromUri(e),j0.faceExpressionNet.loadFromUri(e)]).then(()=>{m()})},[]),p=v1.useCallback(()=>{t.current&&t.current.srcObject&&(t.current.srcObject.getTracks().forEach(function(x){x.stop()}),t.current.srcObject=null),navigator.mediaDevices.getUserMedia({video:{facingMode:a}}).then(v=>{t.current&&(t.current.srcObject=v,f())}).catch(v=>{console.log(v)})},[a,f]),d=async()=>Promise.all(Eu.map(async v=>{const g=v.descriptors.map(x=>new Float32Array(x));return new Qe(v.label,g)})),m=v1.useCallback(async()=>{const v=await d(),g=new _u(v),x=async()=>{const b=await wu(t.current,new L5).withFaceLandmarks().withFaceDescriptors();ts(o.current,{width:500,height:600});const y=K5(b,{width:500,height:600});o.current.getContext("2d").clearRect(0,0,500,600);const w=y.map(C=>g.findBestMatch(C.descriptor));Xi(o.current,y),w.forEach((C,S)=>{const k=y[S].detection.box;new v5(k,{label:C.toString()}).draw(o.current)}),requestAnimationFrame(x),u(w),n("Running")};x()},[d,s]);return U0.jsx("div",{className:" min-h-full w-full max-w-[1468px]  flex flex-col justify-center",children:U0.jsxs("div",{className:" border border-border  flex flex-col gap-5 items-center justify-center h-screen w-full ",children:[U0.jsx("div",{className:" text-foreground text-sm w-[300px] flex  justify-center",children:U0.jsx("p",{className:" font-semibold text-lg",children:" Face Rex v.1.1"})}),U0.jsxs("div",{className:" overflow-hidden w-full max-w-[500px] h-[500px] relative flex",children:[U0.jsx("div",{className:" ml-2 mt-5 absolute gap-2 text-primary col-span-1 flex flex-col ",children:s&&s.map((v,g)=>{const x=h.find(b=>b.id===v._label);return x?U0.jsxs("div",{className:" text-sm bg-card/50 backdrop-blur-md p-2 rounded-md",children:[U0.jsx("h3",{children:x.name}),U0.jsx("p",{children:x.position})]},g):null})}),U0.jsx("video",{crossOrigin:"anonymous",ref:t,className:" w-full h-full border-border border-2 rounded-md ",autoPlay:!0}),U0.jsx("canvas",{ref:o,className:"  w-full h-full  absolute"})]}),U0.jsxs("div",{className:" w-[300px]  grid  justify-center items-center  grid-cols-3  ",children:[U0.jsx("p",{className:" col-span-1 justify-start justify-self-start ",children:U0.jsx("span",{className:r=="Running"?"  justify-end justify-self-end text-green-600":" text-red-500 justify-end justify-self-end",children:r})}),c?U0.jsx(Q5,{className:" text-foreground col-span-1 justify-center justify-self-center self-center cursor-pointer",onClick:()=>{t.current.play(),l(!1)}}):U0.jsx(J5,{className:" text-foreground col-span-1 justify-center justify-self-center self-center cursor-pointer",onClick:()=>{t.current.pause(),l(!0)}}),U0.jsx(Z5,{className:a=="user"?" justify-end justify-self-end text-foreground rotate-180 transition-all duration-700 col-span-1 ":"  justify-end justify-self-end text-foreground col-span-1  rotate-0 transition-all duration-700",onClick:()=>{i(v=>v==="user"?"environment":"user"),p(),console.log(a)}})]})]})})};export{Ru as default};
